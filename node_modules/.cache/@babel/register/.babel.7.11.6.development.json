{
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\CopyAritclesAttachments.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\CopyAritclesAttachments.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\CopyAritclesAttachments.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\CopyAritclesAttachments.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\",
        "sourceFileName": "CopyAritclesAttachments.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar dotenv = require('dotenv');\n\nvar fs = require('fs');\n\ndotenv.config({\n  silent: true\n});\n\nvar _require = require('process'),\n    exit = _require.exit;\n\nvar parseCSV = require('csv-parse');\n\nvar _require2 = require('pg'),\n    Client = _require2.Client;\n\nvar ElapsedTime = require('elapsed-time');\n\nvar _require3 = require('assert'),\n    fail = _require3.fail;\n\nvar _require4 = require('console'),\n    dir = _require4.dir;\n\nvar pg = new Client({\n  user: 'postgres',\n  host: 'localhost',\n  database: 'postgres2',\n  password: 'test'\n});\npg.connect();\nvar startTimer = ElapsedTime[\"new\"]().start();\nvar fileImport = fs.readFileSync('./csv/OEM.csv', {\n  encoding: 'utf-8'\n});\nparseCSV(fileImport.toString('utf-8'), {\n  columns: ['FromOEM', 'FromYearFrom', 'FromYearTo', 'FromModel', 'ToOEM', 'ToYearFrom', 'ToYearTo', 'ToModel'],\n  skip_empty_lines: true,\n  from: 2\n}, /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(error, records) {\n    var lineNumber, totalUpdatedRecords, check, skippedArticleCount, currentFromFail, FromData, ToData, FromDataArticles, ToDataArticles, counter, failedArticles, articleCount, curFrom, counterTo, curTo, FromAttachmentData;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!error) {\n              _context.next = 3;\n              break;\n            }\n\n            console.log(['Error while parsing CSV: ' + error]);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            lineNumber = 0;\n            totalUpdatedRecords = 0;\n            check = records.length;\n            skippedArticleCount = 0;\n            currentFromFail = {};\n            lineNumber;\n\n          case 9:\n            if (!(lineNumber < check)) {\n              _context.next = 70;\n              break;\n            }\n\n            _context.next = 12;\n            return GetArticleIDFrom(records[lineNumber].FromModel, records[lineNumber].FromYearFrom, records[lineNumber].FromYearTo === 'NEWER' ? 0 : records[lineNumber].FromYearTo).then(function (res) {\n              // console.log(res.rows);  \n              return res.rows;\n            })[\"catch\"](function (res) {\n              console.log(res);\n            });\n\n          case 12:\n            FromData = _context.sent;\n            _context.next = 15;\n            return GetArticleIDTo(records[lineNumber].ToModel, records[lineNumber].ToYearFrom, records[lineNumber].ToYearTo === 'NEWER' ? 0 : records[lineNumber].ToYearTo).then(function (res) {\n              // console.log(res.rows);  \n              return res.rows;\n            })[\"catch\"](function (res) {\n              console.log(res);\n            });\n\n          case 15:\n            ToData = _context.sent;\n            _context.next = 18;\n            return GetAssociatedArticlesByID(FromData[0].id).then(function (res) {\n              return res.rows;\n            })[\"catch\"](function (err) {\n              return console.log(err);\n            });\n\n          case 18:\n            FromDataArticles = _context.sent;\n            _context.next = 21;\n            return GetAssociatedArticlesByID(ToData[0].id).then(function (res) {\n              return res.rows;\n            })[\"catch\"](function (err) {\n              return console.log(err);\n            });\n\n          case 21:\n            ToDataArticles = _context.sent;\n\n            if (!(FromDataArticles.length != ToDataArticles.length)) {\n              _context.next = 25;\n              break;\n            }\n\n            console.log('These bitches mis match.', ' From: ', FromDataArticles.length, ' To: ', ToDataArticles.length);\n            return _context.abrupt(\"return\");\n\n          case 25:\n            counter = 1;\n            failedArticles = [];\n            articleCount = FromDataArticles.length;\n            counter;\n\n          case 29:\n            if (!(counter < articleCount)) {\n              _context.next = 66;\n              break;\n            }\n\n            curFrom = FromDataArticles[counter];\n            counterTo = 0;\n            totalUpdatedRecords++;\n            counterTo;\n\n          case 34:\n            if (!(counterTo < ToDataArticles.length)) {\n              _context.next = 62;\n              break;\n            }\n\n            curTo = ToDataArticles[counterTo]; // if (curTo.fault1 != curFrom.fault1) continue;\n\n            if (!(curTo.fault2 != curFrom.fault2)) {\n              _context.next = 38;\n              break;\n            }\n\n            return _context.abrupt(\"continue\", 59);\n\n          case 38:\n            if (!(curTo.pid != curFrom.pid)) {\n              _context.next = 40;\n              break;\n            }\n\n            return _context.abrupt(\"continue\", 59);\n\n          case 40:\n            if (!(curTo.sid != curFrom.sid)) {\n              _context.next = 42;\n              break;\n            }\n\n            return _context.abrupt(\"continue\", 59);\n\n          case 42:\n            if (!(curTo.ppid != curFrom.ppid)) {\n              _context.next = 44;\n              break;\n            }\n\n            return _context.abrupt(\"continue\", 59);\n\n          case 44:\n            if (!(curTo.psid != curFrom.psid)) {\n              _context.next = 46;\n              break;\n            }\n\n            return _context.abrupt(\"continue\", 59);\n\n          case 46:\n            if (!(curTo.spn != curFrom.spn)) {\n              _context.next = 48;\n              break;\n            }\n\n            return _context.abrupt(\"continue\", 59);\n\n          case 48:\n            if (!(curTo.fmi != curFrom.fmi)) {\n              _context.next = 50;\n              break;\n            }\n\n            return _context.abrupt(\"continue\", 59);\n\n          case 50:\n            _context.next = 52;\n            return GetArticleAttachmentData(curFrom.id).then(function (res) {\n              return res.rows[0];\n            });\n\n          case 52:\n            FromAttachmentData = _context.sent;\n\n            if (!(FromAttachmentData === undefined)) {\n              _context.next = 57;\n              break;\n            }\n\n            // console.log(curFrom.id)\n            failedArticles.push(curFrom.id);\n            skippedArticleCount++;\n            return _context.abrupt(\"continue\", 59);\n\n          case 57:\n            // await PutArticleData(curTo.id, FromAttachmentData);\n            CopyFile(curFrom.id, curTo.id, FromAttachmentData.file_name);\n            UpdateConsoleProgress(lineNumber, check, counter, articleCount, totalUpdatedRecords, curFrom.id, skippedArticleCount);\n\n          case 59:\n            counterTo++;\n            _context.next = 34;\n            break;\n\n          case 62:\n            if (failedArticles.length) currentFromFail[records[lineNumber].FromModel] = failedArticles; // This was supposed to filter but all the articles don't have matching codes so... \n\n          case 63:\n            counter++;\n            _context.next = 29;\n            break;\n\n          case 66:\n            failedArticles = [];\n\n          case 67:\n            lineNumber++;\n            _context.next = 9;\n            break;\n\n          case 70:\n            fs.writeFileSync(\"FailedAttemps.text\", JSON.stringify(currentFromFail)); // console.log(currentFromFail);\n\n            exit();\n\n          case 72:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\n\nvar GetArticleIDFrom = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(FromModel, FromYearFrom, FromYearTo) {\n    var result;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return pg.query(\"SELECT id FROM models_pg where name ilike '%\".concat(FromModel, \"%' and year_from = \").concat(FromYearFrom, \" and year_to = \").concat(FromYearTo, \" and status <> 6\"));\n\n          case 2:\n            result = _context2.sent;\n\n            if (result.rows.length === 2) {\n              //console.log(`SELECT id FROM models_pg where name = '${FromModel}' and year_from = ${FromYearFrom} and year_to = ${FromYearTo} and status <> 6`);\n              result.rows = result.rows.splice(0, 1); //console.log('cleaned', result.rows);\n            }\n\n            return _context2.abrupt(\"return\", result);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function GetArticleIDFrom(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar GetArticleIDTo = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(ToModel, ToYearFrom, ToYearTo) {\n    var result;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return pg.query(\"SELECT id FROM models_pg where name = '\".concat(ToModel, \"' and year_from = \").concat(ToYearFrom, \" and year_to = \").concat(ToYearTo, \" and status <> 6\"));\n\n          case 2:\n            result = _context3.sent;\n\n            if (result.rows.length === 2) {\n              //console.log(`SELECT id FROM models_pg where name = '${ToModel}' and year_from = ${ToYearFrom} and year_to = ${ToYearTo} and status <> 6`);\n              result.rows = result.rows.splice(1, 1); //console.log('cleaned', result.rows);\n            }\n\n            if (result.rows.length === 0) {\n              console.log(\"SELECT id FROM models_pg where name = '\".concat(ToModel, \"' and year_from = \").concat(ToYearFrom, \" and year_to = \").concat(ToYearTo, \" and status <> 6\"));\n            }\n\n            return _context3.abrupt(\"return\", result);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function GetArticleIDTo(_x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar GetAssociatedArticlesByID = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(ModelId) {\n    var result;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return pg.query(\"SELECT * from articles_pg where model = \".concat(ModelId, \" order by id\"));\n\n          case 2:\n            result = _context4.sent;\n            return _context4.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function GetAssociatedArticlesByID(_x9) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar GetArticleAttachmentData = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(ArticleID) {\n    var result;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return pg.query(\"SELECT * from article_attachments_pg where article_id = \".concat(ArticleID));\n\n          case 2:\n            result = _context5.sent;\n            return _context5.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function GetArticleAttachmentData(_x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar PutArticleData = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(ArticleID, payload) {\n    var todaysDate, query, result;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            todaysDate = \"2020-10-22 6:00:00\";\n            query = \"INSERT INTO article_attachments_pg (id, article_id, directory, status, creation_date, edit_date, file_name) VALUES ((select MAX(id)+1 from article_attachments_pg id), \".concat(ArticleID, \", '\").concat(payload.directory, \"', \").concat(payload.status, \", '\").concat(todaysDate, \"', '\").concat(todaysDate, \"', '\").concat(payload.file_name, \"')\");\n            _context6.next = 4;\n            return pg.query(query);\n\n          case 4:\n            result = _context6.sent;\n            return _context6.abrupt(\"return\", result);\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function PutArticleData(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar UpdateConsoleProgress = function UpdateConsoleProgress(LineSet, check, Progress, TotalProgress, totalUpdatedRecords, currentModelFrom, skippedArticleCount) {\n  process.stdout.clearLine();\n  process.stdout.cursorTo(0);\n  process.stdout.write(\"Working on Model \".concat(LineSet + 1, \" of \").concat(check, \" | Updating Article \").concat(Progress + 1, \" of \").concat(TotalProgress, \" | Total Article Attachments Generated: \").concat(totalUpdatedRecords, \" | Elapsed Time: \").concat(startTimer.getValue(), \" | Skipped Articles: \").concat(skippedArticleCount));\n};\n\nvar CopyFile = function CopyFile(fromArticleId, toArticleId, fileName) {\n  //  681752006_attachments\n  console.log(dir);\n  var fromLocation = \"\".concat(process.cwd(), \"/Article_Attachments_Old/\").concat(fromArticleId, \"_attachments/\").concat(fileName);\n  var toLocationDir = \"\".concat(process.cwd(), \"/Article_Attachments_Updated/\").concat(toArticleId, \"_attachments/\");\n\n  if (!fs.existsSync(toLocationDir)) {\n    fs.mkdirSync(toLocationDir);\n  }\n\n  fs.copyFileSync(fromLocation, toLocationDir + fileName, function (err) {\n    if (err) throw err;\n    console.log(\"\".concat(fromLocation, \" copied to: \").concat(toLocation));\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "CopyAritclesAttachments.js"
      ],
      "names": [
        "dotenv",
        "require",
        "fs",
        "config",
        "silent",
        "exit",
        "parseCSV",
        "Client",
        "ElapsedTime",
        "fail",
        "dir",
        "pg",
        "user",
        "host",
        "database",
        "password",
        "connect",
        "startTimer",
        "start",
        "fileImport",
        "readFileSync",
        "encoding",
        "toString",
        "columns",
        "skip_empty_lines",
        "from",
        "error",
        "records",
        "console",
        "log",
        "lineNumber",
        "totalUpdatedRecords",
        "check",
        "length",
        "skippedArticleCount",
        "currentFromFail",
        "GetArticleIDFrom",
        "FromModel",
        "FromYearFrom",
        "FromYearTo",
        "then",
        "res",
        "rows",
        "FromData",
        "GetArticleIDTo",
        "ToModel",
        "ToYearFrom",
        "ToYearTo",
        "ToData",
        "GetAssociatedArticlesByID",
        "id",
        "err",
        "FromDataArticles",
        "ToDataArticles",
        "counter",
        "failedArticles",
        "articleCount",
        "curFrom",
        "counterTo",
        "curTo",
        "fault2",
        "pid",
        "sid",
        "ppid",
        "psid",
        "spn",
        "fmi",
        "GetArticleAttachmentData",
        "FromAttachmentData",
        "undefined",
        "push",
        "CopyFile",
        "file_name",
        "UpdateConsoleProgress",
        "writeFileSync",
        "JSON",
        "stringify",
        "query",
        "result",
        "splice",
        "ModelId",
        "ArticleID",
        "PutArticleData",
        "payload",
        "todaysDate",
        "directory",
        "status",
        "LineSet",
        "Progress",
        "TotalProgress",
        "currentModelFrom",
        "process",
        "stdout",
        "clearLine",
        "cursorTo",
        "write",
        "getValue",
        "fromArticleId",
        "toArticleId",
        "fileName",
        "fromLocation",
        "cwd",
        "toLocationDir",
        "existsSync",
        "mkdirSync",
        "copyFileSync",
        "toLocation"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\",
      "sourcesContent": [
        "const dotenv = require('dotenv');\r\nconst fs = require('fs');\r\ndotenv.config({silent: true});\r\nconst { exit } = require('process');\r\nconst parseCSV = require('csv-parse');\r\nconst { Client } = require('pg');\r\nconst ElapsedTime = require('elapsed-time');\r\nconst { fail } = require('assert');\r\nconst { dir } = require('console');\r\nconst pg = new Client({\r\n    user: 'postgres',\r\n    host: 'localhost',\r\n    database: 'postgres2',\r\n    password: 'test'\r\n});\r\n  \r\npg.connect();\r\n\r\nlet startTimer = ElapsedTime.new().start();\r\n\r\nlet fileImport = fs.readFileSync('./csv/OEM.csv', {encoding: 'utf-8'});\r\n\r\nparseCSV(fileImport.toString('utf-8'), {\r\n    columns: ['FromOEM', 'FromYearFrom', 'FromYearTo', 'FromModel', 'ToOEM', 'ToYearFrom', 'ToYearTo', 'ToModel'],\r\n    skip_empty_lines: true,\r\n    from: 2,\r\n}, async (error, records) => {\r\n    if (error) {\r\n        console.log(['Error while parsing CSV: ' + error]);\r\n        return;\r\n    }\r\n    let lineNumber = 0;\r\n    let totalUpdatedRecords = 0;\r\n    let check = records.length;\r\n    let skippedArticleCount = 0;\r\n    let currentFromFail = {}\r\n\r\n    for (lineNumber; lineNumber < check; lineNumber++) {\r\n\r\n        // console.log('current Line: ', lineNumber, 'Data: ', \r\n        // records[lineNumber].FromModel, records[lineNumber].FromYearFrom, records[lineNumber].FromYearTo === 'NEWER'? 0: records[lineNumber].FromYearTo,\r\n        // records[lineNumber].ToModel, records[lineNumber].ToYearFrom, records[lineNumber].ToYearTo === 'NEWER'? 0: records[lineNumber].ToYearTo\r\n        // )\r\n        let FromData = await GetArticleIDFrom(records[lineNumber].FromModel, records[lineNumber].FromYearFrom, records[lineNumber].FromYearTo === 'NEWER'? 0: records[lineNumber].FromYearTo)\r\n        .then(function (res) {\r\n            // console.log(res.rows);  \r\n            return res.rows;\r\n        })\r\n        .catch(function (res) {\r\n            console.log(res);  \r\n        });  \r\n\r\n        let ToData = await GetArticleIDTo(records[lineNumber].ToModel, records[lineNumber].ToYearFrom, records[lineNumber].ToYearTo === 'NEWER'? 0: records[lineNumber].ToYearTo)\r\n        .then(function (res) {\r\n            // console.log(res.rows);  \r\n            return res.rows\r\n        })\r\n        .catch(function (res) {\r\n            console.log(res);\r\n        });\r\n\r\n        let FromDataArticles = await GetAssociatedArticlesByID(FromData[0].id).then(res=>res.rows).catch(err=>console.log(err));\r\n        // console.log(FromDataArticles);\r\n        let ToDataArticles = await GetAssociatedArticlesByID(ToData[0].id).then(res=>res.rows).catch(err=>console.log(err));\r\n        // console.log(ToDataArticles);\r\n        if ( FromDataArticles.length != ToDataArticles.length){\r\n            console.log('These bitches mis match.', ' From: ',FromDataArticles.length, ' To: ', ToDataArticles.length);\r\n            return;\r\n        }\r\n    \r\n        let counter = 1;\r\n        let failedArticles = [];\r\n        let articleCount = FromDataArticles.length;\r\n        for (counter; counter < articleCount; counter++) {\r\n            let curFrom = FromDataArticles[counter];\r\n            let counterTo = 0;\r\n            totalUpdatedRecords++;\r\n            for (counterTo; counterTo < ToDataArticles.length; counterTo++) {\r\n                let curTo = ToDataArticles[counterTo];\r\n                // if (curTo.fault1 != curFrom.fault1) continue;\r\n                if (curTo.fault2 != curFrom.fault2) continue;\r\n                if (curTo.pid    != curFrom.pid) continue;\r\n                if (curTo.sid    != curFrom.sid) continue;\r\n                if (curTo.ppid   != curFrom.ppid) continue;\r\n                if (curTo.psid   != curFrom.psid) continue;\r\n                if (curTo.spn    != curFrom.spn) continue;\r\n                if (curTo.fmi    != curFrom.fmi) continue;                          \r\n                let FromAttachmentData = await GetArticleAttachmentData(curFrom.id).then(res => res.rows[0]);\r\n\r\n                if (FromAttachmentData === undefined) {\r\n                    // console.log(curFrom.id)\r\n                    failedArticles.push(curFrom.id);\r\n                    skippedArticleCount++;\r\n                    continue;\r\n                }\r\n\r\n                // await PutArticleData(curTo.id, FromAttachmentData);\r\n                CopyFile(curFrom.id, curTo.id, FromAttachmentData.file_name);\r\n                UpdateConsoleProgress(lineNumber, check, counter, articleCount, totalUpdatedRecords, curFrom.id, skippedArticleCount);\r\n                \r\n            }\r\n            if (failedArticles.length) currentFromFail[records[lineNumber].FromModel] = failedArticles; \r\n\r\n\r\n            // This was supposed to filter but all the articles don't have matching codes so... \r\n            }\r\n            failedArticles = []\r\n    } \r\n    fs.writeFileSync(`FailedAttemps.text`, JSON.stringify(currentFromFail))\r\n    // console.log(currentFromFail);\r\n    exit();\r\n\r\n});  \r\n\r\n\r\nconst GetArticleIDFrom = async (FromModel, FromYearFrom, FromYearTo) => {\r\n    let result =  await pg.query(`SELECT id FROM models_pg where name ilike '%${FromModel}%' and year_from = ${FromYearFrom} and year_to = ${FromYearTo} and status <> 6`)\r\n    if (result.rows.length === 2) {\r\n        //console.log(`SELECT id FROM models_pg where name = '${FromModel}' and year_from = ${FromYearFrom} and year_to = ${FromYearTo} and status <> 6`);\r\n        result.rows = result.rows.splice(0, 1);\r\n        //console.log('cleaned', result.rows);\r\n    }\r\n\r\n    return result;\r\n    \r\n}\r\n\r\n\r\nconst GetArticleIDTo = async (ToModel, ToYearFrom, ToYearTo) => {\r\n    let result =  await pg.query(`SELECT id FROM models_pg where name = '${ToModel}' and year_from = ${ToYearFrom} and year_to = ${ToYearTo} and status <> 6`)\r\n    if (result.rows.length === 2) {\r\n        //console.log(`SELECT id FROM models_pg where name = '${ToModel}' and year_from = ${ToYearFrom} and year_to = ${ToYearTo} and status <> 6`);\r\n        result.rows = result.rows.splice(1, 1);\r\n        //console.log('cleaned', result.rows);\r\n    } \r\n    if (result.rows.length === 0) {  \r\n        console.log(`SELECT id FROM models_pg where name = '${ToModel}' and year_from = ${ToYearFrom} and year_to = ${ToYearTo} and status <> 6`);\r\n    }\r\n    return result;\r\n    \r\n}\r\n\r\nconst GetAssociatedArticlesByID = async (ModelId) => {\r\n    const result = await pg.query(`SELECT * from articles_pg where model = ${ModelId} order by id`);\r\n    return result;\r\n}\r\n\r\nconst GetArticleAttachmentData = async (ArticleID) => {\r\n    //  This is an example return result of this query. \r\n    //\r\n    // {\r\n    //     id: 5472,\r\n    //     article_id: 681801911,\r\n    //     directory: 'C:\\\\inetpub\\\\wwwroot\\\\ACT_20200827_01\\\\Article_Attachments\\\\\\\\681801911_attachments\\\\784.pdf',\r\n    //     status: 1,\r\n    //     creation_date: 2020-10-08T11:13:03.611Z,\r\n    //     edit_date: null,\r\n    //     file_name: '784.pdf'\r\n    //   }\r\n    const result = await pg.query(`SELECT * from article_attachments_pg where article_id = ${ArticleID}`);\r\n    return result;\r\n}\r\n\r\nconst PutArticleData = async (ArticleID, payload) => {\r\n    const todaysDate = `2020-10-22 6:00:00`;\r\n    const query = `INSERT INTO article_attachments_pg (id, article_id, directory, status, creation_date, edit_date, file_name) VALUES ((select MAX(id)+1 from article_attachments_pg id), ${ArticleID}, '${payload.directory}', ${(payload.status)}, '${todaysDate}', '${todaysDate}', '${payload.file_name}')`;\r\n    const result = await pg.query(query); \r\n    return result;\r\n}\r\n\r\nconst UpdateConsoleProgress =  (LineSet, check, Progress, TotalProgress, totalUpdatedRecords, currentModelFrom, skippedArticleCount) => {\r\n    process.stdout.clearLine();\r\n    process.stdout.cursorTo(0);\r\n    process.stdout.write(`Working on Model ${LineSet+1} of ${check} | Updating Article ${Progress+1} of ${TotalProgress} | Total Article Attachments Generated: ${totalUpdatedRecords} | Elapsed Time: ${startTimer.getValue()} | Skipped Articles: ${skippedArticleCount}`);\r\n}\r\n\r\n\r\nconst CopyFile = (fromArticleId, toArticleId, fileName) => {\r\n    \r\n//  681752006_attachments\r\n    console.log(dir)\r\n    let fromLocation = `${process.cwd()}/Article_Attachments_Old/${fromArticleId}_attachments/${fileName}`\r\n    let toLocationDir = `${process.cwd()}/Article_Attachments_Updated/${toArticleId}_attachments/`\r\n    if (!fs.existsSync(toLocationDir)) {\r\n        fs.mkdirSync(toLocationDir);\r\n    }\r\n\r\n    fs.copyFileSync(fromLocation, toLocationDir + fileName, (err) => {\r\n        if (err) throw err;\r\n        console.log(`${fromLocation} copied to: ${toLocation}`);\r\n    });\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1603993807729
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\GetCounts.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\GetCounts.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\GetCounts.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\GetCounts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\",
        "sourceFileName": "GetCounts.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar dotenv = require('dotenv');\n\nvar fs = require('fs');\n\ndotenv.config({\n  silent: true\n});\n\nvar _require = require('process'),\n    exit = _require.exit;\n\nvar _require2 = require('pg'),\n    Client = _require2.Client;\n\nvar ElapsedTime = require('elapsed-time');\n\nvar pg = new Client({\n  user: 'postgres',\n  host: 'localhost',\n  database: 'testdb',\n  password: 'password'\n});\n\nvar GetModels = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var query, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = \"select * from models_pg where status <> 6\";\n            _context.next = 3;\n            return pg.query(query);\n\n          case 3:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function GetModels() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar GetArticles = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(model_id) {\n    var query, result;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            query = \"select * from articles_pg where model = \".concat(model_id, \" and status <> 6\");\n            _context2.next = 3;\n            return pg.query(query);\n\n          case 3:\n            result = _context2.sent;\n            return _context2.abrupt(\"return\", result);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function GetArticles(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar GetAttachments = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(article_id) {\n    var query, result;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            query = \"select * from articles_attachments where article_id = \".concat(article_id);\n            _context3.next = 3;\n            return pg.query(query);\n\n          case 3:\n            result = _context3.sent;\n            return _context3.abrupt(\"return\", result);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function GetAttachments(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n/*\r\n    get models\r\n        foreach models\r\n            get articles\r\n                foreach articles\r\n                    get attachements\r\n\r\n\r\n\r\n*/\n\n\npg.connect();\nfs.writeFileSync(\"ExportedArticleData.text\", JSON.stringify(currentFromFail));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdldENvdW50cy5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJyZXF1aXJlIiwiZnMiLCJjb25maWciLCJzaWxlbnQiLCJleGl0IiwiQ2xpZW50IiwiRWxhcHNlZFRpbWUiLCJwZyIsInVzZXIiLCJob3N0IiwiZGF0YWJhc2UiLCJwYXNzd29yZCIsIkdldE1vZGVscyIsInF1ZXJ5IiwicmVzdWx0IiwiR2V0QXJ0aWNsZXMiLCJtb2RlbF9pZCIsIkdldEF0dGFjaG1lbnRzIiwiYXJ0aWNsZV9pZCIsImNvbm5lY3QiLCJ3cml0ZUZpbGVTeW5jIiwiSlNPTiIsInN0cmluZ2lmeSIsImN1cnJlbnRGcm9tRmFpbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdELE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBRCxNQUFNLENBQUNHLE1BQVAsQ0FBYztBQUFDQyxFQUFBQSxNQUFNLEVBQUU7QUFBVCxDQUFkOztlQUNpQkgsT0FBTyxDQUFDLFNBQUQsQztJQUFoQkksSSxZQUFBQSxJOztnQkFDV0osT0FBTyxDQUFDLElBQUQsQztJQUFsQkssTSxhQUFBQSxNOztBQUNSLElBQU1DLFdBQVcsR0FBR04sT0FBTyxDQUFDLGNBQUQsQ0FBM0I7O0FBQ0EsSUFBTU8sRUFBRSxHQUFHLElBQUlGLE1BQUosQ0FBVztBQUNsQkcsRUFBQUEsSUFBSSxFQUFFLFVBRFk7QUFFbEJDLEVBQUFBLElBQUksRUFBRSxXQUZZO0FBR2xCQyxFQUFBQSxRQUFRLEVBQUUsUUFIUTtBQUlsQkMsRUFBQUEsUUFBUSxFQUFFO0FBSlEsQ0FBWCxDQUFYOztBQU9BLElBQU1DLFNBQVM7QUFBQSxxRUFBRztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDUkMsWUFBQUEsS0FEUTtBQUFBO0FBQUEsbUJBRU9OLEVBQUUsQ0FBQ00sS0FBSCxDQUFTQSxLQUFULENBRlA7O0FBQUE7QUFFUkMsWUFBQUEsTUFGUTtBQUFBLDZDQUdQQSxNQUhPOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQVRGLFNBQVM7QUFBQTtBQUFBO0FBQUEsR0FBZjs7QUFNQSxJQUFNRyxXQUFXO0FBQUEsc0VBQUcsa0JBQU9DLFFBQVA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1ZILFlBQUFBLEtBRFUscURBQ3lDRyxRQUR6QztBQUFBO0FBQUEsbUJBRUtULEVBQUUsQ0FBQ00sS0FBSCxDQUFTQSxLQUFULENBRkw7O0FBQUE7QUFFVkMsWUFBQUEsTUFGVTtBQUFBLDhDQUdUQSxNQUhTOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQVhDLFdBQVc7QUFBQTtBQUFBO0FBQUEsR0FBakI7O0FBTUEsSUFBTUUsY0FBYztBQUFBLHNFQUFHLGtCQUFPQyxVQUFQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNiTCxZQUFBQSxLQURhLG1FQUNvREssVUFEcEQ7QUFBQTtBQUFBLG1CQUVFWCxFQUFFLENBQUNNLEtBQUgsQ0FBU0EsS0FBVCxDQUZGOztBQUFBO0FBRWJDLFlBQUFBLE1BRmE7QUFBQSw4Q0FHWkEsTUFIWTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFkRyxjQUFjO0FBQUE7QUFBQTtBQUFBLEdBQXBCO0FBTUE7Ozs7Ozs7Ozs7OztBQVlBVixFQUFFLENBQUNZLE9BQUg7QUFHQWxCLEVBQUUsQ0FBQ21CLGFBQUgsNkJBQTZDQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUMsZUFBZixDQUE3QyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFRSb2dlcnNcXERlc2t0b3BcXFVwZGF0ZSBWaW5EZWNvZGVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkb3RlbnYgPSByZXF1aXJlKCdkb3RlbnYnKTtcclxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xyXG5kb3RlbnYuY29uZmlnKHtzaWxlbnQ6IHRydWV9KTtcclxuY29uc3QgeyBleGl0IH0gPSByZXF1aXJlKCdwcm9jZXNzJyk7XHJcbmNvbnN0IHsgQ2xpZW50IH0gPSByZXF1aXJlKCdwZycpO1xyXG5jb25zdCBFbGFwc2VkVGltZSA9IHJlcXVpcmUoJ2VsYXBzZWQtdGltZScpO1xyXG5jb25zdCBwZyA9IG5ldyBDbGllbnQoe1xyXG4gICAgdXNlcjogJ3Bvc3RncmVzJyxcclxuICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxyXG4gICAgZGF0YWJhc2U6ICd0ZXN0ZGInLFxyXG4gICAgcGFzc3dvcmQ6ICdwYXNzd29yZCdcclxufSk7XHJcblxyXG5jb25zdCBHZXRNb2RlbHMgPSBhc3luYyAoKSA9PiB7XHJcbiAgICBjb25zdCBxdWVyeSA9IGBzZWxlY3QgKiBmcm9tIG1vZGVsc19wZyB3aGVyZSBzdGF0dXMgPD4gNmA7XHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwZy5xdWVyeShxdWVyeSk7IFxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxufVxyXG5cclxuY29uc3QgR2V0QXJ0aWNsZXMgPSBhc3luYyAobW9kZWxfaWQpID0+IHtcclxuICAgIGNvbnN0IHF1ZXJ5ID0gYHNlbGVjdCAqIGZyb20gYXJ0aWNsZXNfcGcgd2hlcmUgbW9kZWwgPSAke21vZGVsX2lkfSBhbmQgc3RhdHVzIDw+IDZgO1xyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcGcucXVlcnkocXVlcnkpOyBcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbn1cclxuXHJcbmNvbnN0IEdldEF0dGFjaG1lbnRzID0gYXN5bmMgKGFydGljbGVfaWQpID0+IHtcclxuICAgIGNvbnN0IHF1ZXJ5ID0gYHNlbGVjdCAqIGZyb20gYXJ0aWNsZXNfYXR0YWNobWVudHMgd2hlcmUgYXJ0aWNsZV9pZCA9ICR7YXJ0aWNsZV9pZH1gO1xyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcGcucXVlcnkocXVlcnkpOyBcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbn1cclxuXHJcbi8qXHJcbiAgICBnZXQgbW9kZWxzXHJcbiAgICAgICAgZm9yZWFjaCBtb2RlbHNcclxuICAgICAgICAgICAgZ2V0IGFydGljbGVzXHJcbiAgICAgICAgICAgICAgICBmb3JlYWNoIGFydGljbGVzXHJcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGF0dGFjaGVtZW50c1xyXG5cclxuXHJcblxyXG4qL1xyXG5cclxuXHJcbnBnLmNvbm5lY3QoKTtcclxuXHJcblxyXG5mcy53cml0ZUZpbGVTeW5jKGBFeHBvcnRlZEFydGljbGVEYXRhLnRleHRgLCBKU09OLnN0cmluZ2lmeShjdXJyZW50RnJvbUZhaWwpKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "GetCounts.js"
      ],
      "names": [
        "dotenv",
        "require",
        "fs",
        "config",
        "silent",
        "exit",
        "Client",
        "ElapsedTime",
        "pg",
        "user",
        "host",
        "database",
        "password",
        "GetModels",
        "query",
        "result",
        "GetArticles",
        "model_id",
        "GetAttachments",
        "article_id",
        "connect",
        "writeFileSync",
        "JSON",
        "stringify",
        "currentFromFail"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACAD,MAAM,CAACG,MAAP,CAAc;AAACC,EAAAA,MAAM,EAAE;AAAT,CAAd;;eACiBH,OAAO,CAAC,SAAD,C;IAAhBI,I,YAAAA,I;;gBACWJ,OAAO,CAAC,IAAD,C;IAAlBK,M,aAAAA,M;;AACR,IAAMC,WAAW,GAAGN,OAAO,CAAC,cAAD,CAA3B;;AACA,IAAMO,EAAE,GAAG,IAAIF,MAAJ,CAAW;AAClBG,EAAAA,IAAI,EAAE,UADY;AAElBC,EAAAA,IAAI,EAAE,WAFY;AAGlBC,EAAAA,QAAQ,EAAE,QAHQ;AAIlBC,EAAAA,QAAQ,EAAE;AAJQ,CAAX,CAAX;;AAOA,IAAMC,SAAS;AAAA,qEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,YAAAA,KADQ;AAAA;AAAA,mBAEON,EAAE,CAACM,KAAH,CAASA,KAAT,CAFP;;AAAA;AAERC,YAAAA,MAFQ;AAAA,6CAGPA,MAHO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATF,SAAS;AAAA;AAAA;AAAA,GAAf;;AAMA,IAAMG,WAAW;AAAA,sEAAG,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACVH,YAAAA,KADU,qDACyCG,QADzC;AAAA;AAAA,mBAEKT,EAAE,CAACM,KAAH,CAASA,KAAT,CAFL;;AAAA;AAEVC,YAAAA,MAFU;AAAA,8CAGTA,MAHS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXC,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAMA,IAAME,cAAc;AAAA,sEAAG,kBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbL,YAAAA,KADa,mEACoDK,UADpD;AAAA;AAAA,mBAEEX,EAAE,CAACM,KAAH,CAASA,KAAT,CAFF;;AAAA;AAEbC,YAAAA,MAFa;AAAA,8CAGZA,MAHY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdG,cAAc;AAAA;AAAA;AAAA,GAApB;AAMA;;;;;;;;;;;;AAYAV,EAAE,CAACY,OAAH;AAGAlB,EAAE,CAACmB,aAAH,6BAA6CC,IAAI,CAACC,SAAL,CAAeC,eAAf,CAA7C",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\",
      "sourcesContent": [
        "const dotenv = require('dotenv');\r\nconst fs = require('fs');\r\ndotenv.config({silent: true});\r\nconst { exit } = require('process');\r\nconst { Client } = require('pg');\r\nconst ElapsedTime = require('elapsed-time');\r\nconst pg = new Client({\r\n    user: 'postgres',\r\n    host: 'localhost',\r\n    database: 'testdb',\r\n    password: 'password'\r\n});\r\n\r\nconst GetModels = async () => {\r\n    const query = `select * from models_pg where status <> 6`;\r\n    const result = await pg.query(query); \r\n    return result;\r\n}\r\n\r\nconst GetArticles = async (model_id) => {\r\n    const query = `select * from articles_pg where model = ${model_id} and status <> 6`;\r\n    const result = await pg.query(query); \r\n    return result;\r\n}\r\n\r\nconst GetAttachments = async (article_id) => {\r\n    const query = `select * from articles_attachments where article_id = ${article_id}`;\r\n    const result = await pg.query(query); \r\n    return result;\r\n}\r\n\r\n/*\r\n    get models\r\n        foreach models\r\n            get articles\r\n                foreach articles\r\n                    get attachements\r\n\r\n\r\n\r\n*/\r\n\r\n\r\npg.connect();\r\n\r\n\r\nfs.writeFileSync(`ExportedArticleData.text`, JSON.stringify(currentFromFail));"
      ]
    },
    "sourceType": "script",
    "mtime": 1604605385048
  }
}