{
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\test",
      "filename": "C:\\Users\\TRogers\\Desktop\\test\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\test\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\test\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar dotenv = require('dotenv');\n\nvar parseCSV = require('csv-parse');\n\nvar fs = require('fs');\n\ndotenv.config({\n  silent: true\n});\n\nvar importer = require('./decoder/Importer');\n\nvar fileImport = fs.readFileSync('./csv/1.csv', {\n  encoding: 'utf-8'\n}); // const connection = mysql.createConnection({\n//     host: 'localhost',\n//     user: 'root',\n//     password: '',\n//     database: 'dieselvin_import_production'\n// });\n// connection.connect(function(err) {\n//   if (err) {\n//     return console.error('error: ' + err.message);\n//   }\n//   console.log('Connected to the MySQL server.');\n// });\n\nparseCSV(fileImport.toString('utf-8'), {\n  columns: ['ID', 'Manufacturer', 'JSON'],\n  skip_empty_lines: true,\n  from: 2\n}, /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(error, records) {\n    var errors, lineNumber, _iterator, _step, record, message;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!error) {\n              _context.next = 3;\n              break;\n            }\n\n            console.log(['Error while parsing CSV: ' + error]);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            errors = [];\n            lineNumber = 0;\n            _iterator = _createForOfIteratorHelper(records);\n            _context.prev = 6;\n\n            _iterator.s();\n\n          case 8:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 22;\n              break;\n            }\n\n            record = _step.value;\n            lineNumber++;\n            _context.prev = 11;\n            _context.next = 14;\n            return importer.put(JSON.parse(record.JSON), true);\n\n          case 14:\n            _context.next = 20;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](11);\n            message = _context.t0.message;\n            errors.push(\"ID \".concat(record.ID, \" at line \").concat(lineNumber, \": \").concat(message));\n\n          case 20:\n            _context.next = 8;\n            break;\n\n          case 22:\n            _context.next = 27;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t1 = _context[\"catch\"](6);\n\n            _iterator.e(_context.t1);\n\n          case 27:\n            _context.prev = 27;\n\n            _iterator.f();\n\n            return _context.finish(27);\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 24, 27, 30], [11, 16]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRvdGVudiIsInJlcXVpcmUiLCJwYXJzZUNTViIsImZzIiwiY29uZmlnIiwic2lsZW50IiwiaW1wb3J0ZXIiLCJmaWxlSW1wb3J0IiwicmVhZEZpbGVTeW5jIiwiZW5jb2RpbmciLCJ0b1N0cmluZyIsImNvbHVtbnMiLCJza2lwX2VtcHR5X2xpbmVzIiwiZnJvbSIsImVycm9yIiwicmVjb3JkcyIsImNvbnNvbGUiLCJsb2ciLCJlcnJvcnMiLCJsaW5lTnVtYmVyIiwicmVjb3JkIiwicHV0IiwiSlNPTiIsInBhcnNlIiwibWVzc2FnZSIsInB1c2giLCJJRCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxXQUFELENBQXhCOztBQUNBLElBQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0FELE1BQU0sQ0FBQ0ksTUFBUCxDQUFjO0FBQUNDLEVBQUFBLE1BQU0sRUFBRTtBQUFULENBQWQ7O0FBQ0EsSUFBTUMsUUFBUSxHQUFHTCxPQUFPLENBQUMsb0JBQUQsQ0FBeEI7O0FBRUEsSUFBSU0sVUFBVSxHQUFHSixFQUFFLENBQUNLLFlBQUgsQ0FBZ0IsYUFBaEIsRUFBK0I7QUFBQ0MsRUFBQUEsUUFBUSxFQUFFO0FBQVgsQ0FBL0IsQ0FBakIsQyxDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQVAsUUFBUSxDQUFDSyxVQUFVLENBQUNHLFFBQVgsQ0FBb0IsT0FBcEIsQ0FBRCxFQUErQjtBQUNuQ0MsRUFBQUEsT0FBTyxFQUFFLENBQUMsSUFBRCxFQUFPLGNBQVAsRUFBdUIsTUFBdkIsQ0FEMEI7QUFFbkNDLEVBQUFBLGdCQUFnQixFQUFFLElBRmlCO0FBR25DQyxFQUFBQSxJQUFJLEVBQUU7QUFINkIsQ0FBL0I7QUFBQSxxRUFJTCxpQkFBT0MsS0FBUCxFQUFjQyxPQUFkO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxpQkFDS0QsS0FETDtBQUFBO0FBQUE7QUFBQTs7QUFFS0UsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksQ0FBQyw4QkFBOEJILEtBQS9CLENBQVo7QUFGTDs7QUFBQTtBQUtLSSxZQUFBQSxNQUxMLEdBS2MsRUFMZDtBQU1LQyxZQUFBQSxVQU5MLEdBTWtCLENBTmxCO0FBQUEsbURBT29CSixPQVBwQjtBQUFBOztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBT1VLLFlBQUFBLE1BUFY7QUFRS0QsWUFBQUEsVUFBVTtBQVJmO0FBQUE7QUFBQSxtQkFXZWIsUUFBUSxDQUFDZSxHQUFULENBQWFDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxNQUFNLENBQUNFLElBQWxCLENBQWIsRUFBc0MsSUFBdEMsQ0FYZjs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBYWVFLFlBQUFBLE9BYmYsZUFhZUEsT0FiZjtBQWNTTixZQUFBQSxNQUFNLENBQUNPLElBQVAsY0FBa0JMLE1BQU0sQ0FBQ00sRUFBekIsc0JBQXVDUCxVQUF2QyxlQUFzREssT0FBdEQ7O0FBZFQ7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7O0FBQUE7QUFBQTs7QUFBQTs7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUpLOztBQUFBO0FBQUE7QUFBQTtBQUFBLElBQVIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxUUm9nZXJzXFxEZXNrdG9wXFx0ZXN0XFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkb3RlbnYgPSByZXF1aXJlKCdkb3RlbnYnKTtcclxuY29uc3QgcGFyc2VDU1YgPSByZXF1aXJlKCdjc3YtcGFyc2UnKTtcclxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xyXG5kb3RlbnYuY29uZmlnKHtzaWxlbnQ6IHRydWV9KTtcclxuY29uc3QgaW1wb3J0ZXIgPSByZXF1aXJlKCcuL2RlY29kZXIvSW1wb3J0ZXInKTsgXHJcbiAgXHJcbmxldCBmaWxlSW1wb3J0ID0gZnMucmVhZEZpbGVTeW5jKCcuL2Nzdi8xLmNzdicsIHtlbmNvZGluZzogJ3V0Zi04J30pO1xyXG5cclxuLy8gY29uc3QgY29ubmVjdGlvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xyXG4vLyAgICAgaG9zdDogJ2xvY2FsaG9zdCcsXHJcbi8vICAgICB1c2VyOiAncm9vdCcsXHJcbi8vICAgICBwYXNzd29yZDogJycsXHJcbi8vICAgICBkYXRhYmFzZTogJ2RpZXNlbHZpbl9pbXBvcnRfcHJvZHVjdGlvbidcclxuLy8gfSk7XHJcblxyXG4vLyBjb25uZWN0aW9uLmNvbm5lY3QoZnVuY3Rpb24oZXJyKSB7XHJcbi8vICAgaWYgKGVycikge1xyXG4vLyAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoJ2Vycm9yOiAnICsgZXJyLm1lc3NhZ2UpO1xyXG4vLyAgIH1cclxuXHJcbi8vICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCB0byB0aGUgTXlTUUwgc2VydmVyLicpO1xyXG4vLyB9KTtcclxuXHJcbnBhcnNlQ1NWKGZpbGVJbXBvcnQudG9TdHJpbmcoJ3V0Zi04JyksIHtcclxuICAgIGNvbHVtbnM6IFsnSUQnLCAnTWFudWZhY3R1cmVyJywgJ0pTT04nXSxcclxuICAgIHNraXBfZW1wdHlfbGluZXM6IHRydWUsXHJcbiAgICBmcm9tOiAyLFxyXG59LCBhc3luYyAoZXJyb3IsIHJlY29yZHMpID0+IHtcclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFsnRXJyb3Igd2hpbGUgcGFyc2luZyBDU1Y6ICcgKyBlcnJvcl0pO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGxldCBlcnJvcnMgPSBbXTtcclxuICAgIGxldCBsaW5lTnVtYmVyID0gMDtcclxuICAgIGZvciAobGV0IHJlY29yZCBvZiByZWNvcmRzKSB7XHJcbiAgICAgICAgbGluZU51bWJlcisrO1xyXG5cclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBhd2FpdCBpbXBvcnRlci5wdXQoSlNPTi5wYXJzZShyZWNvcmQuSlNPTiksIHRydWUpO1xyXG5cclxuICAgICAgICB9IGNhdGNoICh7bWVzc2FnZX0pIHtcclxuICAgICAgICAgICAgZXJyb3JzLnB1c2goYElEICR7cmVjb3JkLklEfSBhdCBsaW5lICR7bGluZU51bWJlcn06ICR7bWVzc2FnZX1gKTsgXHJcbiAgICAgICAgfSBcclxuICAgIH1cclxuXHJcblxyXG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "require",
        "parseCSV",
        "fs",
        "config",
        "silent",
        "importer",
        "fileImport",
        "readFileSync",
        "encoding",
        "toString",
        "columns",
        "skip_empty_lines",
        "from",
        "error",
        "records",
        "console",
        "log",
        "errors",
        "lineNumber",
        "record",
        "put",
        "JSON",
        "parse",
        "message",
        "push",
        "ID"
      ],
      "mappings": ";;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB;;AACAD,MAAM,CAACI,MAAP,CAAc;AAACC,EAAAA,MAAM,EAAE;AAAT,CAAd;;AACA,IAAMC,QAAQ,GAAGL,OAAO,CAAC,oBAAD,CAAxB;;AAEA,IAAIM,UAAU,GAAGJ,EAAE,CAACK,YAAH,CAAgB,aAAhB,EAA+B;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAA/B,CAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEAP,QAAQ,CAACK,UAAU,CAACG,QAAX,CAAoB,OAApB,CAAD,EAA+B;AACnCC,EAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,cAAP,EAAuB,MAAvB,CAD0B;AAEnCC,EAAAA,gBAAgB,EAAE,IAFiB;AAGnCC,EAAAA,IAAI,EAAE;AAH6B,CAA/B;AAAA,qEAIL,iBAAOC,KAAP,EAAcC,OAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBACKD,KADL;AAAA;AAAA;AAAA;;AAEKE,YAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,8BAA8BH,KAA/B,CAAZ;AAFL;;AAAA;AAKKI,YAAAA,MALL,GAKc,EALd;AAMKC,YAAAA,UANL,GAMkB,CANlB;AAAA,mDAOoBJ,OAPpB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOUK,YAAAA,MAPV;AAQKD,YAAAA,UAAU;AARf;AAAA;AAAA,mBAWeb,QAAQ,CAACe,GAAT,CAAaC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACE,IAAlB,CAAb,EAAsC,IAAtC,CAXf;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaeE,YAAAA,OAbf,eAaeA,OAbf;AAcSN,YAAAA,MAAM,CAACO,IAAP,cAAkBL,MAAM,CAACM,EAAzB,sBAAuCP,UAAvC,eAAsDK,OAAtD;;AAdT;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAJK;;AAAA;AAAA;AAAA;AAAA,IAAR",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\",
      "sourcesContent": [
        "const dotenv = require('dotenv');\r\nconst parseCSV = require('csv-parse');\r\nconst fs = require('fs');\r\ndotenv.config({silent: true});\r\nconst importer = require('./decoder/Importer'); \r\n  \r\nlet fileImport = fs.readFileSync('./csv/1.csv', {encoding: 'utf-8'});\r\n\r\n// const connection = mysql.createConnection({\r\n//     host: 'localhost',\r\n//     user: 'root',\r\n//     password: '',\r\n//     database: 'dieselvin_import_production'\r\n// });\r\n\r\n// connection.connect(function(err) {\r\n//   if (err) {\r\n//     return console.error('error: ' + err.message);\r\n//   }\r\n\r\n//   console.log('Connected to the MySQL server.');\r\n// });\r\n\r\nparseCSV(fileImport.toString('utf-8'), {\r\n    columns: ['ID', 'Manufacturer', 'JSON'],\r\n    skip_empty_lines: true,\r\n    from: 2,\r\n}, async (error, records) => {\r\n    if (error) {\r\n        console.log(['Error while parsing CSV: ' + error]);\r\n        return;\r\n    }\r\n    let errors = [];\r\n    let lineNumber = 0;\r\n    for (let record of records) {\r\n        lineNumber++;\r\n\r\n        try {\r\n            await importer.put(JSON.parse(record.JSON), true);\r\n\r\n        } catch ({message}) {\r\n            errors.push(`ID ${record.ID} at line ${lineNumber}: ${message}`); \r\n        } \r\n    }\r\n\r\n\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1601579714391
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\Importer.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\test",
      "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\Importer.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\Importer.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\Importer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\",
        "sourceFileName": "Importer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.put = put;\nexports.remove = remove;\n\nvar _mysql = _interopRequireDefault(require(\"./mysql\"));\n\nvar _Import = _interopRequireDefault(require(\"./Import\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\r\n * Imports JSON (replace if already exists)\r\n * \r\n * @param {Object} json\r\n * @param {Boolean} validateOnly\r\n * @param {String} reference    VINE ID\r\n */\nfunction put(_x, _x2, _x3) {\n  return _put.apply(this, arguments);\n}\n/**\r\n * Removes JSON by reference (VINE ID)\r\n * \r\n * @param {String} reference \r\n */\n\n\nfunction _put() {\n  _put = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(json, validateOnly, reference) {\n    var preparator, map, lookup, _iterator, _step, section, sectionId, _iterator2, _step2, variation, variationId, _iterator3, _step3, choice;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            preparator = new _Import[\"default\"](json);\n            console.log('Put sql request started');\n\n            if (!preparator.hasErrors) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error(_toConsumableArray(preparator.errors).join('; '));\n\n          case 4:\n            map = preparator.map;\n            _context.next = 7;\n            return _mysql[\"default\"].query('INSERT INTO vin_lookup(start_year, end_year, section_count, reference) VALUES (?, ?, ?, ?)', [map[\"for\"].start, map[\"for\"].end, map.sections.length, reference]);\n\n          case 7:\n            lookup = _context.sent.insertId;\n            _iterator = _createForOfIteratorHelper(map.sections);\n            _context.prev = 9;\n\n            _iterator.s();\n\n          case 11:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 57;\n              break;\n            }\n\n            section = _step.value;\n            console.log('mapping section');\n            _context.next = 16;\n            return _mysql[\"default\"].query('INSERT INTO vin_sections(start_pos, end_pos, property_names, lookup_id, start_pos_when, end_pos_when, negate_when, pattern_when) VALUES (?, ?, ?, ?, ?, ?, ?, ?)', [section[\"for\"].start, section[\"for\"].end, JSON.stringify(section.headers), lookup, section.when ? section.when[\"for\"].start : null, section.when ? section.when[\"for\"].end : null, section.when ? section.when.negate : null, section.when ? section.when.pattern : null]);\n\n          case 16:\n            sectionId = _context.sent.insertId;\n            _iterator2 = _createForOfIteratorHelper(section.variations);\n            _context.prev = 18;\n\n            _iterator2.s();\n\n          case 20:\n            if ((_step2 = _iterator2.n()).done) {\n              _context.next = 47;\n              break;\n            }\n\n            variation = _step2.value;\n            console.log('mapping variations');\n            _context.next = 25;\n            return _mysql[\"default\"].query('INSERT INTO vin_section_variations(property_values, section_id) VALUES (?, ?)', [JSON.stringify(variation.values), sectionId]);\n\n          case 25:\n            variationId = _context.sent.insertId;\n            _iterator3 = _createForOfIteratorHelper(variation.choices);\n            _context.prev = 27;\n\n            _iterator3.s();\n\n          case 29:\n            if ((_step3 = _iterator3.n()).done) {\n              _context.next = 37;\n              break;\n            }\n\n            choice = _step3.value;\n            console.log('mapping choices');\n\n            if (!choice.pattern) {\n              _context.next = 35;\n              break;\n            }\n\n            _context.next = 35;\n            return _mysql[\"default\"].query('INSERT INTO vin_section_variation_choices(start_year, end_year, code_value, variation_id) VALUES (?, ?, ?, ?)', [choice[\"for\"].start, choice[\"for\"].end, choice.pattern, variationId]);\n\n          case 35:\n            _context.next = 29;\n            break;\n\n          case 37:\n            _context.next = 42;\n            break;\n\n          case 39:\n            _context.prev = 39;\n            _context.t0 = _context[\"catch\"](27);\n\n            _iterator3.e(_context.t0);\n\n          case 42:\n            _context.prev = 42;\n\n            _iterator3.f();\n\n            return _context.finish(42);\n\n          case 45:\n            _context.next = 20;\n            break;\n\n          case 47:\n            _context.next = 52;\n            break;\n\n          case 49:\n            _context.prev = 49;\n            _context.t1 = _context[\"catch\"](18);\n\n            _iterator2.e(_context.t1);\n\n          case 52:\n            _context.prev = 52;\n\n            _iterator2.f();\n\n            return _context.finish(52);\n\n          case 55:\n            _context.next = 11;\n            break;\n\n          case 57:\n            _context.next = 62;\n            break;\n\n          case 59:\n            _context.prev = 59;\n            _context.t2 = _context[\"catch\"](9);\n\n            _iterator.e(_context.t2);\n\n          case 62:\n            _context.prev = 62;\n\n            _iterator.f();\n\n            return _context.finish(62);\n\n          case 65:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 59, 62, 65], [18, 49, 52, 55], [27, 39, 42, 45]]);\n  }));\n  return _put.apply(this, arguments);\n}\n\nfunction remove(_x4) {\n  return _remove.apply(this, arguments);\n}\n\nfunction _remove() {\n  _remove = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(reference) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _mysql[\"default\"].query(\"DELETE FROM vin_lookup WHERE reference = ?\", [reference]);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _remove.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkltcG9ydGVyLmpzIl0sIm5hbWVzIjpbInB1dCIsImpzb24iLCJ2YWxpZGF0ZU9ubHkiLCJyZWZlcmVuY2UiLCJwcmVwYXJhdG9yIiwiSW1wb3J0IiwiY29uc29sZSIsImxvZyIsImhhc0Vycm9ycyIsIkVycm9yIiwiZXJyb3JzIiwiam9pbiIsIm1hcCIsImRiIiwicXVlcnkiLCJzdGFydCIsImVuZCIsInNlY3Rpb25zIiwibGVuZ3RoIiwibG9va3VwIiwiaW5zZXJ0SWQiLCJzZWN0aW9uIiwiSlNPTiIsInN0cmluZ2lmeSIsImhlYWRlcnMiLCJ3aGVuIiwibmVnYXRlIiwicGF0dGVybiIsInNlY3Rpb25JZCIsInZhcmlhdGlvbnMiLCJ2YXJpYXRpb24iLCJ2YWx1ZXMiLCJ2YXJpYXRpb25JZCIsImNob2ljZXMiLCJjaG9pY2UiLCJyZW1vdmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQTs7Ozs7OztTQU9zQkEsRzs7O0FBbUR0Qjs7Ozs7Ozs7aUVBbkRPLGlCQUFtQkMsSUFBbkIsRUFBeUJDLFlBQXpCLEVBQXVDQyxTQUF2QztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0dDLFlBQUFBLFVBREgsR0FDZ0IsSUFBSUMsa0JBQUosQ0FBV0osSUFBWCxDQURoQjtBQUVISyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx5QkFBWjs7QUFGRyxpQkFJQ0gsVUFBVSxDQUFDSSxTQUpaO0FBQUE7QUFBQTtBQUFBOztBQUFBLGtCQUtPLElBQUlDLEtBQUosQ0FBVSxtQkFBSUwsVUFBVSxDQUFDTSxNQUFmLEVBQXVCQyxJQUF2QixDQUE0QixJQUE1QixDQUFWLENBTFA7O0FBQUE7QUFRR0MsWUFBQUEsR0FSSCxHQVFTUixVQUFVLENBQUNRLEdBUnBCO0FBQUE7QUFBQSxtQkFVbUJDLGtCQUFHQyxLQUFILENBQ2xCLDRGQURrQixFQUVsQixDQUFFRixHQUFHLE9BQUgsQ0FBUUcsS0FBVixFQUFpQkgs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Um9vdCI6IkM6XFxVc2Vyc1xcVFJvZ2Vyc1xcRGVza3RvcFxcdGVzdFxcZGVjb2RlclxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRiIGZyb20gJy4vbXlzcWwnO1xyXG5pbXBvcnQgSW1wb3J0IGZyb20gJy4vSW1wb3J0JztcclxuXHJcbi8qKlxyXG4gKiBJbXBvcnRzIEpTT04gKHJlcGxhY2UgaWYgYWxyZWFkeSBleGlzdHMpXHJcbiAqIFxyXG4gKiBAcGFyYW0ge09iamVjdH0ganNvblxyXG4gKiBAcGFyYW0ge0Jvb2xlYW59IHZhbGlkYXRlT25seVxyXG4gKiBAcGFyYW0ge1N0cmluZ30gcmVmZXJlbmNlICAgIFZJTkUgSURcclxuICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwdXQoanNvbiwgdmFsaWRhdGVPbmx5LCByZWZlcmVuY2UpIHtcclxuICAgIGNvbnN0IHByZXBhcmF0b3IgPSBuZXcgSW1wb3J0KGpzb24pO1xyXG4gICAgY29uc29sZS5sb2coJ1B1dCBzcWwgcmVxdWVzdCBzdGFydGVkJylcclxuXHJcbiAgICBpZiAocHJlcGFyYXRvci5oYXNFcnJvcnMpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoWy4uLnByZXBhcmF0b3IuZXJyb3JzXS5qb2luKCc7ICcpKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBtYXAgPSBwcmVwYXJhdG9yLm1hcDtcclxuXHJcbiAgICBjb25zdCBsb29rdXAgPSAoYXdhaXQgZGIucXVlcnkoXHJcbiAgICAgICAgJ0lOU0VSVCBJTlRPIHZpbl9sb29rdXAoc3RhcnRfeWVhciwgZW5kX3llYXIsIHNlY3Rpb25fY291bnQsIHJlZmVyZW5jZSkgVkFMVUVTICg/LCA/LCA/LCA/KScsXHJcbiAgICAgICAgWyBtYXAuZm9yLnN0YXJ0LCBtYXAuZm9yLmVuZCwgbWFwLnNlY3Rpb25zLmxlbmd0aCwgcmVmZXJlbmNlIF1cclxuICAgICkpLmluc2VydElkO1xyXG5cclxuICAgIGZvciAobGV0IHNlY3Rpb24gb2YgbWFwLnNlY3Rpb25zKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ21hcHBpbmcgc2VjdGlvbicpO1xyXG4gICAgICAgIGNvbnN0IHNlY3Rpb25JZCA9IChhd2FpdCBkYi5xdWVyeShcclxuICAgICAgICAgICAgJ0lOU0VSVCBJTlRPIHZpbl9zZWN0aW9ucyhzdGFydF9wb3MsIGVuZF9wb3MsIHByb3BlcnR5X25hbWVzLCBsb29rdXBfaWQsIHN0YXJ0X3Bvc193aGVuLCBlbmRfcG9zX3doZW4sIG5lZ2F0ZV93aGVuLCBwYXR0ZXJuX3doZW4pIFZBTFVFUyAoPywgPywgPywgPywgPywgPywgPywgPyknLFxyXG4gICAgICAgICAgICBbXHJcbiAgICAgICAgICAgICAgICBzZWN0aW9uLmZvci5zdGFydCxcclxuICAgICAgICAgICAgICAgIHNlY3Rpb24uZm9yLmVuZCxcclxuICAgICAgICAgICAgICAgIEpTT04uc3RyaW5naWZ5KHNlY3Rpb24uaGVhZGVycyksXHJcbiAgICAgICAgICAgICAgICBsb29rdXAsXHJcbiAgICAgICAgICAgICAgICBzZWN0aW9uLndoZW4gPyBzZWN0aW9uLndoZW4uZm9yLnN0YXJ0IDogbnVsbCxcclxuICAgICAgICAgICAgICAgIHNlY3Rpb24ud2hlbiA/IHNlY3Rpb24ud2hlbi5mb3IuZW5kIDogbnVsbCxcclxuICAgICAgICAgICAgICAgIHNlY3Rpb24ud2hlbiA/IHNlY3Rpb24ud2hlbi5uZWdhdGUgOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgc2VjdGlvbi53aGVuID8gc2VjdGlvbi53aGVuLnBhdHRlcm4gOiBudWxsLFxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgKSkuaW5zZXJ0SWQ7XHJcblxyXG4gICAgICAgIGZvciAobGV0IHZhcmlhdGlvbiBvZiBzZWN0aW9uLnZhcmlhdGlvbnMpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ21hcHBpbmcgdmFyaWF0aW9ucycpO1xyXG4gICAgICAgICAgICBjb25zdCB2YXJpYXRpb25JZCA9IChhd2FpdCBkYi5xdWVyeShcclxuICAgICAgICAgICAgICAgICdJTlNFUlQgSU5UTyB2aW5fc2VjdGlvbl92YXJpYXRpb25zKHByb3BlcnR5X3ZhbHVlcywgc2VjdGlvbl9pZCkgVkFMVUVTICg/LCA/KScsXHJcbiAgICAgICAgICAgICAgICBbIEpTT04uc3RyaW5naWZ5KHZhcmlhdGlvbi52YWx1ZXMpLCBzZWN0aW9uSWQgXVxyXG4gICAgICAgICAgICApKS5pbnNlcnRJZDtcclxuXHJcbiAgICAgICAgICAgIGZvciAobGV0IGNob2ljZSBvZiB2YXJpYXRpb24uY2hvaWNlcykge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ21hcHBpbmcgY2hvaWNlcycpXHJcbiAgICAgICAgICAgICAgICBpZiAoY2hvaWNlLnBhdHRlcm4pIHtcclxuICAgICAgICAgICAgICAgICAgICBhd2FpdCBkYi5xdWVyeShcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ0lOU0VSVCBJTlRPIHZpbl9zZWN0aW9uX3ZhcmlhdGlvbl9jaG9pY2VzKHN0YXJ0X3llYXIsIGVuZF95ZWFyLCBjb2RlX3ZhbHVlLCB2YXJpYXRpb25faWQpIFZBTFVFUyAoPywgPywgPywgPyknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBbIGNob2ljZS5mb3Iuc3RhcnQsIGNob2ljZS5mb3IuZW5kLCBjaG9pY2UucGF0dGVybiwgdmFyaWF0aW9uSWQgXVxyXG4gICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmVzIEpTT04gYnkgcmVmZXJlbmNlIChWSU5FIElEKVxyXG4gKiBcclxuICogQHBhcmFtIHtTdHJpbmd9IHJlZmVyZW5jZSBcclxuICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZW1vdmUocmVmZXJlbmNlKSB7XHJcbiAgICBhd2FpdCBkYi5xdWVyeShgREVMRVRFIEZST00gdmluX2xvb2t1cCBXSEVSRSByZWZlcmVuY2UgPSA/YCwgW3JlZmVyZW5jZV0pO1xyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Importer.js"
      ],
      "names": [
        "put",
        "json",
        "validateOnly",
        "reference",
        "preparator",
        "Import",
        "console",
        "log",
        "hasErrors",
        "Error",
        "errors",
        "join",
        "map",
        "db",
        "query",
        "start",
        "end",
        "sections",
        "length",
        "lookup",
        "insertId",
        "section",
        "JSON",
        "stringify",
        "headers",
        "when",
        "negate",
        "pattern",
        "sectionId",
        "variations",
        "variation",
        "values",
        "variationId",
        "choices",
        "choice",
        "remove"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\",
      "sourcesContent": [
        "import db from './mysql';\r\nimport Import from './Import';\r\n\r\n/**\r\n * Imports JSON (replace if already exists)\r\n * \r\n * @param {Object} json\r\n * @param {Boolean} validateOnly\r\n * @param {String} reference    VINE ID\r\n */\r\nexport async function put(json, validateOnly, reference) {\r\n    const preparator = new Import(json);\r\n    console.log('Put sql request started')\r\n\r\n    if (preparator.hasErrors) {\r\n        throw new Error([...preparator.errors].join('; '));\r\n    }\r\n\r\n    const map = preparator.map;\r\n\r\n    const lookup = (await db.query(\r\n        'INSERT INTO vin_lookup(start_year, end_year, section_count, reference) VALUES (?, ?, ?, ?)',\r\n        [ map.for.start, map.for.end, map.sections.length, reference ]\r\n    )).insertId;\r\n\r\n    for (let section of map.sections) {\r\n        console.log('mapping section');\r\n        const sectionId = (await db.query(\r\n            'INSERT INTO vin_sections(start_pos, end_pos, property_names, lookup_id, start_pos_when, end_pos_when, negate_when, pattern_when) VALUES (?, ?, ?, ?, ?, ?, ?, ?)',\r\n            [\r\n                section.for.start,\r\n                section.for.end,\r\n                JSON.stringify(section.headers),\r\n                lookup,\r\n                section.when ? section.when.for.start : null,\r\n                section.when ? section.when.for.end : null,\r\n                section.when ? section.when.negate : null,\r\n                section.when ? section.when.pattern : null,\r\n            ]\r\n        )).insertId;\r\n\r\n        for (let variation of section.variations) {\r\n            console.log('mapping variations');\r\n            const variationId = (await db.query(\r\n                'INSERT INTO vin_section_variations(property_values, section_id) VALUES (?, ?)',\r\n                [ JSON.stringify(variation.values), sectionId ]\r\n            )).insertId;\r\n\r\n            for (let choice of variation.choices) {\r\n                console.log('mapping choices')\r\n                if (choice.pattern) {\r\n                    await db.query(\r\n                        'INSERT INTO vin_section_variation_choices(start_year, end_year, code_value, variation_id) VALUES (?, ?, ?, ?)',\r\n                        [ choice.for.start, choice.for.end, choice.pattern, variationId ]\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Removes JSON by reference (VINE ID)\r\n * \r\n * @param {String} reference \r\n */\r\nexport async function remove(reference) {\r\n    await db.query(`DELETE FROM vin_lookup WHERE reference = ?`, [reference]);\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601580060046
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\mysql\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\mysql\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\mysql\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\test",
      "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\mysql\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\mysql\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\mysql\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\mysql\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.QueryResultEmptyError = void 0;\n\nvar _promise = _interopRequireDefault(require(\"mysql2/promise\"));\n\nvar _config = _interopRequireDefault(require(\"./config.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * MySQL Database Connection\r\n */\nvar DbConnection = /*#__PURE__*/function () {\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {String} host\r\n   * @param {String} database\r\n   * @param {String} username\r\n   * @param {String} password\r\n   */\n  function DbConnection(host, database, username, password) {\n    _classCallCheck(this, DbConnection);\n\n    this.connect();\n    this.host = 'localhost';\n    this.database = 'dieselvin_import_production';\n    this.username = 'root';\n    this.password = '';\n    console.log(this.host, this.database, this.username, \"'\".concat(this.password, \"'\"));\n  }\n  /**\r\n   * Connects to the database\r\n   */\n\n\n  _createClass(DbConnection, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.pool) {\n                  this.pool = _promise[\"default\"].createConnection({\n                    database: 'dieselvin',\n                    host: this.host,\n                    // For some ungodly reason this.username is returing an empty string\n                    user: 'root',\n                    password: this.password || ''\n                  });\n                } // this.pool.connect(function(err) {\n                //     if (err) {\n                //       return console.error('errorq: ' + err.message);\n                //     }\n                //     console.log('Connected to the MySQL server.2');\n                //   });\n\n\n                return _context.abrupt(\"return\", this.pool);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n    /**\r\n     * Executes an SQL statement.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array|null} binds\r\n     */\n\n  }, {\n    key: \"execute\",\n    value: function () {\n      var _execute = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(sql) {\n        var binds,\n            _args2 = arguments;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                binds = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : undefined;\n                _context2.next = 3;\n                return this.connect();\n\n              case 3:\n                _context2.next = 5;\n                return _context2.sent.query(sql, binds);\n\n              case 5:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function execute(_x) {\n        return _execute.apply(this, arguments);\n      }\n\n      return execute;\n    }()\n    /**\r\n     * Executes an SQL statement and retrieves the result set.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\n\n  }, {\n    key: \"query\",\n    value: function () {\n      var _query = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(sql) {\n        var binds,\n            _args3 = arguments;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                binds = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : undefined;\n                _context3.next = 3;\n                return this.execute(sql, binds);\n\n              case 3:\n                return _context3.abrupt(\"return\", _context3.sent[0]);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function query(_x2) {\n        return _query.apply(this, arguments);\n      }\n\n      return query;\n    }()\n    /**\r\n     * Fetches all records.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\n\n  }, {\n    key: \"fetchAll\",\n    value: function () {\n      var _fetchAll = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(sql) {\n        var binds,\n            _args4 = arguments;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                binds = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : undefined;\n                _context4.next = 3;\n                return this.query(sql, binds);\n\n              case 3:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function fetchAll(_x3) {\n        return _fetchAll.apply(this, arguments);\n      }\n\n      return fetchAll;\n    }()\n    /**\r\n     * Fetches the first record of the result.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\n\n  }, {\n    key: \"fetchOne\",\n    value: function () {\n      var _fetchOne = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(sql) {\n        var binds,\n            rows,\n            _args5 = arguments;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                binds = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : undefined;\n                _context5.next = 3;\n                return this.query(sql, binds);\n\n              case 3:\n                rows = _context5.sent;\n\n                if (!rows.length) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", rows[0]);\n\n              case 8:\n                throw new QueryResultEmptyError();\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function fetchOne(_x4) {\n        return _fetchOne.apply(this, arguments);\n      }\n\n      return fetchOne;\n    }()\n    /**\r\n     * Fetches the value of the first column of the first row.\r\n     * Useful to fetch aggregated values or any SQL query that returns just one value.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\n\n  }, {\n    key: \"fetchScalarValue\",\n    value: function () {\n      var _fetchScalarValue = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(sql) {\n        var binds,\n            _yield$this$execute,\n            _yield$this$execute2,\n            rows,\n            fields,\n            _args6 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                binds = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : null;\n                _context6.next = 3;\n                return this.execute(sql, binds);\n\n              case 3:\n                _yield$this$execute = _context6.sent;\n                _yield$this$execute2 = _slicedToArray(_yield$this$execute, 2);\n                rows = _yield$this$execute2[0];\n                fields = _yield$this$execute2[1];\n\n                if (!rows.length) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", rows[0][fields[0].name]);\n\n              case 11:\n                throw new QueryResultEmptyError();\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function fetchScalarValue(_x5) {\n        return _fetchScalarValue.apply(this, arguments);\n      }\n\n      return fetchScalarValue;\n    }()\n    /**\r\n     * Disconnects from the database.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!this.pool) {\n                  _context7.next = 4;\n                  break;\n                }\n\n                _context7.next = 3;\n                return this.pool.end();\n\n              case 3:\n                this.pool = undefined;\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"transaction\",\n    value: function () {\n      var _transaction = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(body) {\n        var connection;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.connect();\n\n              case 2:\n                _context8.next = 4;\n                return _context8.sent.getConnection();\n\n              case 4:\n                connection = _context8.sent;\n                _context8.prev = 5;\n                _context8.next = 8;\n                return connection.beginTransaction();\n\n              case 8:\n                _context8.next = 10;\n                return body(connection);\n\n              case 10:\n                _context8.next = 12;\n                return connection.commit();\n\n              case 12:\n                _context8.next = 19;\n                break;\n\n              case 14:\n                _context8.prev = 14;\n                _context8.t0 = _context8[\"catch\"](5);\n                _context8.next = 18;\n                return connection.rollback();\n\n              case 18:\n                throw _context8.t0;\n\n              case 19:\n                _context8.prev = 19;\n                _context8.next = 22;\n                return connection.release();\n\n              case 22:\n                return _context8.finish(19);\n\n              case 23:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[5, 14, 19, 23]]);\n      }));\n\n      function transaction(_x6) {\n        return _transaction.apply(this, arguments);\n      }\n\n      return transaction;\n    }()\n  }, {\n    key: \"escape\",\n    value: function escape() {\n      return _promise[\"default\"].escape.apply(_promise[\"default\"], arguments);\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return _promise[\"default\"].format.apply(_promise[\"default\"], arguments);\n    }\n  }, {\n    key: \"raw\",\n    value: function raw() {\n      return _promise[\"default\"].raw.apply(_promise[\"default\"], arguments);\n    }\n  }, {\n    key: \"escapeId\",\n    value: function escapeId() {\n      return _promise[\"default\"].escapeId.apply(_promise[\"default\"], arguments);\n    }\n  }]);\n\n  return DbConnection;\n}(); // Thrown when a query has no matching result.\n\n\nvar QueryResultEmptyError = /*#__PURE__*/function (_Error) {\n  _inherits(QueryResultEmptyError, _Error);\n\n  var _super = _createSuper(QueryResultEmptyError);\n\n  function QueryResultEmptyError() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    _classCallCheck(this, QueryResultEmptyError);\n\n    return _super.call(this, message || 'No matching records');\n  }\n\n  return QueryResultEmptyError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.QueryResultEmptyError = QueryResultEmptyError;\n\nvar _default = new DbConnection(_config[\"default\"].host, _config[\"default\"].database, _config[\"default\"].username, _config[\"default\"].password);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "DbConnection",
        "host",
        "database",
        "username",
        "password",
        "connect",
        "console",
        "log",
        "pool",
        "mysql",
        "createConnection",
        "user",
        "sql",
        "binds",
        "undefined",
        "query",
        "execute",
        "rows",
        "length",
        "QueryResultEmptyError",
        "fields",
        "name",
        "end",
        "body",
        "getConnection",
        "connection",
        "beginTransaction",
        "commit",
        "rollback",
        "release",
        "escape",
        "arguments",
        "format",
        "raw",
        "escapeId",
        "message",
        "Error",
        "config"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\mysql\\",
      "sourcesContent": [
        "import mysql from 'mysql2/promise';\r\n\r\n// The mysql connection parameters are stored in `config/index.js`\r\nimport config from './config.js';\r\n\r\n/**\r\n * MySQL Database Connection\r\n */\r\nclass DbConnection {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {String} host\r\n     * @param {String} database\r\n     * @param {String} username\r\n     * @param {String} password\r\n     */\r\n    constructor (host, database, username, password) {\r\n        this.connect();\r\n        this.host = 'localhost';\r\n        this.database = 'dieselvin_import_production';\r\n        this.username = 'root';\r\n        this.password = '';\r\n        console.log(this.host, this.database, this.username, `'${this.password}'`)\r\n    }\r\n\r\n    /**\r\n     * Connects to the database\r\n     */ \r\n    async connect() {\r\n        if (!this.pool) {\r\n            this.pool = mysql.createConnection({\r\n                database: 'dieselvin',\r\n                host: this.host,\r\n                // For some ungodly reason this.username is returing an empty string\r\n                user: 'root',\r\n                password:  this.password || '',\r\n            });\r\n        }\r\n\r\n        // this.pool.connect(function(err) {\r\n        //     if (err) {\r\n        //       return console.error('errorq: ' + err.message);\r\n        //     }\r\n          \r\n        //     console.log('Connected to the MySQL server.2');\r\n        //   });\r\n\r\n        return this.pool;\r\n    }\r\n\r\n    /**\r\n     * Executes an SQL statement.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array|null} binds\r\n     */\r\n    async execute(sql, binds = undefined) {\r\n        return await (await this.connect()).query(sql, binds);\r\n    }\r\n\r\n    /**\r\n     * Executes an SQL statement and retrieves the result set.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\r\n    async query(sql, binds = undefined) {\r\n        return (await this.execute(sql, binds))[0];\r\n    }\r\n\r\n    /**\r\n     * Fetches all records.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\r\n    async fetchAll(sql, binds = undefined) {\r\n        return await this.query(sql, binds);\r\n    }\r\n\r\n    /**\r\n     * Fetches the first record of the result.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\r\n    async fetchOne(sql, binds = undefined) {\r\n        const rows = await this.query(sql, binds);\r\n\r\n        if (rows.length) {\r\n            return rows[0];\r\n        } else {\r\n            throw new QueryResultEmptyError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetches the value of the first column of the first row.\r\n     * Useful to fetch aggregated values or any SQL query that returns just one value.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\r\n    async fetchScalarValue(sql, binds = null) {\r\n        const [rows, fields] = await this.execute(sql, binds);\r\n\r\n        if (rows.length) {\r\n            return rows[0][fields[0].name];\r\n        } else {\r\n            throw new QueryResultEmptyError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disconnects from the database.\r\n     */\r\n    async disconnect() {\r\n        if (this.pool) {\r\n            await this.pool.end();\r\n            this.pool = undefined;\r\n        }\r\n    }\r\n\r\n    async transaction(body) {\r\n        const connection = await (await this.connect()).getConnection();\r\n\r\n        try {\r\n            await connection.beginTransaction();\r\n            await body(connection);\r\n            await connection.commit();\r\n        } catch (e) {\r\n            await connection.rollback();\r\n            throw e;\r\n        } finally {\r\n            await connection.release();\r\n        }\r\n    }\r\n\r\n    escape() {\r\n        return mysql.escape(...arguments);\r\n    }\r\n\r\n    format() {\r\n        return mysql.format(...arguments);\r\n    }\r\n\r\n    raw() {\r\n        return mysql.raw(...arguments);\r\n    }\r\n\r\n    escapeId() {\r\n        return mysql.escapeId(...arguments);\r\n    }\r\n}\r\n\r\n// Thrown when a query has no matching result.\r\nexport class QueryResultEmptyError extends Error {\r\n    constructor(message = '') {\r\n        super(message || 'No matching records');\r\n    }\r\n}\r\n\r\nexport default new DbConnection(config.host, config.database, config.username, config.password);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601579725840
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\mysql\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\mysql\\\\config.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\mysql\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\test",
      "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\mysql\\config.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\mysql\\config.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\mysql\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\mysql\\",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = {\n  host: 'localhost',\n  database: 'dieselvin_import_production',\n  username: 'root',\n  password: ''\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJob3N0IiwiZGF0YWJhc2UiLCJ1c2VybmFtZSIsInBhc3N3b3JkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7ZUFBZTtBQUNYQSxFQUFBQSxJQUFJLEVBQUUsV0FESztBQUVYQyxFQUFBQSxRQUFRLEVBQUUsNkJBRkM7QUFHWEMsRUFBQUEsUUFBUSxFQUFFLE1BSEM7QUFJWEMsRUFBQUEsUUFBUSxFQUFFO0FBSkMsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFRSb2dlcnNcXERlc2t0b3BcXHRlc3RcXGRlY29kZXJcXG15c3FsXFwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XHJcbiAgICBob3N0OiAnbG9jYWxob3N0JyxcclxuICAgIGRhdGFiYXNlOiAnZGllc2VsdmluX2ltcG9ydF9wcm9kdWN0aW9uJyxcclxuICAgIHVzZXJuYW1lOiAncm9vdCcsXHJcbiAgICBwYXNzd29yZDogJycsXHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "host",
        "database",
        "username",
        "password"
      ],
      "mappings": ";;;;;;eAAe;AACXA,EAAAA,IAAI,EAAE,WADK;AAEXC,EAAAA,QAAQ,EAAE,6BAFC;AAGXC,EAAAA,QAAQ,EAAE,MAHC;AAIXC,EAAAA,QAAQ,EAAE;AAJC,C",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\mysql\\",
      "sourcesContent": [
        "export default {\r\n    host: 'localhost',\r\n    database: 'dieselvin_import_production',\r\n    username: 'root',\r\n    password: '',\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601564508389
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\Import.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\test",
      "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\Import.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\Import.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\Import.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\",
        "sourceFileName": "Import.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\nvar _Import = _interopRequireDefault(require(\"./schema/Import.json\"));\n\nvar _ajv = _interopRequireDefault(require(\"ajv\"));\n\nvar _utils = require(\"./utils\");\n\nvar _errors = require(\"./errors\");\n\nvar _ParameterizedValue = _interopRequireDefault(require(\"./ParameterizedValue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar validateSchema = new _ajv[\"default\"]().compile(_Import[\"default\"]);\n/**\r\n * Converts a code to an SQL-compatible regular expression pattern.\r\n * Invalid codes are ignored for composite codes (comma-separated code)\r\n * Exception thrown for invalid codes that are not recognized at the moment.\r\n *\r\n * @param {String} code\r\n * @param {Number} length\r\n * @return {String}\r\n */\n\nfunction parseCode(code) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  if ([undefined, null, '-', ''].includes(code) || 'string' !== (0, _utils.getTypeOf)(code)) {\n    throw new _errors.EmptyCodeError(code);\n  }\n\n  code = code.toUpperCase();\n\n  if (code.includes(',')) {\n    // \"A, B, C\"\n    try {\n      return code.trim().split(/\\s*,\\s*/g).map(function (c) {\n        return parseCode(c, length);\n      }).join('|');\n    } catch (e) {\n      throw new _errors.IllegalCodeError(code);\n    } // } else if (/^(?=.*\\*)(?:\\*|)(?:[A-HJ-NPR-Z\\d]+(?:\\*|)|)$/.test(code)) {   // \"*\", \"A*B\", \"A*\", \"*A\", \"*A*\"\n    //     return code.replace(/\\*/g, '(.+)');\n\n  } else if (/^(?=.*\\*)[A-HJ-NPR-Z\\d\\*]*$/.test(code)) {\n    // Code with wildcard\n    return code.replace(/\\*/g, '(.+)');\n  } else if (/^[A-HJ-NPR-Z\\d]+$/.test(code) && length === code.length) {\n    return code;\n  }\n\n  throw new _errors.IllegalCodeError(code);\n}\n/**\r\n * Cleans a decoded value against a code\r\n *\r\n * @param {ParameterizedValue} decodedValue\r\n * @param {String} code\r\n * @return {String}\r\n */\n\n\nfunction validateDecodedValue(decodedValue, code) {\n  var wildcardCount = (code.match(/\\(\\.\\+\\)/g) || []).length;\n\n  var invalidRefs = _toConsumableArray(decodedValue).filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        _ = _ref2[0],\n        ref = _ref2[1];\n\n    return ref.index > wildcardCount;\n  });\n\n  if (invalidRefs.length) {\n    throw new ReferenceError(\"Invalid wildcard reference: \".concat(invalidRefs.map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          offset = _ref4[0],\n          original = _ref4[1].original;\n\n      return \"\\\"\".concat(original, \"\\\" at offset \").concat(offset);\n    }).join(', '), \" in decoded value \\\"\").concat(decodedValue.original, \"\\\" against \\\"\").concat(code, \"\\\"\"));\n  }\n}\n/**\r\n * Converts a conditional to an SQL compatible regular expression.\r\n *\r\n * @param {String} conditional\r\n * @return {Object}\r\n */\n\n\nfunction parseConditional(conditional) {\n  conditional = String(conditional).trim();\n\n  if (/^not\\s+(.+)/i.test(conditional)) {\n    return {\n      negate: true,\n      pattern: parseConditional(RegExp.$1).pattern\n    };\n  } else {\n    return {\n      negate: false,\n      pattern: conditional.split(/\\s*,\\s*/g).map(function (f) {\n        if (/^([A-HJ-NPR-Z\\d]*)\\*([A-HJ-NPR-Z\\d]*)$/.test(f)) {\n          return \"\".concat(RegExp.$1, \".\").concat(RegExp.$2);\n        } else if (/^(\\d+)\\-(\\d+)$/.test(f)) {\n          var start = Number.parseInt(RegExp.$1);\n          var end = Number.parseInt(RegExp.$2);\n\n          if (start > end) {\n            throw new _errors.IllegalConditionalError(f);\n          }\n\n          var range = [];\n\n          for (var i = start; i <= end; i++) {\n            range.push(i);\n          }\n\n          return range.join('|');\n        } else if (/^([A-HJ-NPR-Z]+)\\-([A-HJ-NPR-Z]+)$/.test(f)) {\n          return createAlphaRange(RegExp.$1, RegExp.$2).join('|');\n        } else if (/^[A-HJ-NPR-Z\\d]+$/.test(f)) {\n          return f;\n        }\n\n        throw new _errors.IllegalConditionalError(f);\n      }).join('|')\n    };\n  }\n}\n\nfunction convertAlphaToInteger(alpha) {\n  return _toConsumableArray(alpha.toUpperCase()).map(function (c) {\n    return c.charCodeAt(0) - 65;\n  }).reduce(function (s, c, i) {\n    return s + c * Math.pow(26, alpha.length - i - 1);\n  }, 0);\n}\n\nfunction convertIntegerToAlpha(integer) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var digits = [];\n\n  while (integer >= 26) {\n    digits.unshift(integer % 26);\n    integer = Math.floor(integer / 26);\n  }\n\n  digits.unshift(integer);\n\n  for (var i = 0, l = digits.length; i < length - l; i++) {\n    digits.unshift(0);\n  }\n\n  return digits.map(function (d) {\n    return String.fromCharCode(d + 65);\n  }).join('');\n}\n\nfunction createAlphaRange(from, to) {\n  if (from.length !== to.length) {\n    throw new RangeError(\"Invalid range in conditional \\\"\".concat(f, \"\\\". The lengths must be the same. For example, A-Z, AA-ZZ, or AAA-ZZZ\"));\n  }\n\n  var f = convertAlphaToInteger(from);\n  var t = convertAlphaToInteger(to);\n\n  if (f > t) {\n    throw new RangeError(\"Invalid range in conditional \\\"\".concat(f, \"\\\". The start value must not be greater than the end value\"));\n  }\n\n  var l = to.length;\n  var result = [];\n\n  for (var i = f; i <= t; i++) {\n    result.push(convertIntegerToAlpha(i, l));\n  }\n\n  return result;\n}\n/**\r\n * Parses the JSON from CSV.\r\n */\n\n\nvar Import = /*#__PURE__*/function () {\n  /**\r\n   * Constructor\r\n   */\n  function Import(json) {\n    _classCallCheck(this, Import);\n\n    // Contains errors\n    this.$errors = new Set(); // Contains warnings - for later use\n\n    this.$warnings = new Set();\n    this.$prepare(json);\n  }\n  /**\r\n   * Validates the JSON object prior to import operation\r\n   *\r\n   * @param {JSON} json\r\n   */\n\n\n  _createClass(Import, [{\n    key: \"$prepare\",\n    value: function $prepare(json) {\n      var _this = this;\n\n      if (!validateSchema(json)) {\n        // console.log(jsonValidate.errors);\n        this.$errors.add('JSON schema verification failed');\n        return;\n      }\n\n      var aggr = json.Sections.reduce(function (aggr, section) {\n        section.range = new _Range[\"default\"](section.StartPos, section.EndPos);\n        section.hasConditional = !!('string' === (0, _utils.getTypeOf)(section.AlwaysWhen) && section.AlwaysWhen.length > 0 && section.StartPosWhen && section.EndPosWhen && parseInt(section.StartPosWhen) <= parseInt(section.EndPosWhen));\n        section.headerKeys = section.Headers.map(function (h) {\n          var headerLocations = aggr.headers.get(h) || [];\n\n          if (!aggr.duplicateHeaders.has(h)) {\n            headerLocations.forEach(function (s) {\n              if (s === section || !s.range.equals(section.range) || s.range.equals(section.range) && (!s.hasConditional || !section.hasConditional)) {\n                aggr.duplicateHeaders.add(h);\n              }\n            });\n          }\n\n          headerLocations.push(section);\n          aggr.headers.set(h, headerLocations);\n          return h;\n        });\n        var key = section.range.toString();\n\n        if (!aggr.sections.has(key)) {\n          aggr.sections.set(key, section);\n        } else if (!section.hasConditional || !aggr.sections.get(key).hasConditional) {\n          _this.errors.add(\"Illegal section: \".concat(section.range.toString()));\n        }\n\n        return aggr;\n      }, {\n        headers: new Map(),\n        duplicateHeaders: new Set(),\n        sections: new Map()\n      });\n\n      var ranges = _toConsumableArray(aggr.sections.values()).map(function (s) {\n        return s.range;\n      }); // Validate ranges\n\n\n      var _iterator = _createForOfIteratorHelper(_Range[\"default\"].overlaps.apply(_Range[\"default\"], _toConsumableArray(ranges))),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              r1 = _step$value[0],\n              r2 = _step$value[1];\n\n          this.$errors.add(\"Overlapping sections: \".concat(r1.toString(), \" and \").concat(r2.toString()));\n        } // Check for missing positions\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var flatRanges = (0, _utils.flattenArray)(ranges.map(function (r) {\n        return _toConsumableArray(r);\n      }));\n      var missingPositions = [1, 2, 3, 4, 5, 6,\n      /*7, 8,*/\n      11].filter(function (p) {\n        return !flatRanges.includes(p);\n      });\n\n      if (missingPositions.length) {\n        this.$errors.add(\"Missing digits: \".concat(missingPositions.join(', ')));\n      } // Duplicate header check\n\n\n      if (aggr.duplicateHeaders.size) {\n        aggr.duplicateHeaders.forEach(function (header) {\n          _this.$errors.add(\"Duplicate header \\\"\".concat(header, \"\\\" in sections \").concat(aggr.headers.get(header).map(function (s) {\n            return s.range.toString();\n          }).join(', ')));\n        });\n      } // If position ranges are not defined correctly, import MUST be canceled.\n\n\n      if (this.hasErrors) {\n        return;\n      } // Year range covered by the JSON\n\n\n      var overallYearRange = new _Range[\"default\"](json.YearLesser, json.YearGreater); // Initialize the map.\n\n      var outMap = {\n        \"for\": overallYearRange,\n        sections: json.Sections.map(function (inSection, sectionIndex) {\n          var sectionHeaders = inSection.Headers;\n\n          if (!sectionHeaders.length) {\n            _this.$errors.add(\"No headers in section \".concat(inSection.range.toString()));\n          }\n\n          var sectionCharLength = inSection.EndPos - inSection.StartPos + 1;\n          var outSection = {\n            headers: inSection.headerKeys,\n            \"for\": inSection.range\n          };\n\n          if (inSection.hasConditional) {\n            try {\n              outSection.when = _objectSpread({\n                \"for\": new _Range[\"default\"](inSection.StartPosWhen, inSection.EndPosWhen)\n              }, parseConditional(inSection.AlwaysWhen));\n            } catch (e) {\n              _this.$errors.add(\"\".concat(e.message, \" in section \").concat(inSection.range.toString()));\n            }\n          }\n\n          outSection.variations = inSection.Rows.map(function (inSectionRow, sectionRowIndex) {\n            var sectionValues = inSectionRow.DecodedValues.map(function (v) {\n              return new _ParameterizedValue[\"default\"](v);\n            });\n            var currentContext = \"row \".concat(sectionRowIndex, \" in section \").concat(sectionIndex, \"(\").concat(inSection.range.toString(), \")\");\n\n            if (sectionHeaders.length != sectionValues.length) {\n              _this.$errors.add(\"The number of the decoded values does not match the number of the headers at \".concat(currentContext, \".\"));\n            }\n\n            var variation = {\n              values: sectionValues.map(function (v) {\n                return v.normalized;\n              }),\n              choices: []\n            };\n            var codedValues = inSectionRow.CodedValues;\n\n            if (Array.isArray(codedValues)) {\n              // type: CodedValueStringCollection\n              // This case is only valid when the year range is finite.\n              if (overallYearRange.isInfinite) {\n                _this.$errors.add(\"Coded values are given as a string collection but the year range is open-ended at \".concat(currentContext, \".\"));\n              } else if (overallYearRange.end - overallYearRange.start + 1 !== codedValues.length) {\n                // If we're given the coded values as a StringCollection\n                // the number of the values must match the number of years.\n                _this.$errors.add(\"Coded values are given as a string collection but the number of years does not match the number of the values at \".concat(currentContext, \".\"));\n              } else {\n                // If the collection is valid\n                if (codedValues.every(function (v) {\n                  return v == codedValues[0];\n                })) {\n                  // If all of the items are the same we simply add indefinite range with the value.\n                  try {\n                    variation.choices = [{\n                      pattern: parseCode(codedValues[0], sectionCharLength),\n                      \"for\": new _Range[\"default\"](null, null)\n                    }];\n                  } catch (e) {\n                    e instanceof _errors.EmptyCodeError || _this.$errors.add(\"\".concat(e.message, \" at \").concat(currentContext));\n                  }\n                } else {\n                  // type: Code\n                  // Otherwise, we just give each value a year range.\n                  variation.choices = codedValues.map(function (v, i) {\n                    try {\n                      return {\n                        pattern: parseCode(v, sectionCharLength),\n                        \"for\": new _Range[\"default\"](i + overallYearRange.start, i + overallYearRange.start)\n                      };\n                    } catch (e) {\n                      e instanceof _errors.EmptyCodeError || _this.$errors.add(\"\".concat(e.message, \" at \").concat(currentContext));\n                    }\n                  }).filter(function (c) {\n                    return !!c;\n                  });\n                }\n              }\n            } else {\n              // CodedValueString\n              try {\n                variation.choices = [{\n                  pattern: parseCode(codedValues, sectionCharLength),\n                  \"for\": new _Range[\"default\"](null, null)\n                }];\n              } catch (e) {\n                e instanceof _errors.EmptyCodeError || _this.$errors.add(\"\".concat(e.message, \" at \").concat(currentContext));\n              }\n            }\n\n            if (variation.choices.length) {\n              variation.choices.forEach(function (_ref5) {\n                var pattern = _ref5.pattern;\n                sectionValues.forEach(function (pv) {\n                  try {\n                    validateDecodedValue(pv, pattern);\n                  } catch (e) {\n                    _this.$errors.add(\"\".concat(e.message, \" at \").concat(currentContext));\n                  }\n                });\n              });\n            } else {\n              _this.$errors.add(\"No valid code values found at \".concat(currentContext));\n            }\n\n            return variation;\n          });\n          return outSection;\n        })\n      };\n\n      if (this.hasErrors) {\n        return;\n      }\n\n      this.$map = outMap;\n    }\n  }, {\n    key: \"map\",\n    get: function get() {\n      return this.$map;\n    }\n  }, {\n    key: \"hasErrors\",\n    get: function get() {\n      return this.$errors.size > 0;\n    }\n  }, {\n    key: \"hasWarnings\",\n    get: function get() {\n      return this.$warnings.size > 0;\n    }\n  }, {\n    key: \"errors\",\n    get: function get() {\n      return this.$errors;\n    }\n  }, {\n    key: \"warnings\",\n    get: function get() {\n      return this.$warnings;\n    }\n  }]);\n\n  return Import;\n}();\n\nexports[\"default\"] = Import;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Import.js"
      ],
      "names": [
        "validateSchema",
        "JSONSchemaValidator",
        "compile",
        "jsonSchema",
        "parseCode",
        "code",
        "length",
        "undefined",
        "includes",
        "EmptyCodeError",
        "toUpperCase",
        "trim",
        "split",
        "map",
        "c",
        "join",
        "e",
        "IllegalCodeError",
        "test",
        "replace",
        "validateDecodedValue",
        "decodedValue",
        "wildcardCount",
        "match",
        "invalidRefs",
        "filter",
        "_",
        "ref",
        "index",
        "ReferenceError",
        "offset",
        "original",
        "parseConditional",
        "conditional",
        "String",
        "negate",
        "pattern",
        "RegExp",
        "$1",
        "f",
        "$2",
        "start",
        "Number",
        "parseInt",
        "end",
        "IllegalConditionalError",
        "range",
        "i",
        "push",
        "createAlphaRange",
        "convertAlphaToInteger",
        "alpha",
        "charCodeAt",
        "reduce",
        "s",
        "Math",
        "pow",
        "convertIntegerToAlpha",
        "integer",
        "digits",
        "unshift",
        "floor",
        "l",
        "d",
        "fromCharCode",
        "from",
        "to",
        "RangeError",
        "t",
        "result",
        "Import",
        "json",
        "$errors",
        "Set",
        "$warnings",
        "$prepare",
        "add",
        "aggr",
        "Sections",
        "section",
        "Range",
        "StartPos",
        "EndPos",
        "hasConditional",
        "AlwaysWhen",
        "StartPosWhen",
        "EndPosWhen",
        "headerKeys",
        "Headers",
        "h",
        "headerLocations",
        "headers",
        "get",
        "duplicateHeaders",
        "has",
        "forEach",
        "equals",
        "set",
        "key",
        "toString",
        "sections",
        "errors",
        "Map",
        "ranges",
        "values",
        "overlaps",
        "r1",
        "r2",
        "flatRanges",
        "r",
        "missingPositions",
        "p",
        "size",
        "header",
        "hasErrors",
        "overallYearRange",
        "YearLesser",
        "YearGreater",
        "outMap",
        "inSection",
        "sectionIndex",
        "sectionHeaders",
        "sectionCharLength",
        "outSection",
        "when",
        "message",
        "variations",
        "Rows",
        "inSectionRow",
        "sectionRowIndex",
        "sectionValues",
        "DecodedValues",
        "v",
        "ParameterizedValue",
        "currentContext",
        "variation",
        "normalized",
        "choices",
        "codedValues",
        "CodedValues",
        "Array",
        "isArray",
        "isInfinite",
        "every",
        "pv",
        "$map"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\",
      "sourcesContent": [
        "import Range from './Range';\r\nimport jsonSchema from './schema/Import.json';\r\nimport JSONSchemaValidator from 'ajv';\r\nimport { getTypeOf, flattenArray } from './utils';\r\nimport {\r\n    EmptyCodeError,\r\n    IllegalCodeError,\r\n    ParseError,\r\n    IllegalConditionalError\r\n} from './errors';\r\nimport ParameterizedValue from './ParameterizedValue';\r\n\r\nconst validateSchema = (new JSONSchemaValidator()).compile(jsonSchema);\r\n\r\n/**\r\n * Converts a code to an SQL-compatible regular expression pattern.\r\n * Invalid codes are ignored for composite codes (comma-separated code)\r\n * Exception thrown for invalid codes that are not recognized at the moment.\r\n *\r\n * @param {String} code\r\n * @param {Number} length\r\n * @return {String}\r\n */\r\nfunction parseCode(code, length = 1) {\r\n    if ([undefined, null, '-', ''].includes(code) || 'string' !== getTypeOf(code)) {\r\n        throw new EmptyCodeError(code);\r\n    }\r\n\r\n    code = code.toUpperCase();\r\n\r\n    if (code.includes(',')) {          // \"A, B, C\"\r\n        try {\r\n            return code.trim().split(/\\s*,\\s*/g)\r\n                .map(c => parseCode(c, length))\r\n                .join('|')\r\n            ;\r\n        } catch (e) {\r\n            throw new IllegalCodeError(code);\r\n        }\r\n    // } else if (/^(?=.*\\*)(?:\\*|)(?:[A-HJ-NPR-Z\\d]+(?:\\*|)|)$/.test(code)) {   // \"*\", \"A*B\", \"A*\", \"*A\", \"*A*\"\r\n    //     return code.replace(/\\*/g, '(.+)');\r\n    } else if (/^(?=.*\\*)[A-HJ-NPR-Z\\d\\*]*$/.test(code)) {   // Code with wildcard\r\n        return code.replace(/\\*/g, '(.+)');\r\n    } else if (/^[A-HJ-NPR-Z\\d]+$/.test(code) && length === code.length) {\r\n        return code;\r\n    }\r\n\r\n    throw new IllegalCodeError(code);\r\n}\r\n\r\n/**\r\n * Cleans a decoded value against a code\r\n *\r\n * @param {ParameterizedValue} decodedValue\r\n * @param {String} code\r\n * @return {String}\r\n */\r\nfunction validateDecodedValue(decodedValue, code) {\r\n    const wildcardCount = (code.match(/\\(\\.\\+\\)/g) || []).length;\r\n    const invalidRefs = [...decodedValue].filter(([_, ref]) => {\r\n        return ref.index > wildcardCount\r\n    });\r\n\r\n    if (invalidRefs.length) {\r\n        throw new ReferenceError(`Invalid wildcard reference: ${\r\n            invalidRefs\r\n                .map(([offset, { original }]) => `\"${original}\" at offset ${offset}`)\r\n                .join(', ')\r\n        } in decoded value \"${decodedValue.original}\" against \"${code}\"`);\r\n    }\r\n}\r\n\r\n/**\r\n * Converts a conditional to an SQL compatible regular expression.\r\n *\r\n * @param {String} conditional\r\n * @return {Object}\r\n */\r\nfunction parseConditional(conditional) {\r\n    conditional = String(conditional).trim();\r\n\r\n    if (/^not\\s+(.+)/i.test(conditional)) {\r\n        return {\r\n            negate: true,\r\n            pattern: parseConditional(RegExp.$1).pattern,\r\n        };\r\n    } else {\r\n        return {\r\n            negate: false,\r\n            pattern: conditional\r\n                .split(/\\s*,\\s*/g)\r\n                .map(f => {\r\n                    if (/^([A-HJ-NPR-Z\\d]*)\\*([A-HJ-NPR-Z\\d]*)$/.test(f)) {\r\n                        return `${RegExp.$1}.${RegExp.$2}`;\r\n                    } else if (/^(\\d+)\\-(\\d+)$/.test(f)) {\r\n                        const start = Number.parseInt(RegExp.$1);\r\n                        const end = Number.parseInt(RegExp.$2);\r\n\r\n                        if (start > end) {\r\n                            throw new IllegalConditionalError(f);\r\n                        }\r\n\r\n                        const range = [];\r\n\r\n                        for (let i = start; i <= end; i++) {\r\n                            range.push(i);\r\n                        }\r\n\r\n                        return range.join('|');\r\n                    } else if (/^([A-HJ-NPR-Z]+)\\-([A-HJ-NPR-Z]+)$/.test(f)) {\r\n                        return createAlphaRange(RegExp.$1, RegExp.$2).join('|');\r\n                    } else if (/^[A-HJ-NPR-Z\\d]+$/.test(f)) {\r\n                        return f;\r\n                    }\r\n\r\n                    throw new IllegalConditionalError(f);\r\n                })\r\n                .join('|'),\r\n        };\r\n    }\r\n}\r\n\r\nfunction convertAlphaToInteger(alpha) {\r\n    return [...alpha.toUpperCase()]\r\n        .map(c => c.charCodeAt(0) - 65)\r\n        .reduce((s, c, i) => {\r\n            return s + c * Math.pow(26, alpha.length - i - 1);\r\n        }, 0)\r\n    ;\r\n}\r\n\r\nfunction convertIntegerToAlpha(integer, length = 0) {\r\n    const digits = [];\r\n\r\n    while (integer >= 26) {\r\n        digits.unshift(integer % 26);\r\n        integer = Math.floor(integer / 26);\r\n    }\r\n\r\n    digits.unshift(integer);\r\n\r\n    for (let i = 0, l = digits.length; i < length - l; i++) {\r\n        digits.unshift(0);\r\n    }\r\n\r\n    return digits.map(d => String.fromCharCode(d + 65)).join('');\r\n}\r\n\r\nfunction createAlphaRange(from, to) {\r\n    if (from.length !== to.length) {\r\n        throw new RangeError(`Invalid range in conditional \"${f}\". The lengths must be the same. For example, A-Z, AA-ZZ, or AAA-ZZZ`);\r\n    }\r\n\r\n    const f = convertAlphaToInteger(from);\r\n    const t = convertAlphaToInteger(to);\r\n\r\n    if (f > t) {\r\n        throw new RangeError(`Invalid range in conditional \"${f}\". The start value must not be greater than the end value`);\r\n    }\r\n\r\n    const l = to.length;\r\n\r\n    const result = [];\r\n\r\n    for (let i = f; i <= t; i++) {\r\n        result.push(convertIntegerToAlpha(i, l));\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Parses the JSON from CSV.\r\n */\r\nexport default class Import {\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(json) {\r\n        // Contains errors\r\n        this.$errors = new Set();\r\n\r\n        // Contains warnings - for later use\r\n        this.$warnings = new Set();\r\n\r\n        this.$prepare(json);\r\n    }\r\n\r\n    /**\r\n     * Validates the JSON object prior to import operation\r\n     *\r\n     * @param {JSON} json\r\n     */\r\n    $prepare(json) {\r\n        if (!validateSchema(json)) {\r\n            // console.log(jsonValidate.errors);\r\n            this.$errors.add('JSON schema verification failed');\r\n            return;\r\n        }\r\n\r\n        const aggr = json.Sections.reduce((aggr, section) => {\r\n            section.range = new Range(section.StartPos, section.EndPos);\r\n            section.hasConditional = !!(\r\n                'string' === getTypeOf(section.AlwaysWhen) &&\r\n                section.AlwaysWhen.length > 0 &&\r\n                section.StartPosWhen &&\r\n                section.EndPosWhen &&\r\n                parseInt(section.StartPosWhen) <= parseInt(section.EndPosWhen)\r\n            );\r\n\r\n            section.headerKeys = section.Headers.map(h => {\r\n                const headerLocations = aggr.headers.get(h) || [];\r\n                \r\n                if (!aggr.duplicateHeaders.has(h)) {\r\n                    headerLocations.forEach(s => {\r\n                        if (\r\n                            s === section ||\r\n                            !s.range.equals(section.range) ||\r\n                            (s.range.equals(section.range) && (!s.hasConditional || !section.hasConditional))\r\n                        ) {\r\n                            aggr.duplicateHeaders.add(h);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                headerLocations.push(section);\r\n                aggr.headers.set(h, headerLocations);\r\n\r\n                return h;\r\n            });\r\n\r\n            const key = section.range.toString();\r\n\r\n            if (!aggr.sections.has(key)) {\r\n                aggr.sections.set(key, section);\r\n            } else if (!section.hasConditional || !aggr.sections.get(key).hasConditional) {\r\n                this.errors.add(`Illegal section: ${section.range.toString()}`);\r\n            }\r\n\r\n            return aggr;\r\n        }, {\r\n            headers: new Map(),\r\n            duplicateHeaders: new Set(),\r\n            sections: new Map(),\r\n        });\r\n\r\n        const ranges = [...aggr.sections.values()].map(s => s.range);\r\n\r\n        // Validate ranges\r\n        for (let [r1, r2] of Range.overlaps(...ranges)) {\r\n            this.$errors.add(`Overlapping sections: ${r1.toString()} and ${r2.toString()}`);\r\n        }\r\n\r\n        // Check for missing positions\r\n        const flatRanges = flattenArray(ranges.map(r => [...r]));\r\n        const missingPositions = [1, 2, 3, 4, 5, 6, /*7, 8,*/ 11].filter(p => !flatRanges.includes(p));\r\n\r\n        if (missingPositions.length) {\r\n            this.$errors.add(`Missing digits: ${missingPositions.join(', ')}`);\r\n        }\r\n\r\n        // Duplicate header check\r\n        if (aggr.duplicateHeaders.size) {\r\n            aggr.duplicateHeaders.forEach(header => {\r\n                this.$errors.add(`Duplicate header \"${header}\" in sections ${aggr.headers.get(header).map(s => s.range.toString()).join(', ')}`);\r\n            });\r\n        }\r\n\r\n        // If position ranges are not defined correctly, import MUST be canceled.\r\n        if (this.hasErrors) {\r\n            return;\r\n        }\r\n\r\n        // Year range covered by the JSON\r\n        const overallYearRange = new Range(json.YearLesser, json.YearGreater);\r\n\r\n        // Initialize the map.\r\n        const outMap = {\r\n            for: overallYearRange,\r\n            sections: json.Sections.map((inSection, sectionIndex) => {\r\n                const sectionHeaders = inSection.Headers;\r\n    \r\n                if (!sectionHeaders.length) {\r\n                    this.$errors.add(`No headers in section ${inSection.range.toString()}`);\r\n                }\r\n    \r\n                const sectionCharLength = inSection.EndPos - inSection.StartPos + 1;\r\n                const outSection = {\r\n                    headers: inSection.headerKeys,\r\n                    for: inSection.range,\r\n                };\r\n    \r\n                if (inSection.hasConditional) {\r\n                    try {\r\n                        outSection.when = {\r\n                            for: new Range(inSection.StartPosWhen, inSection.EndPosWhen),\r\n                            ...parseConditional(inSection.AlwaysWhen),\r\n                        };\r\n                    } catch (e) {\r\n                        this.$errors.add(`${e.message} in section ${inSection.range.toString()}`);\r\n                    }\r\n                }\r\n\r\n                outSection.variations = inSection.Rows.map((inSectionRow, sectionRowIndex) => {\r\n                    const sectionValues = inSectionRow.DecodedValues.map(v => new ParameterizedValue(v));\r\n                    const currentContext = `row ${sectionRowIndex} in section ${sectionIndex}(${inSection.range.toString()})`;\r\n    \r\n                    if (sectionHeaders.length != sectionValues.length) {\r\n                        this.$errors.add(`The number of the decoded values does not match the number of the headers at ${currentContext}.`);\r\n                    }\r\n    \r\n                    const variation = { values: sectionValues.map(v => v.normalized), choices: [] };\r\n                    const codedValues = inSectionRow.CodedValues;\r\n    \r\n                    if (Array.isArray(codedValues)) {   // type: CodedValueStringCollection\r\n                        // This case is only valid when the year range is finite.\r\n                        if (overallYearRange.isInfinite) {\r\n                            this.$errors.add(`Coded values are given as a string collection but the year range is open-ended at ${currentContext}.`);\r\n                        } else if (overallYearRange.end - overallYearRange.start + 1 !== codedValues.length) {\r\n                            // If we're given the coded values as a StringCollection\r\n                            // the number of the values must match the number of years.\r\n                            this.$errors.add(`Coded values are given as a string collection but the number of years does not match the number of the values at ${currentContext}.`);\r\n                        } else { // If the collection is valid\r\n                            if (codedValues.every(v => v == codedValues[0])) {\r\n                                // If all of the items are the same we simply add indefinite range with the value.\r\n                                try {\r\n                                    variation.choices = [{\r\n                                        pattern: parseCode(codedValues[0], sectionCharLength),\r\n                                        for: new Range(null, null)\r\n                                    }];\r\n                                } catch (e) {\r\n                                    e instanceof EmptyCodeError || this.$errors.add(`${e.message} at ${currentContext}`);\r\n                                }\r\n                            } else {    // type: Code\r\n                                // Otherwise, we just give each value a year range.\r\n                                variation.choices = codedValues.map((v, i) => {\r\n                                    try {\r\n                                        return {\r\n                                            pattern: parseCode(v, sectionCharLength),\r\n                                            for: new Range(i + overallYearRange.start, i + overallYearRange.start)\r\n                                        };\r\n                                    } catch (e) {\r\n                                        e instanceof EmptyCodeError || this.$errors.add(`${e.message} at ${currentContext}`);\r\n                                    }\r\n                                }).filter(c => !!c);\r\n                            }\r\n                        }\r\n                    } else {    // CodedValueString\r\n                        try {\r\n                            variation.choices = [{\r\n                                pattern: parseCode(codedValues, sectionCharLength),\r\n                                for: new Range(null, null)\r\n                            }];\r\n                        } catch (e) {\r\n                            e instanceof EmptyCodeError || this.$errors.add(`${e.message} at ${currentContext}`);\r\n                        }\r\n                    }\r\n\r\n                    if (variation.choices.length) {\r\n                        variation.choices.forEach(({ pattern }) => {\r\n                            sectionValues.forEach(pv => {\r\n                                try {\r\n                                    validateDecodedValue(pv, pattern);\r\n                                } catch (e) {\r\n                                    this.$errors.add(`${e.message} at ${currentContext}`);\r\n                                }\r\n                            });\r\n                        });\r\n                    } else {\r\n                        this.$errors.add(`No valid code values found at ${currentContext}`);\r\n                    }\r\n\r\n                    return variation;\r\n                });\r\n\r\n                return outSection;\r\n            }),\r\n        };\r\n\r\n        if (this.hasErrors) {\r\n            return;\r\n        }\r\n\r\n        this.$map = outMap;\r\n    }\r\n\r\n    get map() {\r\n        return this.$map;\r\n    }\r\n\r\n    get hasErrors() {\r\n        return this.$errors.size > 0;\r\n    }\r\n\r\n    get hasWarnings() {\r\n        return this.$warnings.size > 0;\r\n    }\r\n\r\n    get errors() {\r\n        return this.$errors;\r\n    }\r\n\r\n    get warnings() {\r\n        return this.$warnings;\r\n    }\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601562067845
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\Range.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\test",
      "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\Range.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\Range.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\Range.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\",
        "sourceFileName": "Range.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * Class for handling finite/infinite ranges easily\r\n */\nvar Range = /*#__PURE__*/function () {\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {number|null} start\r\n   * @param {number|null} end\r\n   */\n  function Range(start, end) {\n    _classCallCheck(this, Range);\n\n    this.start = Range.normalizeInput(start);\n    this.end = Range.normalizeInput(end);\n  }\n  /**\r\n   * Checks if this range equals another range.\r\n   *\r\n   * @param {Range} range\r\n   * @return {Boolean}\r\n   */\n\n\n  _createClass(Range, [{\n    key: \"equals\",\n    value: function equals(range) {\n      return range instanceof Range && this.start === range.start && this.end === range.end;\n    }\n    /**\r\n     * Checks if this range equals another range.\r\n     *\r\n     * @param {Range} range\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"overlapsWith\",\n    value: function overlapsWith(range) {\n      return range instanceof Range && (null === range.start && null === range.end || null === this.start && null === this.end || null === this.start && range.start <= this.end || null === this.end && range.end >= this.start || null === range.start && this.start <= range.end || null === range.end && this.end >= range.start || range.start <= this.start && this.start <= range.end || range.start <= this.end && this.end <= range.end || this.start <= range.start && range.start <= this.end || this.start <= range.end && range.end <= this.end);\n    }\n    /**\r\n     * Checks if the range is a superset of another range given passed to the method.\r\n     *\r\n     * @param {Range} range\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"includes\",\n    value: function includes(range) {\n      return range instanceof Range && (null === this.start && null === this.end || null === this.start && range.end <= this.end || null === this.end && range.start >= this.start || this.start <= range.start && range.end <= this.end);\n    }\n    /**\r\n     * Checks if the range is open-ended.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"toString\",\n\n    /**\r\n     * Returns the string representation\r\n     *\r\n     * @return {String}\r\n     */\n    value: function toString() {\n      return [String(null === this.start ? '' : this.start), String(null === this.end ? '' : this.end)].join('-');\n    }\n    /**\r\n     * Generator\r\n     */\n\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/regeneratorRuntime.mark(function value() {\n      return regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(this.values(), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n    /**\r\n     * Returns the iterator.\r\n     *\r\n     * @return {Generator<number>}\r\n     */\n\n  }, {\n    key: \"values\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function values() {\n      var i;\n      return regeneratorRuntime.wrap(function values$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!this.isInfinite) {\n                _context2.next = 2;\n                break;\n              }\n\n              throw new RangeError('Range MUST be finite!');\n\n            case 2:\n              i = this.start;\n\n            case 3:\n              if (!(i <= this.end)) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 6;\n              return i;\n\n            case 6:\n              i++;\n              _context2.next = 3;\n              break;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, values, this);\n    })\n    /**\r\n     * Collect overlaps between ranges\r\n     *\r\n     * @param  {...Range} ranges\r\n     * @return {Generator<[Range, Range]>}\r\n     */\n\n  }, {\n    key: \"isInfinite\",\n    get: function get() {\n      return null === this.start || null === this.end;\n    }\n    /**\r\n     * Checks if the range is finite.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"isFinite\",\n    get: function get() {\n      return !this.isInfinite;\n    }\n  }], [{\n    key: \"overlaps\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function overlaps() {\n      var _len,\n          ranges,\n          _key,\n          i,\n          j,\n          _args3 = arguments;\n\n      return regeneratorRuntime.wrap(function overlaps$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              for (_len = _args3.length, ranges = new Array(_len), _key = 0; _key < _len; _key++) {\n                ranges[_key] = _args3[_key];\n              }\n\n              i = ranges.length - 1;\n\n            case 2:\n              if (!(i >= 0)) {\n                _context3.next = 14;\n                break;\n              }\n\n              j = i - 1;\n\n            case 4:\n              if (!(j >= 0)) {\n                _context3.next = 11;\n                break;\n              }\n\n              if (!ranges[i].overlapsWith(ranges[j])) {\n                _context3.next = 8;\n                break;\n              }\n\n              _context3.next = 8;\n              return [ranges[i], ranges[j]];\n\n            case 8:\n              j--;\n              _context3.next = 4;\n              break;\n\n            case 11:\n              i--;\n              _context3.next = 2;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, overlaps);\n    })\n    /**\r\n     * Merges a series of rages into a single range.\r\n     *\r\n     * @param  {...Range} range\r\n     * @return {Range}\r\n     * @throws {RangeError}\r\n     */\n\n  }, {\n    key: \"merge\",\n    value: function merge() {\n      return Range.sort.apply(Range, arguments).reduce(function (merged, range) {\n        if (range.start != merged.end + 1) {\n          throw new RangeError('Ranges are not sequential!');\n        }\n\n        return new Range(merged.start, range.end);\n      });\n    }\n    /**\r\n     * Sort ranges\r\n     *\r\n     * @param  {...Range} ranges\r\n     * @return {Array<Range>}\r\n     */\n\n  }, {\n    key: \"sort\",\n    value: function sort() {\n      for (var _len2 = arguments.length, ranges = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        ranges[_key2] = arguments[_key2];\n      }\n\n      return ranges.sort(function (r1, r2) {\n        if (r1.equals(r2)) {\n          return 0;\n        } else if (null === r1.start || null !== r2.start && r1.start < r2.start) {\n          return -1;\n        } else {\n          return 1;\n        }\n      });\n    }\n    /**\r\n     * Normalizes the input value passed to the constructor.\r\n     *\r\n     * @param {*} value\r\n     * @return {number|null}\r\n     */\n\n  }, {\n    key: \"normalizeInput\",\n    value: function normalizeInput(value) {\n      value = Number.parseInt(value);\n      return isNaN(value) ? null : value;\n    }\n  }]);\n\n  return Range;\n}();\n\nexports[\"default\"] = Range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Range.js"
      ],
      "names": [
        "Range",
        "start",
        "end",
        "normalizeInput",
        "range",
        "String",
        "join",
        "Symbol",
        "iterator",
        "values",
        "isInfinite",
        "RangeError",
        "i",
        "ranges",
        "length",
        "j",
        "overlapsWith",
        "sort",
        "reduce",
        "merged",
        "r1",
        "r2",
        "equals",
        "value",
        "Number",
        "parseInt",
        "isNaN"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\",
      "sourcesContent": [
        "/**\r\n * Class for handling finite/infinite ranges easily\r\n */\r\nexport default class Range {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {number|null} start\r\n     * @param {number|null} end\r\n     */\r\n    constructor(start, end) {\r\n        this.start = Range.normalizeInput(start);\r\n        this.end = Range.normalizeInput(end);\r\n    }\r\n\r\n    /**\r\n     * Checks if this range equals another range.\r\n     *\r\n     * @param {Range} range\r\n     * @return {Boolean}\r\n     */\r\n    equals(range) {\r\n        return range instanceof Range && this.start === range.start && this.end === range.end;\r\n    }\r\n\r\n    /**\r\n     * Checks if this range equals another range.\r\n     *\r\n     * @param {Range} range\r\n     * @return {Boolean}\r\n     */\r\n    overlapsWith(range) {\r\n        return range instanceof Range && (\r\n            (null === range.start && null === range.end) ||\r\n            (null === this.start && null === this.end) ||\r\n            (null === this.start && range.start <= this.end) ||\r\n            (null === this.end && range.end >= this.start) ||\r\n            (null === range.start && this.start <= range.end) ||\r\n            (null === range.end && this.end >= range.start) ||\r\n            (range.start <= this.start && this.start <= range.end) ||\r\n            (range.start <= this.end && this.end <= range.end) ||\r\n            (this.start <= range.start && range.start <= this.end) ||\r\n            (this.start <= range.end && range.end <= this.end)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Checks if the range is a superset of another range given passed to the method.\r\n     *\r\n     * @param {Range} range\r\n     * @return {Boolean}\r\n     */\r\n    includes(range) {\r\n        return range instanceof Range && (\r\n            (null === this.start && null === this.end) ||\r\n            (null === this.start && range.end <= this.end) ||\r\n            (null === this.end && range.start >= this.start) ||\r\n            (this.start <= range.start && range.end <= this.end)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Checks if the range is open-ended.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    get isInfinite() {\r\n        return null === this.start || null === this.end;\r\n    }\r\n\r\n    /**\r\n     * Checks if the range is finite.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    get isFinite() {\r\n        return !this.isInfinite;\r\n    }\r\n\r\n    /**\r\n     * Returns the string representation\r\n     *\r\n     * @return {String}\r\n     */\r\n    toString() {\r\n        return [\r\n            String(null === this.start ? '' : this.start),\r\n            String(null === this.end ? '' : this.end),\r\n        ].join('-');\r\n    }\r\n\r\n    /**\r\n     * Generator\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.values();\r\n    }\r\n\r\n    /**\r\n     * Returns the iterator.\r\n     *\r\n     * @return {Generator<number>}\r\n     */\r\n    *values() {\r\n        if (this.isInfinite) {\r\n            throw new RangeError('Range MUST be finite!');\r\n        }\r\n\r\n        for (let i = this.start; i <= this.end; i++) {\r\n            yield i;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Collect overlaps between ranges\r\n     *\r\n     * @param  {...Range} ranges\r\n     * @return {Generator<[Range, Range]>}\r\n     */\r\n    static *overlaps(...ranges) {\r\n        // Search for overlapping ranges.\r\n        for (let i = ranges.length - 1; i >= 0; i--) {\r\n            for (let j = i - 1; j >= 0; j--) {\r\n                if (ranges[i].overlapsWith(ranges[j])) {\r\n                    yield [ranges[i], ranges[j]];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Merges a series of rages into a single range.\r\n     *\r\n     * @param  {...Range} range\r\n     * @return {Range}\r\n     * @throws {RangeError}\r\n     */\r\n    static merge(...ranges) {\r\n        return Range.sort(...ranges).reduce((merged, range) => {\r\n            if (range.start != merged.end + 1) {\r\n                throw new RangeError('Ranges are not sequential!');\r\n            }\r\n\r\n            return new Range(merged.start, range.end);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sort ranges\r\n     *\r\n     * @param  {...Range} ranges\r\n     * @return {Array<Range>}\r\n     */\r\n    static sort(...ranges) {\r\n        return ranges.sort((r1, r2) => {\r\n            if (r1.equals(r2)) {\r\n                return 0;\r\n            } else if (null === r1.start || (null !== r2.start && r1.start < r2.start)) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Normalizes the input value passed to the constructor.\r\n     *\r\n     * @param {*} value\r\n     * @return {number|null}\r\n     */\r\n    static normalizeInput(value) {\r\n        value = Number.parseInt(value);\r\n\r\n        return isNaN(value) ? null : value;\r\n    }\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601562102085
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\utils\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\utils\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\utils\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\test",
      "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\utils\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\utils\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\utils\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\utils\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTypeOf = getTypeOf;\nexports.flattenArray = flattenArray;\n\n/**\r\n * Returns the string representation of the type of a variable\r\n * string, number, null, undefined, object, function etc\r\n *\r\n * @param {*} variable\r\n * @return {String}\r\n */\nfunction getTypeOf(variable) {\n  return Object.prototype.toString.call(variable).replace(/\\[object (.+)\\]/, '$1').toLowerCase();\n}\n/**\r\n * Flattens an array.\r\n *\r\n * @param {Array} arr\r\n */\n\n\nfunction flattenArray(arr) {\n  if (Array.isArray(arr)) {\n    return arr.reduce(function (flat, elem) {\n      return flat.concat(flattenArray(elem));\n    }, []);\n  } else {\n    return [arr];\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImdldFR5cGVPZiIsInZhcmlhYmxlIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwicmVwbGFjZSIsInRvTG93ZXJDYXNlIiwiZmxhdHRlbkFycmF5IiwiYXJyIiwiQXJyYXkiLCJpc0FycmF5IiwicmVkdWNlIiwiZmxhdCIsImVsZW0iLCJjb25jYXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7QUFPTyxTQUFTQSxTQUFULENBQW1CQyxRQUFuQixFQUE2QjtBQUNoQyxTQUFPQyxNQUFNLENBQUNDLFNBQVAsQ0FBaUJDLFFBQWpCLENBQTBCQyxJQUExQixDQUErQkosUUFBL0IsRUFBeUNLLE9BQXpDLENBQWlELGlCQUFqRCxFQUFvRSxJQUFwRSxFQUEwRUMsV0FBMUUsRUFBUDtBQUNIO0FBRUQ7Ozs7Ozs7QUFLTyxTQUFTQyxZQUFULENBQXNCQyxHQUF0QixFQUEyQjtBQUM5QixNQUFJQyxLQUFLLENBQUNDLE9BQU4sQ0FBY0YsR0FBZCxDQUFKLEVBQXdCO0FBQ3BCLFdBQU9BLEdBQUcsQ0FBQ0csTUFBSixDQUFXLFVBQUNDLElBQUQsRUFBT0MsSUFBUCxFQUFnQjtBQUM5QixhQUFPRCxJQUFJLENBQUNFLE1BQUwsQ0FBWVAsWUFBWSxDQUFDTSxJQUFELENBQXhCLENBQVA7QUFDSCxLQUZNLEVBRUosRUFGSSxDQUFQO0FBR0gsR0FKRCxNQUlPO0FBQ0gsV0FBTyxDQUFDTCxHQUFELENBQVA7QUFDSDtBQUNKIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcVFJvZ2Vyc1xcRGVza3RvcFxcdGVzdFxcZGVjb2RlclxcdXRpbHNcXCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBSZXR1cm5zIHRoZSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIHR5cGUgb2YgYSB2YXJpYWJsZVxyXG4gKiBzdHJpbmcsIG51bWJlciwgbnVsbCwgdW5kZWZpbmVkLCBvYmplY3QsIGZ1bmN0aW9uIGV0Y1xyXG4gKlxyXG4gKiBAcGFyYW0geyp9IHZhcmlhYmxlXHJcbiAqIEByZXR1cm4ge1N0cmluZ31cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRUeXBlT2YodmFyaWFibGUpIHtcclxuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFyaWFibGUpLnJlcGxhY2UoL1xcW29iamVjdCAoLispXFxdLywgJyQxJykudG9Mb3dlckNhc2UoKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEZsYXR0ZW5zIGFuIGFycmF5LlxyXG4gKlxyXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBmbGF0dGVuQXJyYXkoYXJyKSB7XHJcbiAgICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7XHJcbiAgICAgICAgcmV0dXJuIGFyci5yZWR1Y2UoKGZsYXQsIGVsZW0pID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIGZsYXQuY29uY2F0KGZsYXR0ZW5BcnJheShlbGVtKSk7XHJcbiAgICAgICAgfSwgW10pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gW2Fycl07XHJcbiAgICB9XHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "getTypeOf",
        "variable",
        "Object",
        "prototype",
        "toString",
        "call",
        "replace",
        "toLowerCase",
        "flattenArray",
        "arr",
        "Array",
        "isArray",
        "reduce",
        "flat",
        "elem",
        "concat"
      ],
      "mappings": ";;;;;;;;AAAA;;;;;;;AAOO,SAASA,SAAT,CAAmBC,QAAnB,EAA6B;AAChC,SAAOC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,QAA/B,EAAyCK,OAAzC,CAAiD,iBAAjD,EAAoE,IAApE,EAA0EC,WAA1E,EAAP;AACH;AAED;;;;;;;AAKO,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AAC9B,MAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AACpB,WAAOA,GAAG,CAACG,MAAJ,CAAW,UAACC,IAAD,EAAOC,IAAP,EAAgB;AAC9B,aAAOD,IAAI,CAACE,MAAL,CAAYP,YAAY,CAACM,IAAD,CAAxB,CAAP;AACH,KAFM,EAEJ,EAFI,CAAP;AAGH,GAJD,MAIO;AACH,WAAO,CAACL,GAAD,CAAP;AACH;AACJ",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\utils\\",
      "sourcesContent": [
        "/**\r\n * Returns the string representation of the type of a variable\r\n * string, number, null, undefined, object, function etc\r\n *\r\n * @param {*} variable\r\n * @return {String}\r\n */\r\nexport function getTypeOf(variable) {\r\n    return Object.prototype.toString.call(variable).replace(/\\[object (.+)\\]/, '$1').toLowerCase();\r\n}\r\n\r\n/**\r\n * Flattens an array.\r\n *\r\n * @param {Array} arr\r\n */\r\nexport function flattenArray(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return arr.reduce((flat, elem) => {\r\n            return flat.concat(flattenArray(elem));\r\n        }, []);\r\n    } else {\r\n        return [arr];\r\n    }\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601562247257
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\errors\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\errors\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\errors\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\test",
      "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\errors\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\errors\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\errors\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\errors\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IllegalConditionalError = exports.IllegalCodeError = exports.EmptyCodeError = exports.ParseError = void 0;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar ParseError = /*#__PURE__*/function (_Error) {\n  _inherits(ParseError, _Error);\n\n  var _super = _createSuper(ParseError);\n\n  function ParseError() {\n    _classCallCheck(this, ParseError);\n\n    return _super.apply(this, arguments);\n  }\n\n  return ParseError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.ParseError = ParseError;\n\nvar EmptyCodeError = /*#__PURE__*/function (_ParseError) {\n  _inherits(EmptyCodeError, _ParseError);\n\n  var _super2 = _createSuper(EmptyCodeError);\n\n  function EmptyCodeError(code) {\n    var _this;\n\n    _classCallCheck(this, EmptyCodeError);\n\n    _this = _super2.call(this, \"Empty code: \\\"\".concat(code, \"\\\"\"));\n    _this.code = code;\n    return _this;\n  }\n\n  return EmptyCodeError;\n}(ParseError);\n\nexports.EmptyCodeError = EmptyCodeError;\n\nvar IllegalCodeError = /*#__PURE__*/function (_ParseError2) {\n  _inherits(IllegalCodeError, _ParseError2);\n\n  var _super3 = _createSuper(IllegalCodeError);\n\n  function IllegalCodeError(code) {\n    var _this2;\n\n    _classCallCheck(this, IllegalCodeError);\n\n    _this2 = _super3.call(this, \"Illegal code: \\\"\".concat(code, \"\\\"\"));\n    _this2.code = code;\n    return _this2;\n  }\n\n  return IllegalCodeError;\n}(ParseError);\n\nexports.IllegalCodeError = IllegalCodeError;\n\nvar IllegalConditionalError = /*#__PURE__*/function (_ParseError3) {\n  _inherits(IllegalConditionalError, _ParseError3);\n\n  var _super4 = _createSuper(IllegalConditionalError);\n\n  function IllegalConditionalError(conditional) {\n    var _this3;\n\n    _classCallCheck(this, IllegalConditionalError);\n\n    _this3 = _super4.call(this, \"Illegal conditional: \\\"\".concat(conditional, \"\\\"\"));\n    _this3.conditional = conditional;\n    return _this3;\n  }\n\n  return IllegalConditionalError;\n}(ParseError);\n\nexports.IllegalConditionalError = IllegalConditionalError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlBhcnNlRXJyb3IiLCJFcnJvciIsIkVtcHR5Q29kZUVycm9yIiwiY29kZSIsIklsbGVnYWxDb2RlRXJyb3IiLCJJbGxlZ2FsQ29uZGl0aW9uYWxFcnJvciIsImNvbmRpdGlvbmFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBQWFBLFU7Ozs7Ozs7Ozs7OztpQ0FBbUJDLEs7Ozs7SUFFbkJDLGM7Ozs7O0FBQ1QsMEJBQVlDLElBQVosRUFBa0I7QUFBQTs7QUFBQTs7QUFDZCx1REFBc0JBLElBQXRCO0FBQ0EsVUFBS0EsSUFBTCxHQUFZQSxJQUFaO0FBRmM7QUFHakI7OztFQUorQkgsVTs7OztJQU92QkksZ0I7Ozs7O0FBQ1QsNEJBQVlELElBQVosRUFBa0I7QUFBQTs7QUFBQTs7QUFDZCwwREFBd0JBLElBQXhCO0FBQ0EsV0FBS0EsSUFBTCxHQUFZQSxJQUFaO0FBRmM7QUFHakI7OztFQUppQ0gsVTs7OztJQU96QkssdUI7Ozs7O0FBQ1QsbUNBQVlDLFdBQVosRUFBeUI7QUFBQTs7QUFBQTs7QUFDckIsaUVBQStCQSxXQUEvQjtBQUNBLFdBQUtBLFdBQUwsR0FBbUJBLFdBQW5CO0FBRnFCO0FBR3hCOzs7RUFKd0NOLFUiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxUUm9nZXJzXFxEZXNrdG9wXFx0ZXN0XFxkZWNvZGVyXFxlcnJvcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBQYXJzZUVycm9yIGV4dGVuZHMgRXJyb3Ige31cclxuXHJcbmV4cG9ydCBjbGFzcyBFbXB0eUNvZGVFcnJvciBleHRlbmRzIFBhcnNlRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoY29kZSkge1xyXG4gICAgICAgIHN1cGVyKGBFbXB0eSBjb2RlOiBcIiR7Y29kZX1cImApO1xyXG4gICAgICAgIHRoaXMuY29kZSA9IGNvZGU7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBJbGxlZ2FsQ29kZUVycm9yIGV4dGVuZHMgUGFyc2VFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3Rvcihjb2RlKSB7XHJcbiAgICAgICAgc3VwZXIoYElsbGVnYWwgY29kZTogXCIke2NvZGV9XCJgKTtcclxuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgSWxsZWdhbENvbmRpdGlvbmFsRXJyb3IgZXh0ZW5kcyBQYXJzZUVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGNvbmRpdGlvbmFsKSB7XHJcbiAgICAgICAgc3VwZXIoYElsbGVnYWwgY29uZGl0aW9uYWw6IFwiJHtjb25kaXRpb25hbH1cImApO1xyXG4gICAgICAgIHRoaXMuY29uZGl0aW9uYWwgPSBjb25kaXRpb25hbDtcclxuICAgIH1cclxufVxyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "ParseError",
        "Error",
        "EmptyCodeError",
        "code",
        "IllegalCodeError",
        "IllegalConditionalError",
        "conditional"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAaA,U;;;;;;;;;;;;iCAAmBC,K;;;;IAEnBC,c;;;;;AACT,0BAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,uDAAsBA,IAAtB;AACA,UAAKA,IAAL,GAAYA,IAAZ;AAFc;AAGjB;;;EAJ+BH,U;;;;IAOvBI,gB;;;;;AACT,4BAAYD,IAAZ,EAAkB;AAAA;;AAAA;;AACd,0DAAwBA,IAAxB;AACA,WAAKA,IAAL,GAAYA,IAAZ;AAFc;AAGjB;;;EAJiCH,U;;;;IAOzBK,uB;;;;;AACT,mCAAYC,WAAZ,EAAyB;AAAA;;AAAA;;AACrB,iEAA+BA,WAA/B;AACA,WAAKA,WAAL,GAAmBA,WAAnB;AAFqB;AAGxB;;;EAJwCN,U",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\errors\\",
      "sourcesContent": [
        "export class ParseError extends Error {}\r\n\r\nexport class EmptyCodeError extends ParseError {\r\n    constructor(code) {\r\n        super(`Empty code: \"${code}\"`);\r\n        this.code = code;\r\n    }\r\n}\r\n\r\nexport class IllegalCodeError extends ParseError {\r\n    constructor(code) {\r\n        super(`Illegal code: \"${code}\"`);\r\n        this.code = code;\r\n    }\r\n}\r\n\r\nexport class IllegalConditionalError extends ParseError {\r\n    constructor(conditional) {\r\n        super(`Illegal conditional: \"${conditional}\"`);\r\n        this.conditional = conditional;\r\n    }\r\n}\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601562281886
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\\\\decoder\\\\ParameterizedValue.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\test\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\test",
      "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\ParameterizedValue.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\ParameterizedValue.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\ParameterizedValue.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\",
        "sourceFileName": "ParameterizedValue.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ParameterizedValue = /*#__PURE__*/function () {\n  function ParameterizedValue(value) {\n    _classCallCheck(this, ParameterizedValue);\n\n    var re = /\\{\\d+\\}/g;\n    var references = new Map();\n    var match;\n\n    while (null !== (match = re.exec(value))) {\n      var index = parseInt(match[0].slice(1, -1));\n      references.set(match.index, Object.freeze({\n        original: match[0],\n        index: index,\n        normalized: \"{\".concat(index, \"}\")\n      }));\n    }\n\n    this.normalized = value.replace(re, function (_, offset) {\n      return \"{\".concat(references.get(offset).index, \"}\");\n    });\n    this.references = references;\n    this.original = value;\n  }\n\n  _createClass(ParameterizedValue, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.normalizedValue;\n    }\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/regeneratorRuntime.mark(function value() {\n      return regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(this.references, \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n  }]);\n\n  return ParameterizedValue;\n}();\n\nexports[\"default\"] = ParameterizedValue;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBhcmFtZXRlcml6ZWRWYWx1ZS5qcyJdLCJuYW1lcyI6WyJQYXJhbWV0ZXJpemVkVmFsdWUiLCJ2YWx1ZSIsInJlIiwicmVmZXJlbmNlcyIsIk1hcCIsIm1hdGNoIiwiZXhlYyIsImluZGV4IiwicGFyc2VJbnQiLCJzbGljZSIsInNldCIsIk9iamVjdCIsImZyZWV6ZSIsIm9yaWdpbmFsIiwibm9ybWFsaXplZCIsInJlcGxhY2UiLCJfIiwib2Zmc2V0IiwiZ2V0Iiwibm9ybWFsaXplZFZhbHVlIiwiU3ltYm9sIiwiaXRlcmF0b3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7SUFBcUJBLGtCO0FBQ2pCLDhCQUFZQyxLQUFaLEVBQW1CO0FBQUE7O0FBQ2YsUUFBTUMsRUFBRSxHQUFHLFVBQVg7QUFDQSxRQUFNQyxVQUFVLEdBQUcsSUFBSUMsR0FBSixFQUFuQjtBQUNBLFFBQUlDLEtBQUo7O0FBRUEsV0FBTyxVQUFVQSxLQUFLLEdBQUdILEVBQUUsQ0FBQ0ksSUFBSCxDQUFRTCxLQUFSLENBQWxCLENBQVAsRUFBMEM7QUFDdEMsVUFBTU0sS0FBSyxHQUFHQyxRQUFRLENBQUNILEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBU0ksS0FBVCxDQUFlLENBQWYsRUFBa0IsQ0FBQyxDQUFuQixDQUFELENBQXRCO0FBQ0FOLE1BQUFBLFVBQVUsQ0FBQ08sR0FBWCxDQUNJTCxLQUFLLENBQUNFLEtBRFYsRUFDaUJJLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjO0FBQ3ZCQyxRQUFBQSxRQUFRLEVBQUVSLEtBQUssQ0FBQyxDQUFELENBRFE7QUFDSEUsUUFBQUEsS0FBSyxFQUFMQSxLQURHO0FBQ0lPLFFBQUFBLFVBQVUsYUFBTVAsS0FBTjtBQURkLE9BQWQsQ0FEakI7QUFLSDs7QUFFRCxTQUFLTyxVQUFMLEdBQWtCYixLQUFLLENBQUNjLE9BQU4sQ0FBY2IsRUFBZCxFQUFrQixVQUFDYyxDQUFELEVBQUlDLE1BQUosRUFBZTtBQUMvQyx3QkFBV2QsVUFBVSxDQUFDZSxHQUFYLENBQWVELE1BQWYsRUFBdUJWLEtBQWxDO0FBQ0gsS0FGaUIsQ0FBbEI7QUFJQSxTQUFLSixVQUFMLEdBQWtCQSxVQUFsQjtBQUNBLFNBQUtVLFFBQUwsR0FBZ0JaLEtBQWhCO0FBQ0g7Ozs7K0JBRVU7QUFDUCxhQUFPLEtBQUtrQixlQUFaO0FBQ0g7O1NBRUNDLE1BQU0sQ0FBQ0MsUTs7Ozs7O0FBQ0wsNENBQU8sS0FBS2xCLFVBQVoiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxUUm9nZXJzXFxEZXNrdG9wXFx0ZXN0XFxkZWNvZGVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBQYXJhbWV0ZXJpemVkVmFsdWUge1xyXG4gICAgY29uc3RydWN0b3IodmFsdWUpIHtcclxuICAgICAgICBjb25zdCByZSA9IC9cXHtcXGQrXFx9L2c7XHJcbiAgICAgICAgY29uc3QgcmVmZXJlbmNlcyA9IG5ldyBNYXAoKTtcclxuICAgICAgICBsZXQgbWF0Y2g7XHJcblxyXG4gICAgICAgIHdoaWxlIChudWxsICE9PSAobWF0Y2ggPSByZS5leGVjKHZhbHVlKSkpIHtcclxuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBwYXJzZUludChtYXRjaFswXS5zbGljZSgxLCAtMSkpO1xyXG4gICAgICAgICAgICByZWZlcmVuY2VzLnNldChcclxuICAgICAgICAgICAgICAgIG1hdGNoLmluZGV4LCBPYmplY3QuZnJlZXplKHtcclxuICAgICAgICAgICAgICAgICAgICBvcmlnaW5hbDogbWF0Y2hbMF0sIGluZGV4LCBub3JtYWxpemVkOiBgeyR7aW5kZXh9fWBcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMubm9ybWFsaXplZCA9IHZhbHVlLnJlcGxhY2UocmUsIChfLCBvZmZzZXQpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIGB7JHtyZWZlcmVuY2VzLmdldChvZmZzZXQpLmluZGV4fX1gO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLnJlZmVyZW5jZXMgPSByZWZlcmVuY2VzO1xyXG4gICAgICAgIHRoaXMub3JpZ2luYWwgPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICB0b1N0cmluZygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5ub3JtYWxpemVkVmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgKltTeW1ib2wuaXRlcmF0b3JdKCkge1xyXG4gICAgICAgIHlpZWxkICp0aGlzLnJlZmVyZW5jZXM7XHJcbiAgICB9XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "ParameterizedValue.js"
      ],
      "names": [
        "ParameterizedValue",
        "value",
        "re",
        "references",
        "Map",
        "match",
        "exec",
        "index",
        "parseInt",
        "slice",
        "set",
        "Object",
        "freeze",
        "original",
        "normalized",
        "replace",
        "_",
        "offset",
        "get",
        "normalizedValue",
        "Symbol",
        "iterator"
      ],
      "mappings": ";;;;;;;;;;;;;IAAqBA,kB;AACjB,8BAAYC,KAAZ,EAAmB;AAAA;;AACf,QAAMC,EAAE,GAAG,UAAX;AACA,QAAMC,UAAU,GAAG,IAAIC,GAAJ,EAAnB;AACA,QAAIC,KAAJ;;AAEA,WAAO,UAAUA,KAAK,GAAGH,EAAE,CAACI,IAAH,CAAQL,KAAR,CAAlB,CAAP,EAA0C;AACtC,UAAMM,KAAK,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAL,CAASI,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAD,CAAtB;AACAN,MAAAA,UAAU,CAACO,GAAX,CACIL,KAAK,CAACE,KADV,EACiBI,MAAM,CAACC,MAAP,CAAc;AACvBC,QAAAA,QAAQ,EAAER,KAAK,CAAC,CAAD,CADQ;AACHE,QAAAA,KAAK,EAALA,KADG;AACIO,QAAAA,UAAU,aAAMP,KAAN;AADd,OAAd,CADjB;AAKH;;AAED,SAAKO,UAAL,GAAkBb,KAAK,CAACc,OAAN,CAAcb,EAAd,EAAkB,UAACc,CAAD,EAAIC,MAAJ,EAAe;AAC/C,wBAAWd,UAAU,CAACe,GAAX,CAAeD,MAAf,EAAuBV,KAAlC;AACH,KAFiB,CAAlB;AAIA,SAAKJ,UAAL,GAAkBA,UAAlB;AACA,SAAKU,QAAL,GAAgBZ,KAAhB;AACH;;;;+BAEU;AACP,aAAO,KAAKkB,eAAZ;AACH;;SAECC,MAAM,CAACC,Q;;;;;;AACL,4CAAO,KAAKlB,UAAZ",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\test\\decoder\\",
      "sourcesContent": [
        "export default class ParameterizedValue {\r\n    constructor(value) {\r\n        const re = /\\{\\d+\\}/g;\r\n        const references = new Map();\r\n        let match;\r\n\r\n        while (null !== (match = re.exec(value))) {\r\n            const index = parseInt(match[0].slice(1, -1));\r\n            references.set(\r\n                match.index, Object.freeze({\r\n                    original: match[0], index, normalized: `{${index}}`\r\n                })\r\n            );\r\n        }\r\n        \r\n        this.normalized = value.replace(re, (_, offset) => {\r\n            return `{${references.get(offset).index}}`;\r\n        });\r\n\r\n        this.references = references;\r\n        this.original = value;\r\n    }\r\n\r\n    toString() {\r\n        return this.normalizedValue;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield *this.references;\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1601562300341
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar dotenv = require('dotenv');\n\nvar parseCSV = require('csv-parse');\n\nvar fs = require('fs');\n\ndotenv.config({\n  silent: true\n});\n\nvar importer = require('./decoder/Importer');\n\nvar _require = require('process'),\n    exit = _require.exit;\n\nvar fileImport = fs.readFileSync('./csv/1.csv', {\n  encoding: 'utf-8'\n}); // const connection = mysql.createConnection({\n//     host: 'localhost',\n//     user: 'root',\n//     password: '',\n//     database: 'dieselvin_import_production'\n// });\n// connection.connect(function(err) {\n//   if (err) {\n//     return console.error('error: ' + err.message);\n//   }\n//   console.log('Connected to the MySQL server.');\n// });\n\nparseCSV(fileImport.toString('utf-8'), {\n  columns: ['ID', 'Manufacturer', 'JSON'],\n  skip_empty_lines: true,\n  from: 2\n}, /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(error, records) {\n    var errors, lineNumber, _iterator, _step, record, message;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!error) {\n              _context.next = 3;\n              break;\n            }\n\n            console.log(['Error while parsing CSV: ' + error]);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            errors = [];\n            lineNumber = 0;\n            _iterator = _createForOfIteratorHelper(records);\n            _context.prev = 6;\n\n            _iterator.s();\n\n          case 8:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 22;\n              break;\n            }\n\n            record = _step.value;\n            lineNumber++;\n            _context.prev = 11;\n            _context.next = 14;\n            return importer.put(JSON.parse(record.JSON), true);\n\n          case 14:\n            _context.next = 20;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](11);\n            message = _context.t0.message;\n            errors.push(\"ID \".concat(record.ID, \" at line \").concat(lineNumber, \": \").concat(message));\n\n          case 20:\n            _context.next = 8;\n            break;\n\n          case 22:\n            _context.next = 27;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t1 = _context[\"catch\"](6);\n\n            _iterator.e(_context.t1);\n\n          case 27:\n            _context.prev = 27;\n\n            _iterator.f();\n\n            return _context.finish(27);\n\n          case 30:\n            exit();\n\n          case 31:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 24, 27, 30], [11, 16]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRvdGVudiIsInJlcXVpcmUiLCJwYXJzZUNTViIsImZzIiwiY29uZmlnIiwic2lsZW50IiwiaW1wb3J0ZXIiLCJleGl0IiwiZmlsZUltcG9ydCIsInJlYWRGaWxlU3luYyIsImVuY29kaW5nIiwidG9TdHJpbmciLCJjb2x1bW5zIiwic2tpcF9lbXB0eV9saW5lcyIsImZyb20iLCJlcnJvciIsInJlY29yZHMiLCJjb25zb2xlIiwibG9nIiwiZXJyb3JzIiwibGluZU51bWJlciIsInJlY29yZCIsInB1dCIsIkpTT04iLCJwYXJzZSIsIm1lc3NhZ2UiLCJwdXNoIiwiSUQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsSUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsV0FBRCxDQUF4Qjs7QUFDQSxJQUFNRSxFQUFFLEdBQUdGLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBRCxNQUFNLENBQUNJLE1BQVAsQ0FBYztBQUFDQyxFQUFBQSxNQUFNLEVBQUU7QUFBVCxDQUFkOztBQUNBLElBQU1DLFFBQVEsR0FBR0wsT0FBTyxDQUFDLG9CQUFELENBQXhCOztlQUNpQkEsT0FBTyxDQUFDLFNBQUQsQztJQUFoQk0sSSxZQUFBQSxJOztBQUVSLElBQUlDLFVBQVUsR0FBR0wsRUFBRSxDQUFDTSxZQUFILENBQWdCLGFBQWhCLEVBQStCO0FBQUNDLEVBQUFBLFFBQVEsRUFBRTtBQUFYLENBQS9CLENBQWpCLEMsQ0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUFSLFFBQVEsQ0FBQ00sVUFBVSxDQUFDRyxRQUFYLENBQW9CLE9BQXBCLENBQUQsRUFBK0I7QUFDbkNDLEVBQUFBLE9BQU8sRUFBRSxDQUFDLElBQUQsRUFBTyxjQUFQLEVBQXVCLE1BQXZCLENBRDBCO0FBRW5DQyxFQUFBQSxnQkFBZ0IsRUFBRSxJQUZpQjtBQUduQ0MsRUFBQUEsSUFBSSxFQUFFO0FBSDZCLENBQS9CO0FBQUEscUVBSUwsaUJBQU9DLEtBQVAsRUFBY0MsT0FBZDtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBQ0tELEtBREw7QUFBQTtBQUFBO0FBQUE7O0FBRUtFLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLENBQUMsOEJBQThCSCxLQUEvQixDQUFaO0FBRkw7O0FBQUE7QUFLS0ksWUFBQUEsTUFMTCxHQUtjLEVBTGQ7QUFNS0MsWUFBQUEsVUFOTCxHQU1rQixDQU5sQjtBQUFBLG1EQU9vQkosT0FQcEI7QUFBQTs7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQU9VSyxZQUFBQSxNQVBWO0FBUUtELFlBQUFBLFVBQVU7QUFSZjtBQUFBO0FBQUEsbUJBV2VkLFFBQVEsQ0FBQ2dCLEdBQVQsQ0FBYUMsSUFBSSxDQUFDQyxLQUFMLENBQVdILE1BQU0sQ0FBQ0UsSUFBbEIsQ0FBYixFQUFzQyxJQUF0QyxDQVhmOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFhZUUsWUFBQUEsT0FiZixlQWFlQSxPQWJmO0FBY1NOLFlBQUFBLE1BQU0sQ0FBQ08sSUFBUCxjQUFrQkwsTUFBTSxDQUFDTSxFQUF6QixzQkFBdUNQLFVBQXZDLGVBQXNESyxPQUF0RDs7QUFkVDtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTs7QUFBQTtBQUFBOztBQUFBOztBQUFBOztBQUFBO0FBaUJDbEIsWUFBQUEsSUFBSTs7QUFqQkw7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FKSzs7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQUFSIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcVFJvZ2Vyc1xcRGVza3RvcFxcVXBkYXRlIFZpbkRlY29kZXJcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRvdGVudiA9IHJlcXVpcmUoJ2RvdGVudicpO1xyXG5jb25zdCBwYXJzZUNTViA9IHJlcXVpcmUoJ2Nzdi1wYXJzZScpO1xyXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XHJcbmRvdGVudi5jb25maWcoe3NpbGVudDogdHJ1ZX0pO1xyXG5jb25zdCBpbXBvcnRlciA9IHJlcXVpcmUoJy4vZGVjb2Rlci9JbXBvcnRlcicpOyBcclxuY29uc3QgeyBleGl0IH0gPSByZXF1aXJlKCdwcm9jZXNzJyk7XHJcbiAgXHJcbmxldCBmaWxlSW1wb3J0ID0gZnMucmVhZEZpbGVTeW5jKCcuL2Nzdi8xLmNzdicsIHtlbmNvZGluZzogJ3V0Zi04J30pO1xyXG5cclxuLy8gY29uc3QgY29ubmVjdGlvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xyXG4vLyAgICAgaG9zdDogJ2xvY2FsaG9zdCcsXHJcbi8vICAgICB1c2VyOiAncm9vdCcsXHJcbi8vICAgICBwYXNzd29yZDogJycsXHJcbi8vICAgICBkYXRhYmFzZTogJ2RpZXNlbHZpbl9pbXBvcnRfcHJvZHVjdGlvbidcclxuLy8gfSk7XHJcblxyXG4vLyBjb25uZWN0aW9uLmNvbm5lY3QoZnVuY3Rpb24oZXJyKSB7XHJcbi8vICAgaWYgKGVycikge1xyXG4vLyAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoJ2Vycm9yOiAnICsgZXJyLm1lc3NhZ2UpO1xyXG4vLyAgIH1cclxuXHJcbi8vICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCB0byB0aGUgTXlTUUwgc2VydmVyLicpO1xyXG4vLyB9KTtcclxuXHJcbnBhcnNlQ1NWKGZpbGVJbXBvcnQudG9TdHJpbmcoJ3V0Zi04JyksIHtcclxuICAgIGNvbHVtbnM6IFsnSUQnLCAnTWFudWZhY3R1cmVyJywgJ0pTT04nXSxcclxuICAgIHNraXBfZW1wdHlfbGluZXM6IHRydWUsXHJcbiAgICBmcm9tOiAyLFxyXG59LCBhc3luYyAoZXJyb3IsIHJlY29yZHMpID0+IHtcclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFsnRXJyb3Igd2hpbGUgcGFyc2luZyBDU1Y6ICcgKyBlcnJvcl0pO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGxldCBlcnJvcnMgPSBbXTtcclxuICAgIGxldCBsaW5lTnVtYmVyID0gMDtcclxuICAgIGZvciAobGV0IHJlY29yZCBvZiByZWNvcmRzKSB7XHJcbiAgICAgICAgbGluZU51bWJlcisrO1xyXG5cclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBhd2FpdCBpbXBvcnRlci5wdXQoSlNPTi5wYXJzZShyZWNvcmQuSlNPTiksIHRydWUpO1xyXG5cclxuICAgICAgICB9IGNhdGNoICh7bWVzc2FnZX0pIHtcclxuICAgICAgICAgICAgZXJyb3JzLnB1c2goYElEICR7cmVjb3JkLklEfSBhdCBsaW5lICR7bGluZU51bWJlcn06ICR7bWVzc2FnZX1gKTsgXHJcbiAgICAgICAgfSBcclxuICAgIH1cclxuICAgIGV4aXQoKTtcclxufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "require",
        "parseCSV",
        "fs",
        "config",
        "silent",
        "importer",
        "exit",
        "fileImport",
        "readFileSync",
        "encoding",
        "toString",
        "columns",
        "skip_empty_lines",
        "from",
        "error",
        "records",
        "console",
        "log",
        "errors",
        "lineNumber",
        "record",
        "put",
        "JSON",
        "parse",
        "message",
        "push",
        "ID"
      ],
      "mappings": ";;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB;;AACAD,MAAM,CAACI,MAAP,CAAc;AAACC,EAAAA,MAAM,EAAE;AAAT,CAAd;;AACA,IAAMC,QAAQ,GAAGL,OAAO,CAAC,oBAAD,CAAxB;;eACiBA,OAAO,CAAC,SAAD,C;IAAhBM,I,YAAAA,I;;AAER,IAAIC,UAAU,GAAGL,EAAE,CAACM,YAAH,CAAgB,aAAhB,EAA+B;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAA/B,CAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEAR,QAAQ,CAACM,UAAU,CAACG,QAAX,CAAoB,OAApB,CAAD,EAA+B;AACnCC,EAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,cAAP,EAAuB,MAAvB,CAD0B;AAEnCC,EAAAA,gBAAgB,EAAE,IAFiB;AAGnCC,EAAAA,IAAI,EAAE;AAH6B,CAA/B;AAAA,qEAIL,iBAAOC,KAAP,EAAcC,OAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBACKD,KADL;AAAA;AAAA;AAAA;;AAEKE,YAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,8BAA8BH,KAA/B,CAAZ;AAFL;;AAAA;AAKKI,YAAAA,MALL,GAKc,EALd;AAMKC,YAAAA,UANL,GAMkB,CANlB;AAAA,mDAOoBJ,OAPpB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOUK,YAAAA,MAPV;AAQKD,YAAAA,UAAU;AARf;AAAA;AAAA,mBAWed,QAAQ,CAACgB,GAAT,CAAaC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACE,IAAlB,CAAb,EAAsC,IAAtC,CAXf;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaeE,YAAAA,OAbf,eAaeA,OAbf;AAcSN,YAAAA,MAAM,CAACO,IAAP,cAAkBL,MAAM,CAACM,EAAzB,sBAAuCP,UAAvC,eAAsDK,OAAtD;;AAdT;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAiBClB,YAAAA,IAAI;;AAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAJK;;AAAA;AAAA;AAAA;AAAA,IAAR",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\",
      "sourcesContent": [
        "const dotenv = require('dotenv');\r\nconst parseCSV = require('csv-parse');\r\nconst fs = require('fs');\r\ndotenv.config({silent: true});\r\nconst importer = require('./decoder/Importer'); \r\nconst { exit } = require('process');\r\n  \r\nlet fileImport = fs.readFileSync('./csv/1.csv', {encoding: 'utf-8'});\r\n\r\n// const connection = mysql.createConnection({\r\n//     host: 'localhost',\r\n//     user: 'root',\r\n//     password: '',\r\n//     database: 'dieselvin_import_production'\r\n// });\r\n\r\n// connection.connect(function(err) {\r\n//   if (err) {\r\n//     return console.error('error: ' + err.message);\r\n//   }\r\n\r\n//   console.log('Connected to the MySQL server.');\r\n// });\r\n\r\nparseCSV(fileImport.toString('utf-8'), {\r\n    columns: ['ID', 'Manufacturer', 'JSON'],\r\n    skip_empty_lines: true,\r\n    from: 2,\r\n}, async (error, records) => {\r\n    if (error) {\r\n        console.log(['Error while parsing CSV: ' + error]);\r\n        return;\r\n    }\r\n    let errors = [];\r\n    let lineNumber = 0;\r\n    for (let record of records) {\r\n        lineNumber++;\r\n\r\n        try {\r\n            await importer.put(JSON.parse(record.JSON), true);\r\n\r\n        } catch ({message}) {\r\n            errors.push(`ID ${record.ID} at line ${lineNumber}: ${message}`); \r\n        } \r\n    }\r\n    exit();\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1602773232885
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\Importer.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\Importer.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\Importer.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\Importer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\",
        "sourceFileName": "Importer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.put = put;\nexports.remove = remove;\n\nvar _mysql = _interopRequireDefault(require(\"./mysql\"));\n\nvar _Import = _interopRequireDefault(require(\"./Import\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\r\n * Imports JSON (replace if already exists)\r\n * \r\n * @param {Object} json\r\n * @param {Boolean} validateOnly\r\n * @param {String} reference    VINE ID\r\n */\nfunction put(_x, _x2, _x3) {\n  return _put.apply(this, arguments);\n}\n/**\r\n * Removes JSON by reference (VINE ID)\r\n * \r\n * @param {String} reference \r\n */\n\n\nfunction _put() {\n  _put = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(json, validateOnly, reference) {\n    var preparator, map, lookup, _iterator, _step, section, sectionId, _iterator2, _step2, variation, variationId, _iterator3, _step3, choice;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            preparator = new _Import[\"default\"](json);\n            console.log('Put sql request started');\n\n            if (!preparator.hasErrors) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error(_toConsumableArray(preparator.errors).join('; '));\n\n          case 4:\n            map = preparator.map;\n            _context.next = 7;\n            return _mysql[\"default\"].query('INSERT INTO vin_lookup(start_year, end_year, section_count, reference) VALUES (?, ?, ?, ?)', [map[\"for\"].start, map[\"for\"].end, map.sections.length, reference]);\n\n          case 7:\n            lookup = _context.sent.insertId;\n            _iterator = _createForOfIteratorHelper(map.sections);\n            _context.prev = 9;\n\n            _iterator.s();\n\n          case 11:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 57;\n              break;\n            }\n\n            section = _step.value;\n            console.log('mapping section');\n            _context.next = 16;\n            return _mysql[\"default\"].query('INSERT INTO vin_sections(start_pos, end_pos, property_names, lookup_id, start_pos_when, end_pos_when, negate_when, pattern_when) VALUES (?, ?, ?, ?, ?, ?, ?, ?)', [section[\"for\"].start, section[\"for\"].end, JSON.stringify(section.headers), lookup, section.when ? section.when[\"for\"].start : null, section.when ? section.when[\"for\"].end : null, section.when ? section.when.negate : null, section.when ? section.when.pattern : null]);\n\n          case 16:\n            sectionId = _context.sent.insertId;\n            _iterator2 = _createForOfIteratorHelper(section.variations);\n            _context.prev = 18;\n\n            _iterator2.s();\n\n          case 20:\n            if ((_step2 = _iterator2.n()).done) {\n              _context.next = 47;\n              break;\n            }\n\n            variation = _step2.value;\n            console.log('mapping variations');\n            _context.next = 25;\n            return _mysql[\"default\"].query('INSERT INTO vin_section_variations(property_values, section_id) VALUES (?, ?)', [JSON.stringify(variation.values), sectionId]);\n\n          case 25:\n            variationId = _context.sent.insertId;\n            _iterator3 = _createForOfIteratorHelper(variation.choices);\n            _context.prev = 27;\n\n            _iterator3.s();\n\n          case 29:\n            if ((_step3 = _iterator3.n()).done) {\n              _context.next = 37;\n              break;\n            }\n\n            choice = _step3.value;\n            console.log('mapping choices');\n\n            if (!choice.pattern) {\n              _context.next = 35;\n              break;\n            }\n\n            _context.next = 35;\n            return _mysql[\"default\"].query('INSERT INTO vin_section_variation_choices(start_year, end_year, code_value, variation_id) VALUES (?, ?, ?, ?)', [choice[\"for\"].start, choice[\"for\"].end, choice.pattern, variationId]);\n\n          case 35:\n            _context.next = 29;\n            break;\n\n          case 37:\n            _context.next = 42;\n            break;\n\n          case 39:\n            _context.prev = 39;\n            _context.t0 = _context[\"catch\"](27);\n\n            _iterator3.e(_context.t0);\n\n          case 42:\n            _context.prev = 42;\n\n            _iterator3.f();\n\n            return _context.finish(42);\n\n          case 45:\n            _context.next = 20;\n            break;\n\n          case 47:\n            _context.next = 52;\n            break;\n\n          case 49:\n            _context.prev = 49;\n            _context.t1 = _context[\"catch\"](18);\n\n            _iterator2.e(_context.t1);\n\n          case 52:\n            _context.prev = 52;\n\n            _iterator2.f();\n\n            return _context.finish(52);\n\n          case 55:\n            _context.next = 11;\n            break;\n\n          case 57:\n            _context.next = 62;\n            break;\n\n          case 59:\n            _context.prev = 59;\n            _context.t2 = _context[\"catch\"](9);\n\n            _iterator.e(_context.t2);\n\n          case 62:\n            _context.prev = 62;\n\n            _iterator.f();\n\n            return _context.finish(62);\n\n          case 65:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 59, 62, 65], [18, 49, 52, 55], [27, 39, 42, 45]]);\n  }));\n  return _put.apply(this, arguments);\n}\n\nfunction remove(_x4) {\n  return _remove.apply(this, arguments);\n}\n\nfunction _remove() {\n  _remove = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(reference) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _mysql[\"default\"].query(\"DELETE FROM vin_lookup WHERE reference = ?\", [reference]);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _remove.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkltcG9ydGVyLmpzIl0sIm5hbWVzIjpbInB1dCIsImpzb24iLCJ2YWxpZGF0ZU9ubHkiLCJyZWZlcmVuY2UiLCJwcmVwYXJhdG9yIiwiSW1wb3J0IiwiY29uc29sZSIsImxvZyIsImhhc0Vycm9ycyIsIkVycm9yIiwiZXJyb3JzIiwiam9pbiIsIm1hcCIsImRiIiwicXVlcnkiLCJzdGFydCIsImVuZCIsInNlY3Rpb25zIiwibGVuZ3RoIiwibG9va3VwIiwiaW5zZXJ0SWQiLCJzZWN0aW9uIiwiSlNPTiIsInN0cmluZ2lmeSIsImhlYWRlcnMiLCJ3aGVuIiwibmVnYXRlIiwicGF0dGVybiIsInNlY3Rpb25JZCIsInZhcmlhdGlvbnMiLCJ2YXJpYXRpb24iLCJ2YWx1ZXMiLCJ2YXJpYXRpb25JZCIsImNob2ljZXMiLCJjaG9pY2UiLCJyZW1vdmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQTs7Ozs7OztTQU9zQkEsRzs7O0FBbUR0Qjs7Ozs7Ozs7aUVBbkRPLGlCQUFtQkMsSUFBbkIsRUFBeUJDLFlBQXpCLEVBQXVDQyxTQUF2QztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0dDLFlBQUFBLFVBREgsR0FDZ0IsSUFBSUMsa0JBQUosQ0FBV0osSUFBWCxDQURoQjtBQUVISyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx5QkFBWjs7QUFGRyxpQkFJQ0gsVUFBVSxDQUFDSSxTQUpaO0FBQUE7QUFBQTtBQUFBOztBQUFBLGtCQUtPLElBQUlDLEtBQUosQ0FBVSxtQkFBSUwsVUFBVSxDQUFDTSxNQUFmLEVBQXVCQyxJQUF2QixDQUE0QixJQUE1QixDQUFWLENBTFA7O0FBQUE7QUFRR0MsWUFBQUEsR0FSSCxHQVFTUixVQUFVLENBQUNRLEdBUnBCO0FBQUE7QUFBQSxtQkFVbUJDLGtCQUFHQyxLQUFILENBQ2xCLDRGQURrQixFQUVsQixDQUFFRixHQUFHLE9BQUgsQ0FBUUcsS0FBVixFQUFpQkgs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Um9vdCI6IkM6XFxVc2Vyc1xcVFJvZ2Vyc1xcRGVza3RvcFxcVXBkYXRlIFZpbkRlY29kZXJcXGRlY29kZXJcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkYiBmcm9tICcuL215c3FsJztcclxuaW1wb3J0IEltcG9ydCBmcm9tICcuL0ltcG9ydCc7XHJcblxyXG4vKipcclxuICogSW1wb3J0cyBKU09OIChyZXBsYWNlIGlmIGFscmVhZHkgZXhpc3RzKVxyXG4gKiBcclxuICogQHBhcmFtIHtPYmplY3R9IGpzb25cclxuICogQHBhcmFtIHtCb29sZWFufSB2YWxpZGF0ZU9ubHlcclxuICogQHBhcmFtIHtTdHJpbmd9IHJlZmVyZW5jZSAgICBWSU5FIElEXHJcbiAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcHV0KGpzb24sIHZhbGlkYXRlT25seSwgcmVmZXJlbmNlKSB7XHJcbiAgICBjb25zdCBwcmVwYXJhdG9yID0gbmV3IEltcG9ydChqc29uKTtcclxuICAgIGNvbnNvbGUubG9nKCdQdXQgc3FsIHJlcXVlc3Qgc3RhcnRlZCcpXHJcblxyXG4gICAgaWYgKHByZXBhcmF0b3IuaGFzRXJyb3JzKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFsuLi5wcmVwYXJhdG9yLmVycm9yc10uam9pbignOyAnKSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgbWFwID0gcHJlcGFyYXRvci5tYXA7XHJcblxyXG4gICAgY29uc3QgbG9va3VwID0gKGF3YWl0IGRiLnF1ZXJ5KFxyXG4gICAgICAgICdJTlNFUlQgSU5UTyB2aW5fbG9va3VwKHN0YXJ0X3llYXIsIGVuZF95ZWFyLCBzZWN0aW9uX2NvdW50LCByZWZlcmVuY2UpIFZBTFVFUyAoPywgPywgPywgPyknLFxyXG4gICAgICAgIFsgbWFwLmZvci5zdGFydCwgbWFwLmZvci5lbmQsIG1hcC5zZWN0aW9ucy5sZW5ndGgsIHJlZmVyZW5jZSBdXHJcbiAgICApKS5pbnNlcnRJZDtcclxuXHJcbiAgICBmb3IgKGxldCBzZWN0aW9uIG9mIG1hcC5zZWN0aW9ucykge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdtYXBwaW5nIHNlY3Rpb24nKTtcclxuICAgICAgICBjb25zdCBzZWN0aW9uSWQgPSAoYXdhaXQgZGIucXVlcnkoXHJcbiAgICAgICAgICAgICdJTlNFUlQgSU5UTyB2aW5fc2VjdGlvbnMoc3RhcnRfcG9zLCBlbmRfcG9zLCBwcm9wZXJ0eV9uYW1lcywgbG9va3VwX2lkLCBzdGFydF9wb3Nfd2hlbiwgZW5kX3Bvc193aGVuLCBuZWdhdGVfd2hlbiwgcGF0dGVybl93aGVuKSBWQUxVRVMgKD8sID8sID8sID8sID8sID8sID8sID8pJyxcclxuICAgICAgICAgICAgW1xyXG4gICAgICAgICAgICAgICAgc2VjdGlvbi5mb3Iuc3RhcnQsXHJcbiAgICAgICAgICAgICAgICBzZWN0aW9uLmZvci5lbmQsXHJcbiAgICAgICAgICAgICAgICBKU09OLnN0cmluZ2lmeShzZWN0aW9uLmhlYWRlcnMpLFxyXG4gICAgICAgICAgICAgICAgbG9va3VwLFxyXG4gICAgICAgICAgICAgICAgc2VjdGlvbi53aGVuID8gc2VjdGlvbi53aGVuLmZvci5zdGFydCA6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBzZWN0aW9uLndoZW4gPyBzZWN0aW9uLndoZW4uZm9yLmVuZCA6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBzZWN0aW9uLndoZW4gPyBzZWN0aW9uLndoZW4ubmVnYXRlIDogbnVsbCxcclxuICAgICAgICAgICAgICAgIHNlY3Rpb24ud2hlbiA/IHNlY3Rpb24ud2hlbi5wYXR0ZXJuIDogbnVsbCxcclxuICAgICAgICAgICAgXVxyXG4gICAgICAgICkpLmluc2VydElkO1xyXG5cclxuICAgICAgICBmb3IgKGxldCB2YXJpYXRpb24gb2Ygc2VjdGlvbi52YXJpYXRpb25zKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdtYXBwaW5nIHZhcmlhdGlvbnMnKTtcclxuICAgICAgICAgICAgY29uc3QgdmFyaWF0aW9uSWQgPSAoYXdhaXQgZGIucXVlcnkoXHJcbiAgICAgICAgICAgICAgICAnSU5TRVJUIElOVE8gdmluX3NlY3Rpb25fdmFyaWF0aW9ucyhwcm9wZXJ0eV92YWx1ZXMsIHNlY3Rpb25faWQpIFZBTFVFUyAoPywgPyknLFxyXG4gICAgICAgICAgICAgICAgWyBKU09OLnN0cmluZ2lmeSh2YXJpYXRpb24udmFsdWVzKSwgc2VjdGlvbklkIF1cclxuICAgICAgICAgICAgKSkuaW5zZXJ0SWQ7XHJcblxyXG4gICAgICAgICAgICBmb3IgKGxldCBjaG9pY2Ugb2YgdmFyaWF0aW9uLmNob2ljZXMpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdtYXBwaW5nIGNob2ljZXMnKVxyXG4gICAgICAgICAgICAgICAgaWYgKGNob2ljZS5wYXR0ZXJuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgZGIucXVlcnkoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICdJTlNFUlQgSU5UTyB2aW5fc2VjdGlvbl92YXJpYXRpb25fY2hvaWNlcyhzdGFydF95ZWFyLCBlbmRfeWVhciwgY29kZV92YWx1ZSwgdmFyaWF0aW9uX2lkKSBWQUxVRVMgKD8sID8sID8sID8pJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgWyBjaG9pY2UuZm9yLnN0YXJ0LCBjaG9pY2UuZm9yLmVuZCwgY2hvaWNlLnBhdHRlcm4sIHZhcmlhdGlvbklkIF1cclxuICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlcyBKU09OIGJ5IHJlZmVyZW5jZSAoVklORSBJRClcclxuICogXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSByZWZlcmVuY2UgXHJcbiAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVtb3ZlKHJlZmVyZW5jZSkge1xyXG4gICAgYXdhaXQgZGIucXVlcnkoYERFTEVURSBGUk9NIHZpbl9sb29rdXAgV0hFUkUgcmVmZXJlbmNlID0gP2AsIFtyZWZlcmVuY2VdKTtcclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Importer.js"
      ],
      "names": [
        "put",
        "json",
        "validateOnly",
        "reference",
        "preparator",
        "Import",
        "console",
        "log",
        "hasErrors",
        "Error",
        "errors",
        "join",
        "map",
        "db",
        "query",
        "start",
        "end",
        "sections",
        "length",
        "lookup",
        "insertId",
        "section",
        "JSON",
        "stringify",
        "headers",
        "when",
        "negate",
        "pattern",
        "sectionId",
        "variations",
        "variation",
        "values",
        "variationId",
        "choices",
        "choice",
        "remove"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\",
      "sourcesContent": [
        "import db from './mysql';\r\nimport Import from './Import';\r\n\r\n/**\r\n * Imports JSON (replace if already exists)\r\n * \r\n * @param {Object} json\r\n * @param {Boolean} validateOnly\r\n * @param {String} reference    VINE ID\r\n */\r\nexport async function put(json, validateOnly, reference) {\r\n    const preparator = new Import(json);\r\n    console.log('Put sql request started')\r\n\r\n    if (preparator.hasErrors) {\r\n        throw new Error([...preparator.errors].join('; '));\r\n    }\r\n\r\n    const map = preparator.map;\r\n\r\n    const lookup = (await db.query(\r\n        'INSERT INTO vin_lookup(start_year, end_year, section_count, reference) VALUES (?, ?, ?, ?)',\r\n        [ map.for.start, map.for.end, map.sections.length, reference ]\r\n    )).insertId;\r\n\r\n    for (let section of map.sections) {\r\n        console.log('mapping section');\r\n        const sectionId = (await db.query(\r\n            'INSERT INTO vin_sections(start_pos, end_pos, property_names, lookup_id, start_pos_when, end_pos_when, negate_when, pattern_when) VALUES (?, ?, ?, ?, ?, ?, ?, ?)',\r\n            [\r\n                section.for.start,\r\n                section.for.end,\r\n                JSON.stringify(section.headers),\r\n                lookup,\r\n                section.when ? section.when.for.start : null,\r\n                section.when ? section.when.for.end : null,\r\n                section.when ? section.when.negate : null,\r\n                section.when ? section.when.pattern : null,\r\n            ]\r\n        )).insertId;\r\n\r\n        for (let variation of section.variations) {\r\n            console.log('mapping variations');\r\n            const variationId = (await db.query(\r\n                'INSERT INTO vin_section_variations(property_values, section_id) VALUES (?, ?)',\r\n                [ JSON.stringify(variation.values), sectionId ]\r\n            )).insertId;\r\n\r\n            for (let choice of variation.choices) {\r\n                console.log('mapping choices')\r\n                if (choice.pattern) {\r\n                    await db.query(\r\n                        'INSERT INTO vin_section_variation_choices(start_year, end_year, code_value, variation_id) VALUES (?, ?, ?, ?)',\r\n                        [ choice.for.start, choice.for.end, choice.pattern, variationId ]\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Removes JSON by reference (VINE ID)\r\n * \r\n * @param {String} reference \r\n */\r\nexport async function remove(reference) {\r\n    await db.query(`DELETE FROM vin_lookup WHERE reference = ?`, [reference]);\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601580060046
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\mysql\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\mysql\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\mysql\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\mysql\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\mysql\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\mysql\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\mysql\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.QueryResultEmptyError = void 0;\n\nvar _promise = _interopRequireDefault(require(\"mysql2/promise\"));\n\nvar _config = _interopRequireDefault(require(\"./config.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * MySQL Database Connection\r\n */\nvar DbConnection = /*#__PURE__*/function () {\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {String} host\r\n   * @param {String} database\r\n   * @param {String} username\r\n   * @param {String} password\r\n   */\n  function DbConnection(host, database, username, password) {\n    _classCallCheck(this, DbConnection);\n\n    this.connect();\n    this.host = 'localhost';\n    this.database = 'dieselvin_import_production';\n    this.username = 'root';\n    this.password = '';\n    console.log(this.host, this.database, this.username, \"'\".concat(this.password, \"'\"));\n  }\n  /**\r\n   * Connects to the database\r\n   */\n\n\n  _createClass(DbConnection, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.pool) {\n                  this.pool = _promise[\"default\"].createConnection({\n                    database: 'dieselvin_staging',\n                    host: 'localhost',\n                    // For some ungodly reason this.username is returing an empty string\n                    user: 'root',\n                    password: ''\n                  });\n                } // this.pool.connect(function(err) {\n                //     if (err) {\n                //       return console.error('errorq: ' + err.message);\n                //     }\n                //     console.log('Connected to the MySQL server.2');\n                //   });\n\n\n                return _context.abrupt(\"return\", this.pool);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n    /**\r\n     * Executes an SQL statement.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array|null} binds\r\n     */\n\n  }, {\n    key: \"execute\",\n    value: function () {\n      var _execute = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(sql) {\n        var binds,\n            _args2 = arguments;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                binds = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : undefined;\n                _context2.next = 3;\n                return this.connect();\n\n              case 3:\n                _context2.next = 5;\n                return _context2.sent.query(sql, binds);\n\n              case 5:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function execute(_x) {\n        return _execute.apply(this, arguments);\n      }\n\n      return execute;\n    }()\n    /**\r\n     * Executes an SQL statement and retrieves the result set.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\n\n  }, {\n    key: \"query\",\n    value: function () {\n      var _query = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(sql) {\n        var binds,\n            _args3 = arguments;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                binds = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : undefined;\n                _context3.next = 3;\n                return this.execute(sql, binds);\n\n              case 3:\n                return _context3.abrupt(\"return\", _context3.sent[0]);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function query(_x2) {\n        return _query.apply(this, arguments);\n      }\n\n      return query;\n    }()\n    /**\r\n     * Fetches all records.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\n\n  }, {\n    key: \"fetchAll\",\n    value: function () {\n      var _fetchAll = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(sql) {\n        var binds,\n            _args4 = arguments;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                binds = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : undefined;\n                _context4.next = 3;\n                return this.query(sql, binds);\n\n              case 3:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function fetchAll(_x3) {\n        return _fetchAll.apply(this, arguments);\n      }\n\n      return fetchAll;\n    }()\n    /**\r\n     * Fetches the first record of the result.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\n\n  }, {\n    key: \"fetchOne\",\n    value: function () {\n      var _fetchOne = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(sql) {\n        var binds,\n            rows,\n            _args5 = arguments;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                binds = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : undefined;\n                _context5.next = 3;\n                return this.query(sql, binds);\n\n              case 3:\n                rows = _context5.sent;\n\n                if (!rows.length) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", rows[0]);\n\n              case 8:\n                throw new QueryResultEmptyError();\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function fetchOne(_x4) {\n        return _fetchOne.apply(this, arguments);\n      }\n\n      return fetchOne;\n    }()\n    /**\r\n     * Fetches the value of the first column of the first row.\r\n     * Useful to fetch aggregated values or any SQL query that returns just one value.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\n\n  }, {\n    key: \"fetchScalarValue\",\n    value: function () {\n      var _fetchScalarValue = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(sql) {\n        var binds,\n            _yield$this$execute,\n            _yield$this$execute2,\n            rows,\n            fields,\n            _args6 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                binds = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : null;\n                _context6.next = 3;\n                return this.execute(sql, binds);\n\n              case 3:\n                _yield$this$execute = _context6.sent;\n                _yield$this$execute2 = _slicedToArray(_yield$this$execute, 2);\n                rows = _yield$this$execute2[0];\n                fields = _yield$this$execute2[1];\n\n                if (!rows.length) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", rows[0][fields[0].name]);\n\n              case 11:\n                throw new QueryResultEmptyError();\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function fetchScalarValue(_x5) {\n        return _fetchScalarValue.apply(this, arguments);\n      }\n\n      return fetchScalarValue;\n    }()\n    /**\r\n     * Disconnects from the database.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!this.pool) {\n                  _context7.next = 4;\n                  break;\n                }\n\n                _context7.next = 3;\n                return this.pool.end();\n\n              case 3:\n                this.pool = undefined;\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"transaction\",\n    value: function () {\n      var _transaction = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(body) {\n        var connection;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.connect();\n\n              case 2:\n                _context8.next = 4;\n                return _context8.sent.getConnection();\n\n              case 4:\n                connection = _context8.sent;\n                _context8.prev = 5;\n                _context8.next = 8;\n                return connection.beginTransaction();\n\n              case 8:\n                _context8.next = 10;\n                return body(connection);\n\n              case 10:\n                _context8.next = 12;\n                return connection.commit();\n\n              case 12:\n                _context8.next = 19;\n                break;\n\n              case 14:\n                _context8.prev = 14;\n                _context8.t0 = _context8[\"catch\"](5);\n                _context8.next = 18;\n                return connection.rollback();\n\n              case 18:\n                throw _context8.t0;\n\n              case 19:\n                _context8.prev = 19;\n                _context8.next = 22;\n                return connection.release();\n\n              case 22:\n                return _context8.finish(19);\n\n              case 23:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[5, 14, 19, 23]]);\n      }));\n\n      function transaction(_x6) {\n        return _transaction.apply(this, arguments);\n      }\n\n      return transaction;\n    }()\n  }, {\n    key: \"escape\",\n    value: function escape() {\n      return _promise[\"default\"].escape.apply(_promise[\"default\"], arguments);\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return _promise[\"default\"].format.apply(_promise[\"default\"], arguments);\n    }\n  }, {\n    key: \"raw\",\n    value: function raw() {\n      return _promise[\"default\"].raw.apply(_promise[\"default\"], arguments);\n    }\n  }, {\n    key: \"escapeId\",\n    value: function escapeId() {\n      return _promise[\"default\"].escapeId.apply(_promise[\"default\"], arguments);\n    }\n  }]);\n\n  return DbConnection;\n}(); // Thrown when a query has no matching result.\n\n\nvar QueryResultEmptyError = /*#__PURE__*/function (_Error) {\n  _inherits(QueryResultEmptyError, _Error);\n\n  var _super = _createSuper(QueryResultEmptyError);\n\n  function QueryResultEmptyError() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    _classCallCheck(this, QueryResultEmptyError);\n\n    return _super.call(this, message || 'No matching records');\n  }\n\n  return QueryResultEmptyError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.QueryResultEmptyError = QueryResultEmptyError;\n\nvar _default = new DbConnection(_config[\"default\"].host, _config[\"default\"].database, _config[\"default\"].username, _config[\"default\"].password);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "DbConnection",
        "host",
        "database",
        "username",
        "password",
        "connect",
        "console",
        "log",
        "pool",
        "mysql",
        "createConnection",
        "user",
        "sql",
        "binds",
        "undefined",
        "query",
        "execute",
        "rows",
        "length",
        "QueryResultEmptyError",
        "fields",
        "name",
        "end",
        "body",
        "getConnection",
        "connection",
        "beginTransaction",
        "commit",
        "rollback",
        "release",
        "escape",
        "arguments",
        "format",
        "raw",
        "escapeId",
        "message",
        "Error",
        "config"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\mysql\\",
      "sourcesContent": [
        "import mysql from 'mysql2/promise';\r\n\r\n// The mysql connection parameters are stored in `config/index.js`\r\nimport config from './config.js';\r\n\r\n/**\r\n * MySQL Database Connection\r\n */\r\nclass DbConnection {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {String} host\r\n     * @param {String} database\r\n     * @param {String} username\r\n     * @param {String} password\r\n     */\r\n    constructor (host, database, username, password) {\r\n        this.connect();\r\n        this.host = 'localhost';\r\n        this.database = 'dieselvin_import_production';\r\n        this.username = 'root';\r\n        this.password = '';\r\n        console.log(this.host, this.database, this.username, `'${this.password}'`)\r\n    }\r\n\r\n    /**\r\n     * Connects to the database\r\n     */ \r\n    async connect() {\r\n        if (!this.pool) {\r\n            this.pool = mysql.createConnection({\r\n                database: 'dieselvin_staging',\r\n                host: 'localhost',\r\n                // For some ungodly reason this.username is returing an empty string\r\n                user: 'root',\r\n                password: '',\r\n            });\r\n        }\r\n\r\n        // this.pool.connect(function(err) {\r\n        //     if (err) {\r\n        //       return console.error('errorq: ' + err.message);\r\n        //     }\r\n          \r\n        //     console.log('Connected to the MySQL server.2');\r\n        //   });\r\n\r\n        return this.pool;\r\n    }\r\n\r\n    /**\r\n     * Executes an SQL statement.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array|null} binds\r\n     */\r\n    async execute(sql, binds = undefined) {\r\n        return await (await this.connect()).query(sql, binds);\r\n    }\r\n\r\n    /**\r\n     * Executes an SQL statement and retrieves the result set.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\r\n    async query(sql, binds = undefined) {\r\n        return (await this.execute(sql, binds))[0];\r\n    }\r\n\r\n    /**\r\n     * Fetches all records.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\r\n    async fetchAll(sql, binds = undefined) {\r\n        return await this.query(sql, binds);\r\n    }\r\n\r\n    /**\r\n     * Fetches the first record of the result.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\r\n    async fetchOne(sql, binds = undefined) {\r\n        const rows = await this.query(sql, binds);\r\n\r\n        if (rows.length) {\r\n            return rows[0];\r\n        } else {\r\n            throw new QueryResultEmptyError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetches the value of the first column of the first row.\r\n     * Useful to fetch aggregated values or any SQL query that returns just one value.\r\n     *\r\n     * @param {String} sql\r\n     * @param {Array} binds\r\n     */\r\n    async fetchScalarValue(sql, binds = null) {\r\n        const [rows, fields] = await this.execute(sql, binds);\r\n\r\n        if (rows.length) {\r\n            return rows[0][fields[0].name];\r\n        } else {\r\n            throw new QueryResultEmptyError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disconnects from the database.\r\n     */\r\n    async disconnect() {\r\n        if (this.pool) {\r\n            await this.pool.end();\r\n            this.pool = undefined;\r\n        }\r\n    }\r\n\r\n    async transaction(body) {\r\n        const connection = await (await this.connect()).getConnection();\r\n\r\n        try {\r\n            await connection.beginTransaction();\r\n            await body(connection);\r\n            await connection.commit();\r\n        } catch (e) {\r\n            await connection.rollback();\r\n            throw e;\r\n        } finally {\r\n            await connection.release();\r\n        }\r\n    }\r\n\r\n    escape() {\r\n        return mysql.escape(...arguments);\r\n    }\r\n\r\n    format() {\r\n        return mysql.format(...arguments);\r\n    }\r\n\r\n    raw() {\r\n        return mysql.raw(...arguments);\r\n    }\r\n\r\n    escapeId() {\r\n        return mysql.escapeId(...arguments);\r\n    }\r\n}\r\n\r\n// Thrown when a query has no matching result.\r\nexport class QueryResultEmptyError extends Error {\r\n    constructor(message = '') {\r\n        super(message || 'No matching records');\r\n    }\r\n}\r\n\r\nexport default new DbConnection(config.host, config.database, config.username, config.password);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1602772598792
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\mysql\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\mysql\\\\config.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\mysql\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\mysql\\config.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\mysql\\config.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\mysql\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\mysql\\",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = {\n  host: 'localhost',\n  database: 'dieselvin_import_production',\n  username: 'root',\n  password: ''\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJob3N0IiwiZGF0YWJhc2UiLCJ1c2VybmFtZSIsInBhc3N3b3JkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7ZUFBZTtBQUNYQSxFQUFBQSxJQUFJLEVBQUUsV0FESztBQUVYQyxFQUFBQSxRQUFRLEVBQUUsNkJBRkM7QUFHWEMsRUFBQUEsUUFBUSxFQUFFLE1BSEM7QUFJWEMsRUFBQUEsUUFBUSxFQUFFO0FBSkMsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFRSb2dlcnNcXERlc2t0b3BcXFVwZGF0ZSBWaW5EZWNvZGVyXFxkZWNvZGVyXFxteXNxbFxcIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgaG9zdDogJ2xvY2FsaG9zdCcsXHJcbiAgICBkYXRhYmFzZTogJ2RpZXNlbHZpbl9pbXBvcnRfcHJvZHVjdGlvbicsXHJcbiAgICB1c2VybmFtZTogJ3Jvb3QnLFxyXG4gICAgcGFzc3dvcmQ6ICcnLFxyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "host",
        "database",
        "username",
        "password"
      ],
      "mappings": ";;;;;;eAAe;AACXA,EAAAA,IAAI,EAAE,WADK;AAEXC,EAAAA,QAAQ,EAAE,6BAFC;AAGXC,EAAAA,QAAQ,EAAE,MAHC;AAIXC,EAAAA,QAAQ,EAAE;AAJC,C",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\mysql\\",
      "sourcesContent": [
        "export default {\r\n    host: 'localhost',\r\n    database: 'dieselvin_import_production',\r\n    username: 'root',\r\n    password: '',\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601564508389
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\Import.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\Import.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\Import.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\Import.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\",
        "sourceFileName": "Import.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\nvar _Import = _interopRequireDefault(require(\"./schema/Import.json\"));\n\nvar _ajv = _interopRequireDefault(require(\"ajv\"));\n\nvar _utils = require(\"./utils\");\n\nvar _errors = require(\"./errors\");\n\nvar _ParameterizedValue = _interopRequireDefault(require(\"./ParameterizedValue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar validateSchema = new _ajv[\"default\"]().compile(_Import[\"default\"]);\n/**\r\n * Converts a code to an SQL-compatible regular expression pattern.\r\n * Invalid codes are ignored for composite codes (comma-separated code)\r\n * Exception thrown for invalid codes that are not recognized at the moment.\r\n *\r\n * @param {String} code\r\n * @param {Number} length\r\n * @return {String}\r\n */\n\nfunction parseCode(code) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  if ([undefined, null, '-', ''].includes(code) || 'string' !== (0, _utils.getTypeOf)(code)) {\n    throw new _errors.EmptyCodeError(code);\n  }\n\n  code = code.toUpperCase();\n\n  if (code.includes(',')) {\n    // \"A, B, C\"\n    try {\n      return code.trim().split(/\\s*,\\s*/g).map(function (c) {\n        return parseCode(c, length);\n      }).join('|');\n    } catch (e) {\n      throw new _errors.IllegalCodeError(code);\n    } // } else if (/^(?=.*\\*)(?:\\*|)(?:[A-HJ-NPR-Z\\d]+(?:\\*|)|)$/.test(code)) {   // \"*\", \"A*B\", \"A*\", \"*A\", \"*A*\"\n    //     return code.replace(/\\*/g, '(.+)');\n\n  } else if (/^(?=.*\\*)[A-HJ-NPR-Z\\d\\*]*$/.test(code)) {\n    // Code with wildcard\n    return code.replace(/\\*/g, '(.+)');\n  } else if (/^[A-HJ-NPR-Z\\d]+$/.test(code) && length === code.length) {\n    return code;\n  }\n\n  throw new _errors.IllegalCodeError(code);\n}\n/**\r\n * Cleans a decoded value against a code\r\n *\r\n * @param {ParameterizedValue} decodedValue\r\n * @param {String} code\r\n * @return {String}\r\n */\n\n\nfunction validateDecodedValue(decodedValue, code) {\n  var wildcardCount = (code.match(/\\(\\.\\+\\)/g) || []).length;\n\n  var invalidRefs = _toConsumableArray(decodedValue).filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        _ = _ref2[0],\n        ref = _ref2[1];\n\n    return ref.index > wildcardCount;\n  });\n\n  if (invalidRefs.length) {\n    throw new ReferenceError(\"Invalid wildcard reference: \".concat(invalidRefs.map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          offset = _ref4[0],\n          original = _ref4[1].original;\n\n      return \"\\\"\".concat(original, \"\\\" at offset \").concat(offset);\n    }).join(', '), \" in decoded value \\\"\").concat(decodedValue.original, \"\\\" against \\\"\").concat(code, \"\\\"\"));\n  }\n}\n/**\r\n * Converts a conditional to an SQL compatible regular expression.\r\n *\r\n * @param {String} conditional\r\n * @return {Object}\r\n */\n\n\nfunction parseConditional(conditional) {\n  conditional = String(conditional).trim();\n\n  if (/^not\\s+(.+)/i.test(conditional)) {\n    return {\n      negate: true,\n      pattern: parseConditional(RegExp.$1).pattern\n    };\n  } else {\n    return {\n      negate: false,\n      pattern: conditional.split(/\\s*,\\s*/g).map(function (f) {\n        if (/^([A-HJ-NPR-Z\\d]*)\\*([A-HJ-NPR-Z\\d]*)$/.test(f)) {\n          return \"\".concat(RegExp.$1, \".\").concat(RegExp.$2);\n        } else if (/^(\\d+)\\-(\\d+)$/.test(f)) {\n          var start = Number.parseInt(RegExp.$1);\n          var end = Number.parseInt(RegExp.$2);\n\n          if (start > end) {\n            throw new _errors.IllegalConditionalError(f);\n          }\n\n          var range = [];\n\n          for (var i = start; i <= end; i++) {\n            range.push(i);\n          }\n\n          return range.join('|');\n        } else if (/^([A-HJ-NPR-Z]+)\\-([A-HJ-NPR-Z]+)$/.test(f)) {\n          return createAlphaRange(RegExp.$1, RegExp.$2).join('|');\n        } else if (/^[A-HJ-NPR-Z\\d]+$/.test(f)) {\n          return f;\n        }\n\n        throw new _errors.IllegalConditionalError(f);\n      }).join('|')\n    };\n  }\n}\n\nfunction convertAlphaToInteger(alpha) {\n  return _toConsumableArray(alpha.toUpperCase()).map(function (c) {\n    return c.charCodeAt(0) - 65;\n  }).reduce(function (s, c, i) {\n    return s + c * Math.pow(26, alpha.length - i - 1);\n  }, 0);\n}\n\nfunction convertIntegerToAlpha(integer) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var digits = [];\n\n  while (integer >= 26) {\n    digits.unshift(integer % 26);\n    integer = Math.floor(integer / 26);\n  }\n\n  digits.unshift(integer);\n\n  for (var i = 0, l = digits.length; i < length - l; i++) {\n    digits.unshift(0);\n  }\n\n  return digits.map(function (d) {\n    return String.fromCharCode(d + 65);\n  }).join('');\n}\n\nfunction createAlphaRange(from, to) {\n  if (from.length !== to.length) {\n    throw new RangeError(\"Invalid range in conditional \\\"\".concat(f, \"\\\". The lengths must be the same. For example, A-Z, AA-ZZ, or AAA-ZZZ\"));\n  }\n\n  var f = convertAlphaToInteger(from);\n  var t = convertAlphaToInteger(to);\n\n  if (f > t) {\n    throw new RangeError(\"Invalid range in conditional \\\"\".concat(f, \"\\\". The start value must not be greater than the end value\"));\n  }\n\n  var l = to.length;\n  var result = [];\n\n  for (var i = f; i <= t; i++) {\n    result.push(convertIntegerToAlpha(i, l));\n  }\n\n  return result;\n}\n/**\r\n * Parses the JSON from CSV.\r\n */\n\n\nvar Import = /*#__PURE__*/function () {\n  /**\r\n   * Constructor\r\n   */\n  function Import(json) {\n    _classCallCheck(this, Import);\n\n    // Contains errors\n    this.$errors = new Set(); // Contains warnings - for later use\n\n    this.$warnings = new Set();\n    this.$prepare(json);\n  }\n  /**\r\n   * Validates the JSON object prior to import operation\r\n   *\r\n   * @param {JSON} json\r\n   */\n\n\n  _createClass(Import, [{\n    key: \"$prepare\",\n    value: function $prepare(json) {\n      var _this = this;\n\n      if (!validateSchema(json)) {\n        // console.log(jsonValidate.errors);\n        this.$errors.add('JSON schema verification failed');\n        return;\n      }\n\n      var aggr = json.Sections.reduce(function (aggr, section) {\n        section.range = new _Range[\"default\"](section.StartPos, section.EndPos);\n        section.hasConditional = !!('string' === (0, _utils.getTypeOf)(section.AlwaysWhen) && section.AlwaysWhen.length > 0 && section.StartPosWhen && section.EndPosWhen && parseInt(section.StartPosWhen) <= parseInt(section.EndPosWhen));\n        section.headerKeys = section.Headers.map(function (h) {\n          var headerLocations = aggr.headers.get(h) || [];\n\n          if (!aggr.duplicateHeaders.has(h)) {\n            headerLocations.forEach(function (s) {\n              if (s === section || !s.range.equals(section.range) || s.range.equals(section.range) && (!s.hasConditional || !section.hasConditional)) {\n                aggr.duplicateHeaders.add(h);\n              }\n            });\n          }\n\n          headerLocations.push(section);\n          aggr.headers.set(h, headerLocations);\n          return h;\n        });\n        var key = section.range.toString();\n\n        if (!aggr.sections.has(key)) {\n          aggr.sections.set(key, section);\n        } else if (!section.hasConditional || !aggr.sections.get(key).hasConditional) {\n          _this.errors.add(\"Illegal section: \".concat(section.range.toString()));\n        }\n\n        return aggr;\n      }, {\n        headers: new Map(),\n        duplicateHeaders: new Set(),\n        sections: new Map()\n      });\n\n      var ranges = _toConsumableArray(aggr.sections.values()).map(function (s) {\n        return s.range;\n      }); // Validate ranges\n\n\n      var _iterator = _createForOfIteratorHelper(_Range[\"default\"].overlaps.apply(_Range[\"default\"], _toConsumableArray(ranges))),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              r1 = _step$value[0],\n              r2 = _step$value[1];\n\n          this.$errors.add(\"Overlapping sections: \".concat(r1.toString(), \" and \").concat(r2.toString()));\n        } // Check for missing positions\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var flatRanges = (0, _utils.flattenArray)(ranges.map(function (r) {\n        return _toConsumableArray(r);\n      }));\n      var missingPositions = [1, 2, 3, 4, 5, 6,\n      /*7, 8,*/\n      11].filter(function (p) {\n        return !flatRanges.includes(p);\n      });\n\n      if (missingPositions.length) {\n        this.$errors.add(\"Missing digits: \".concat(missingPositions.join(', ')));\n      } // Duplicate header check\n\n\n      if (aggr.duplicateHeaders.size) {\n        aggr.duplicateHeaders.forEach(function (header) {\n          _this.$errors.add(\"Duplicate header \\\"\".concat(header, \"\\\" in sections \").concat(aggr.headers.get(header).map(function (s) {\n            return s.range.toString();\n          }).join(', ')));\n        });\n      } // If position ranges are not defined correctly, import MUST be canceled.\n\n\n      if (this.hasErrors) {\n        return;\n      } // Year range covered by the JSON\n\n\n      var overallYearRange = new _Range[\"default\"](json.YearLesser, json.YearGreater); // Initialize the map.\n\n      var outMap = {\n        \"for\": overallYearRange,\n        sections: json.Sections.map(function (inSection, sectionIndex) {\n          var sectionHeaders = inSection.Headers;\n\n          if (!sectionHeaders.length) {\n            _this.$errors.add(\"No headers in section \".concat(inSection.range.toString()));\n          }\n\n          var sectionCharLength = inSection.EndPos - inSection.StartPos + 1;\n          var outSection = {\n            headers: inSection.headerKeys,\n            \"for\": inSection.range\n          };\n\n          if (inSection.hasConditional) {\n            try {\n              outSection.when = _objectSpread({\n                \"for\": new _Range[\"default\"](inSection.StartPosWhen, inSection.EndPosWhen)\n              }, parseConditional(inSection.AlwaysWhen));\n            } catch (e) {\n              _this.$errors.add(\"\".concat(e.message, \" in section \").concat(inSection.range.toString()));\n            }\n          }\n\n          outSection.variations = inSection.Rows.map(function (inSectionRow, sectionRowIndex) {\n            var sectionValues = inSectionRow.DecodedValues.map(function (v) {\n              return new _ParameterizedValue[\"default\"](v);\n            });\n            var currentContext = \"row \".concat(sectionRowIndex, \" in section \").concat(sectionIndex, \"(\").concat(inSection.range.toString(), \")\");\n\n            if (sectionHeaders.length != sectionValues.length) {\n              _this.$errors.add(\"The number of the decoded values does not match the number of the headers at \".concat(currentContext, \".\"));\n            }\n\n            var variation = {\n              values: sectionValues.map(function (v) {\n                return v.normalized;\n              }),\n              choices: []\n            };\n            var codedValues = inSectionRow.CodedValues;\n\n            if (Array.isArray(codedValues)) {\n              // type: CodedValueStringCollection\n              // This case is only valid when the year range is finite.\n              if (overallYearRange.isInfinite) {\n                _this.$errors.add(\"Coded values are given as a string collection but the year range is open-ended at \".concat(currentContext, \".\"));\n              } else if (overallYearRange.end - overallYearRange.start + 1 !== codedValues.length) {\n                // If we're given the coded values as a StringCollection\n                // the number of the values must match the number of years.\n                _this.$errors.add(\"Coded values are given as a string collection but the number of years does not match the number of the values at \".concat(currentContext, \".\"));\n              } else {\n                // If the collection is valid\n                if (codedValues.every(function (v) {\n                  return v == codedValues[0];\n                })) {\n                  // If all of the items are the same we simply add indefinite range with the value.\n                  try {\n                    variation.choices = [{\n                      pattern: parseCode(codedValues[0], sectionCharLength),\n                      \"for\": new _Range[\"default\"](null, null)\n                    }];\n                  } catch (e) {\n                    e instanceof _errors.EmptyCodeError || _this.$errors.add(\"\".concat(e.message, \" at \").concat(currentContext));\n                  }\n                } else {\n                  // type: Code\n                  // Otherwise, we just give each value a year range.\n                  variation.choices = codedValues.map(function (v, i) {\n                    try {\n                      return {\n                        pattern: parseCode(v, sectionCharLength),\n                        \"for\": new _Range[\"default\"](i + overallYearRange.start, i + overallYearRange.start)\n                      };\n                    } catch (e) {\n                      e instanceof _errors.EmptyCodeError || _this.$errors.add(\"\".concat(e.message, \" at \").concat(currentContext));\n                    }\n                  }).filter(function (c) {\n                    return !!c;\n                  });\n                }\n              }\n            } else {\n              // CodedValueString\n              try {\n                variation.choices = [{\n                  pattern: parseCode(codedValues, sectionCharLength),\n                  \"for\": new _Range[\"default\"](null, null)\n                }];\n              } catch (e) {\n                e instanceof _errors.EmptyCodeError || _this.$errors.add(\"\".concat(e.message, \" at \").concat(currentContext));\n              }\n            }\n\n            if (variation.choices.length) {\n              variation.choices.forEach(function (_ref5) {\n                var pattern = _ref5.pattern;\n                sectionValues.forEach(function (pv) {\n                  try {\n                    validateDecodedValue(pv, pattern);\n                  } catch (e) {\n                    _this.$errors.add(\"\".concat(e.message, \" at \").concat(currentContext));\n                  }\n                });\n              });\n            } else {\n              _this.$errors.add(\"No valid code values found at \".concat(currentContext));\n            }\n\n            return variation;\n          });\n          return outSection;\n        })\n      };\n\n      if (this.hasErrors) {\n        return;\n      }\n\n      this.$map = outMap;\n    }\n  }, {\n    key: \"map\",\n    get: function get() {\n      return this.$map;\n    }\n  }, {\n    key: \"hasErrors\",\n    get: function get() {\n      return this.$errors.size > 0;\n    }\n  }, {\n    key: \"hasWarnings\",\n    get: function get() {\n      return this.$warnings.size > 0;\n    }\n  }, {\n    key: \"errors\",\n    get: function get() {\n      return this.$errors;\n    }\n  }, {\n    key: \"warnings\",\n    get: function get() {\n      return this.$warnings;\n    }\n  }]);\n\n  return Import;\n}();\n\nexports[\"default\"] = Import;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Import.js"
      ],
      "names": [
        "validateSchema",
        "JSONSchemaValidator",
        "compile",
        "jsonSchema",
        "parseCode",
        "code",
        "length",
        "undefined",
        "includes",
        "EmptyCodeError",
        "toUpperCase",
        "trim",
        "split",
        "map",
        "c",
        "join",
        "e",
        "IllegalCodeError",
        "test",
        "replace",
        "validateDecodedValue",
        "decodedValue",
        "wildcardCount",
        "match",
        "invalidRefs",
        "filter",
        "_",
        "ref",
        "index",
        "ReferenceError",
        "offset",
        "original",
        "parseConditional",
        "conditional",
        "String",
        "negate",
        "pattern",
        "RegExp",
        "$1",
        "f",
        "$2",
        "start",
        "Number",
        "parseInt",
        "end",
        "IllegalConditionalError",
        "range",
        "i",
        "push",
        "createAlphaRange",
        "convertAlphaToInteger",
        "alpha",
        "charCodeAt",
        "reduce",
        "s",
        "Math",
        "pow",
        "convertIntegerToAlpha",
        "integer",
        "digits",
        "unshift",
        "floor",
        "l",
        "d",
        "fromCharCode",
        "from",
        "to",
        "RangeError",
        "t",
        "result",
        "Import",
        "json",
        "$errors",
        "Set",
        "$warnings",
        "$prepare",
        "add",
        "aggr",
        "Sections",
        "section",
        "Range",
        "StartPos",
        "EndPos",
        "hasConditional",
        "AlwaysWhen",
        "StartPosWhen",
        "EndPosWhen",
        "headerKeys",
        "Headers",
        "h",
        "headerLocations",
        "headers",
        "get",
        "duplicateHeaders",
        "has",
        "forEach",
        "equals",
        "set",
        "key",
        "toString",
        "sections",
        "errors",
        "Map",
        "ranges",
        "values",
        "overlaps",
        "r1",
        "r2",
        "flatRanges",
        "r",
        "missingPositions",
        "p",
        "size",
        "header",
        "hasErrors",
        "overallYearRange",
        "YearLesser",
        "YearGreater",
        "outMap",
        "inSection",
        "sectionIndex",
        "sectionHeaders",
        "sectionCharLength",
        "outSection",
        "when",
        "message",
        "variations",
        "Rows",
        "inSectionRow",
        "sectionRowIndex",
        "sectionValues",
        "DecodedValues",
        "v",
        "ParameterizedValue",
        "currentContext",
        "variation",
        "normalized",
        "choices",
        "codedValues",
        "CodedValues",
        "Array",
        "isArray",
        "isInfinite",
        "every",
        "pv",
        "$map"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\",
      "sourcesContent": [
        "import Range from './Range';\r\nimport jsonSchema from './schema/Import.json';\r\nimport JSONSchemaValidator from 'ajv';\r\nimport { getTypeOf, flattenArray } from './utils';\r\nimport {\r\n    EmptyCodeError,\r\n    IllegalCodeError,\r\n    ParseError,\r\n    IllegalConditionalError\r\n} from './errors';\r\nimport ParameterizedValue from './ParameterizedValue';\r\n\r\nconst validateSchema = (new JSONSchemaValidator()).compile(jsonSchema);\r\n\r\n/**\r\n * Converts a code to an SQL-compatible regular expression pattern.\r\n * Invalid codes are ignored for composite codes (comma-separated code)\r\n * Exception thrown for invalid codes that are not recognized at the moment.\r\n *\r\n * @param {String} code\r\n * @param {Number} length\r\n * @return {String}\r\n */\r\nfunction parseCode(code, length = 1) {\r\n    if ([undefined, null, '-', ''].includes(code) || 'string' !== getTypeOf(code)) {\r\n        throw new EmptyCodeError(code);\r\n    }\r\n\r\n    code = code.toUpperCase();\r\n\r\n    if (code.includes(',')) {          // \"A, B, C\"\r\n        try {\r\n            return code.trim().split(/\\s*,\\s*/g)\r\n                .map(c => parseCode(c, length))\r\n                .join('|')\r\n            ;\r\n        } catch (e) {\r\n            throw new IllegalCodeError(code);\r\n        }\r\n    // } else if (/^(?=.*\\*)(?:\\*|)(?:[A-HJ-NPR-Z\\d]+(?:\\*|)|)$/.test(code)) {   // \"*\", \"A*B\", \"A*\", \"*A\", \"*A*\"\r\n    //     return code.replace(/\\*/g, '(.+)');\r\n    } else if (/^(?=.*\\*)[A-HJ-NPR-Z\\d\\*]*$/.test(code)) {   // Code with wildcard\r\n        return code.replace(/\\*/g, '(.+)');\r\n    } else if (/^[A-HJ-NPR-Z\\d]+$/.test(code) && length === code.length) {\r\n        return code;\r\n    }\r\n\r\n    throw new IllegalCodeError(code);\r\n}\r\n\r\n/**\r\n * Cleans a decoded value against a code\r\n *\r\n * @param {ParameterizedValue} decodedValue\r\n * @param {String} code\r\n * @return {String}\r\n */\r\nfunction validateDecodedValue(decodedValue, code) {\r\n    const wildcardCount = (code.match(/\\(\\.\\+\\)/g) || []).length;\r\n    const invalidRefs = [...decodedValue].filter(([_, ref]) => {\r\n        return ref.index > wildcardCount\r\n    });\r\n\r\n    if (invalidRefs.length) {\r\n        throw new ReferenceError(`Invalid wildcard reference: ${\r\n            invalidRefs\r\n                .map(([offset, { original }]) => `\"${original}\" at offset ${offset}`)\r\n                .join(', ')\r\n        } in decoded value \"${decodedValue.original}\" against \"${code}\"`);\r\n    }\r\n}\r\n\r\n/**\r\n * Converts a conditional to an SQL compatible regular expression.\r\n *\r\n * @param {String} conditional\r\n * @return {Object}\r\n */\r\nfunction parseConditional(conditional) {\r\n    conditional = String(conditional).trim();\r\n\r\n    if (/^not\\s+(.+)/i.test(conditional)) {\r\n        return {\r\n            negate: true,\r\n            pattern: parseConditional(RegExp.$1).pattern,\r\n        };\r\n    } else {\r\n        return {\r\n            negate: false,\r\n            pattern: conditional\r\n                .split(/\\s*,\\s*/g)\r\n                .map(f => {\r\n                    if (/^([A-HJ-NPR-Z\\d]*)\\*([A-HJ-NPR-Z\\d]*)$/.test(f)) {\r\n                        return `${RegExp.$1}.${RegExp.$2}`;\r\n                    } else if (/^(\\d+)\\-(\\d+)$/.test(f)) {\r\n                        const start = Number.parseInt(RegExp.$1);\r\n                        const end = Number.parseInt(RegExp.$2);\r\n\r\n                        if (start > end) {\r\n                            throw new IllegalConditionalError(f);\r\n                        }\r\n\r\n                        const range = [];\r\n\r\n                        for (let i = start; i <= end; i++) {\r\n                            range.push(i);\r\n                        }\r\n\r\n                        return range.join('|');\r\n                    } else if (/^([A-HJ-NPR-Z]+)\\-([A-HJ-NPR-Z]+)$/.test(f)) {\r\n                        return createAlphaRange(RegExp.$1, RegExp.$2).join('|');\r\n                    } else if (/^[A-HJ-NPR-Z\\d]+$/.test(f)) {\r\n                        return f;\r\n                    }\r\n\r\n                    throw new IllegalConditionalError(f);\r\n                })\r\n                .join('|'),\r\n        };\r\n    }\r\n}\r\n\r\nfunction convertAlphaToInteger(alpha) {\r\n    return [...alpha.toUpperCase()]\r\n        .map(c => c.charCodeAt(0) - 65)\r\n        .reduce((s, c, i) => {\r\n            return s + c * Math.pow(26, alpha.length - i - 1);\r\n        }, 0)\r\n    ;\r\n}\r\n\r\nfunction convertIntegerToAlpha(integer, length = 0) {\r\n    const digits = [];\r\n\r\n    while (integer >= 26) {\r\n        digits.unshift(integer % 26);\r\n        integer = Math.floor(integer / 26);\r\n    }\r\n\r\n    digits.unshift(integer);\r\n\r\n    for (let i = 0, l = digits.length; i < length - l; i++) {\r\n        digits.unshift(0);\r\n    }\r\n\r\n    return digits.map(d => String.fromCharCode(d + 65)).join('');\r\n}\r\n\r\nfunction createAlphaRange(from, to) {\r\n    if (from.length !== to.length) {\r\n        throw new RangeError(`Invalid range in conditional \"${f}\". The lengths must be the same. For example, A-Z, AA-ZZ, or AAA-ZZZ`);\r\n    }\r\n\r\n    const f = convertAlphaToInteger(from);\r\n    const t = convertAlphaToInteger(to);\r\n\r\n    if (f > t) {\r\n        throw new RangeError(`Invalid range in conditional \"${f}\". The start value must not be greater than the end value`);\r\n    }\r\n\r\n    const l = to.length;\r\n\r\n    const result = [];\r\n\r\n    for (let i = f; i <= t; i++) {\r\n        result.push(convertIntegerToAlpha(i, l));\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Parses the JSON from CSV.\r\n */\r\nexport default class Import {\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(json) {\r\n        // Contains errors\r\n        this.$errors = new Set();\r\n\r\n        // Contains warnings - for later use\r\n        this.$warnings = new Set();\r\n\r\n        this.$prepare(json);\r\n    }\r\n\r\n    /**\r\n     * Validates the JSON object prior to import operation\r\n     *\r\n     * @param {JSON} json\r\n     */\r\n    $prepare(json) {\r\n        if (!validateSchema(json)) {\r\n            // console.log(jsonValidate.errors);\r\n            this.$errors.add('JSON schema verification failed');\r\n            return;\r\n        }\r\n\r\n        const aggr = json.Sections.reduce((aggr, section) => {\r\n            section.range = new Range(section.StartPos, section.EndPos);\r\n            section.hasConditional = !!(\r\n                'string' === getTypeOf(section.AlwaysWhen) &&\r\n                section.AlwaysWhen.length > 0 &&\r\n                section.StartPosWhen &&\r\n                section.EndPosWhen &&\r\n                parseInt(section.StartPosWhen) <= parseInt(section.EndPosWhen)\r\n            );\r\n\r\n            section.headerKeys = section.Headers.map(h => {\r\n                const headerLocations = aggr.headers.get(h) || [];\r\n                \r\n                if (!aggr.duplicateHeaders.has(h)) {\r\n                    headerLocations.forEach(s => {\r\n                        if (\r\n                            s === section ||\r\n                            !s.range.equals(section.range) ||\r\n                            (s.range.equals(section.range) && (!s.hasConditional || !section.hasConditional))\r\n                        ) {\r\n                            aggr.duplicateHeaders.add(h);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                headerLocations.push(section);\r\n                aggr.headers.set(h, headerLocations);\r\n\r\n                return h;\r\n            });\r\n\r\n            const key = section.range.toString();\r\n\r\n            if (!aggr.sections.has(key)) {\r\n                aggr.sections.set(key, section);\r\n            } else if (!section.hasConditional || !aggr.sections.get(key).hasConditional) {\r\n                this.errors.add(`Illegal section: ${section.range.toString()}`);\r\n            }\r\n\r\n            return aggr;\r\n        }, {\r\n            headers: new Map(),\r\n            duplicateHeaders: new Set(),\r\n            sections: new Map(),\r\n        });\r\n\r\n        const ranges = [...aggr.sections.values()].map(s => s.range);\r\n\r\n        // Validate ranges\r\n        for (let [r1, r2] of Range.overlaps(...ranges)) {\r\n            this.$errors.add(`Overlapping sections: ${r1.toString()} and ${r2.toString()}`);\r\n        }\r\n\r\n        // Check for missing positions\r\n        const flatRanges = flattenArray(ranges.map(r => [...r]));\r\n        const missingPositions = [1, 2, 3, 4, 5, 6, /*7, 8,*/ 11].filter(p => !flatRanges.includes(p));\r\n\r\n        if (missingPositions.length) {\r\n            this.$errors.add(`Missing digits: ${missingPositions.join(', ')}`);\r\n        }\r\n\r\n        // Duplicate header check\r\n        if (aggr.duplicateHeaders.size) {\r\n            aggr.duplicateHeaders.forEach(header => {\r\n                this.$errors.add(`Duplicate header \"${header}\" in sections ${aggr.headers.get(header).map(s => s.range.toString()).join(', ')}`);\r\n            });\r\n        }\r\n\r\n        // If position ranges are not defined correctly, import MUST be canceled.\r\n        if (this.hasErrors) {\r\n            return;\r\n        }\r\n\r\n        // Year range covered by the JSON\r\n        const overallYearRange = new Range(json.YearLesser, json.YearGreater);\r\n\r\n        // Initialize the map.\r\n        const outMap = {\r\n            for: overallYearRange,\r\n            sections: json.Sections.map((inSection, sectionIndex) => {\r\n                const sectionHeaders = inSection.Headers;\r\n    \r\n                if (!sectionHeaders.length) {\r\n                    this.$errors.add(`No headers in section ${inSection.range.toString()}`);\r\n                }\r\n    \r\n                const sectionCharLength = inSection.EndPos - inSection.StartPos + 1;\r\n                const outSection = {\r\n                    headers: inSection.headerKeys,\r\n                    for: inSection.range,\r\n                };\r\n    \r\n                if (inSection.hasConditional) {\r\n                    try {\r\n                        outSection.when = {\r\n                            for: new Range(inSection.StartPosWhen, inSection.EndPosWhen),\r\n                            ...parseConditional(inSection.AlwaysWhen),\r\n                        };\r\n                    } catch (e) {\r\n                        this.$errors.add(`${e.message} in section ${inSection.range.toString()}`);\r\n                    }\r\n                }\r\n\r\n                outSection.variations = inSection.Rows.map((inSectionRow, sectionRowIndex) => {\r\n                    const sectionValues = inSectionRow.DecodedValues.map(v => new ParameterizedValue(v));\r\n                    const currentContext = `row ${sectionRowIndex} in section ${sectionIndex}(${inSection.range.toString()})`;\r\n    \r\n                    if (sectionHeaders.length != sectionValues.length) {\r\n                        this.$errors.add(`The number of the decoded values does not match the number of the headers at ${currentContext}.`);\r\n                    }\r\n    \r\n                    const variation = { values: sectionValues.map(v => v.normalized), choices: [] };\r\n                    const codedValues = inSectionRow.CodedValues;\r\n    \r\n                    if (Array.isArray(codedValues)) {   // type: CodedValueStringCollection\r\n                        // This case is only valid when the year range is finite.\r\n                        if (overallYearRange.isInfinite) {\r\n                            this.$errors.add(`Coded values are given as a string collection but the year range is open-ended at ${currentContext}.`);\r\n                        } else if (overallYearRange.end - overallYearRange.start + 1 !== codedValues.length) {\r\n                            // If we're given the coded values as a StringCollection\r\n                            // the number of the values must match the number of years.\r\n                            this.$errors.add(`Coded values are given as a string collection but the number of years does not match the number of the values at ${currentContext}.`);\r\n                        } else { // If the collection is valid\r\n                            if (codedValues.every(v => v == codedValues[0])) {\r\n                                // If all of the items are the same we simply add indefinite range with the value.\r\n                                try {\r\n                                    variation.choices = [{\r\n                                        pattern: parseCode(codedValues[0], sectionCharLength),\r\n                                        for: new Range(null, null)\r\n                                    }];\r\n                                } catch (e) {\r\n                                    e instanceof EmptyCodeError || this.$errors.add(`${e.message} at ${currentContext}`);\r\n                                }\r\n                            } else {    // type: Code\r\n                                // Otherwise, we just give each value a year range.\r\n                                variation.choices = codedValues.map((v, i) => {\r\n                                    try {\r\n                                        return {\r\n                                            pattern: parseCode(v, sectionCharLength),\r\n                                            for: new Range(i + overallYearRange.start, i + overallYearRange.start)\r\n                                        };\r\n                                    } catch (e) {\r\n                                        e instanceof EmptyCodeError || this.$errors.add(`${e.message} at ${currentContext}`);\r\n                                    }\r\n                                }).filter(c => !!c);\r\n                            }\r\n                        }\r\n                    } else {    // CodedValueString\r\n                        try {\r\n                            variation.choices = [{\r\n                                pattern: parseCode(codedValues, sectionCharLength),\r\n                                for: new Range(null, null)\r\n                            }];\r\n                        } catch (e) {\r\n                            e instanceof EmptyCodeError || this.$errors.add(`${e.message} at ${currentContext}`);\r\n                        }\r\n                    }\r\n\r\n                    if (variation.choices.length) {\r\n                        variation.choices.forEach(({ pattern }) => {\r\n                            sectionValues.forEach(pv => {\r\n                                try {\r\n                                    validateDecodedValue(pv, pattern);\r\n                                } catch (e) {\r\n                                    this.$errors.add(`${e.message} at ${currentContext}`);\r\n                                }\r\n                            });\r\n                        });\r\n                    } else {\r\n                        this.$errors.add(`No valid code values found at ${currentContext}`);\r\n                    }\r\n\r\n                    return variation;\r\n                });\r\n\r\n                return outSection;\r\n            }),\r\n        };\r\n\r\n        if (this.hasErrors) {\r\n            return;\r\n        }\r\n\r\n        this.$map = outMap;\r\n    }\r\n\r\n    get map() {\r\n        return this.$map;\r\n    }\r\n\r\n    get hasErrors() {\r\n        return this.$errors.size > 0;\r\n    }\r\n\r\n    get hasWarnings() {\r\n        return this.$warnings.size > 0;\r\n    }\r\n\r\n    get errors() {\r\n        return this.$errors;\r\n    }\r\n\r\n    get warnings() {\r\n        return this.$warnings;\r\n    }\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601562067845
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\Range.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\Range.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\Range.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\Range.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\",
        "sourceFileName": "Range.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * Class for handling finite/infinite ranges easily\r\n */\nvar Range = /*#__PURE__*/function () {\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {number|null} start\r\n   * @param {number|null} end\r\n   */\n  function Range(start, end) {\n    _classCallCheck(this, Range);\n\n    this.start = Range.normalizeInput(start);\n    this.end = Range.normalizeInput(end);\n  }\n  /**\r\n   * Checks if this range equals another range.\r\n   *\r\n   * @param {Range} range\r\n   * @return {Boolean}\r\n   */\n\n\n  _createClass(Range, [{\n    key: \"equals\",\n    value: function equals(range) {\n      return range instanceof Range && this.start === range.start && this.end === range.end;\n    }\n    /**\r\n     * Checks if this range equals another range.\r\n     *\r\n     * @param {Range} range\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"overlapsWith\",\n    value: function overlapsWith(range) {\n      return range instanceof Range && (null === range.start && null === range.end || null === this.start && null === this.end || null === this.start && range.start <= this.end || null === this.end && range.end >= this.start || null === range.start && this.start <= range.end || null === range.end && this.end >= range.start || range.start <= this.start && this.start <= range.end || range.start <= this.end && this.end <= range.end || this.start <= range.start && range.start <= this.end || this.start <= range.end && range.end <= this.end);\n    }\n    /**\r\n     * Checks if the range is a superset of another range given passed to the method.\r\n     *\r\n     * @param {Range} range\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"includes\",\n    value: function includes(range) {\n      return range instanceof Range && (null === this.start && null === this.end || null === this.start && range.end <= this.end || null === this.end && range.start >= this.start || this.start <= range.start && range.end <= this.end);\n    }\n    /**\r\n     * Checks if the range is open-ended.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"toString\",\n\n    /**\r\n     * Returns the string representation\r\n     *\r\n     * @return {String}\r\n     */\n    value: function toString() {\n      return [String(null === this.start ? '' : this.start), String(null === this.end ? '' : this.end)].join('-');\n    }\n    /**\r\n     * Generator\r\n     */\n\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/regeneratorRuntime.mark(function value() {\n      return regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(this.values(), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n    /**\r\n     * Returns the iterator.\r\n     *\r\n     * @return {Generator<number>}\r\n     */\n\n  }, {\n    key: \"values\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function values() {\n      var i;\n      return regeneratorRuntime.wrap(function values$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!this.isInfinite) {\n                _context2.next = 2;\n                break;\n              }\n\n              throw new RangeError('Range MUST be finite!');\n\n            case 2:\n              i = this.start;\n\n            case 3:\n              if (!(i <= this.end)) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 6;\n              return i;\n\n            case 6:\n              i++;\n              _context2.next = 3;\n              break;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, values, this);\n    })\n    /**\r\n     * Collect overlaps between ranges\r\n     *\r\n     * @param  {...Range} ranges\r\n     * @return {Generator<[Range, Range]>}\r\n     */\n\n  }, {\n    key: \"isInfinite\",\n    get: function get() {\n      return null === this.start || null === this.end;\n    }\n    /**\r\n     * Checks if the range is finite.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"isFinite\",\n    get: function get() {\n      return !this.isInfinite;\n    }\n  }], [{\n    key: \"overlaps\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function overlaps() {\n      var _len,\n          ranges,\n          _key,\n          i,\n          j,\n          _args3 = arguments;\n\n      return regeneratorRuntime.wrap(function overlaps$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              for (_len = _args3.length, ranges = new Array(_len), _key = 0; _key < _len; _key++) {\n                ranges[_key] = _args3[_key];\n              }\n\n              i = ranges.length - 1;\n\n            case 2:\n              if (!(i >= 0)) {\n                _context3.next = 14;\n                break;\n              }\n\n              j = i - 1;\n\n            case 4:\n              if (!(j >= 0)) {\n                _context3.next = 11;\n                break;\n              }\n\n              if (!ranges[i].overlapsWith(ranges[j])) {\n                _context3.next = 8;\n                break;\n              }\n\n              _context3.next = 8;\n              return [ranges[i], ranges[j]];\n\n            case 8:\n              j--;\n              _context3.next = 4;\n              break;\n\n            case 11:\n              i--;\n              _context3.next = 2;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, overlaps);\n    })\n    /**\r\n     * Merges a series of rages into a single range.\r\n     *\r\n     * @param  {...Range} range\r\n     * @return {Range}\r\n     * @throws {RangeError}\r\n     */\n\n  }, {\n    key: \"merge\",\n    value: function merge() {\n      return Range.sort.apply(Range, arguments).reduce(function (merged, range) {\n        if (range.start != merged.end + 1) {\n          throw new RangeError('Ranges are not sequential!');\n        }\n\n        return new Range(merged.start, range.end);\n      });\n    }\n    /**\r\n     * Sort ranges\r\n     *\r\n     * @param  {...Range} ranges\r\n     * @return {Array<Range>}\r\n     */\n\n  }, {\n    key: \"sort\",\n    value: function sort() {\n      for (var _len2 = arguments.length, ranges = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        ranges[_key2] = arguments[_key2];\n      }\n\n      return ranges.sort(function (r1, r2) {\n        if (r1.equals(r2)) {\n          return 0;\n        } else if (null === r1.start || null !== r2.start && r1.start < r2.start) {\n          return -1;\n        } else {\n          return 1;\n        }\n      });\n    }\n    /**\r\n     * Normalizes the input value passed to the constructor.\r\n     *\r\n     * @param {*} value\r\n     * @return {number|null}\r\n     */\n\n  }, {\n    key: \"normalizeInput\",\n    value: function normalizeInput(value) {\n      value = Number.parseInt(value);\n      return isNaN(value) ? null : value;\n    }\n  }]);\n\n  return Range;\n}();\n\nexports[\"default\"] = Range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Range.js"
      ],
      "names": [
        "Range",
        "start",
        "end",
        "normalizeInput",
        "range",
        "String",
        "join",
        "Symbol",
        "iterator",
        "values",
        "isInfinite",
        "RangeError",
        "i",
        "ranges",
        "length",
        "j",
        "overlapsWith",
        "sort",
        "reduce",
        "merged",
        "r1",
        "r2",
        "equals",
        "value",
        "Number",
        "parseInt",
        "isNaN"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\",
      "sourcesContent": [
        "/**\r\n * Class for handling finite/infinite ranges easily\r\n */\r\nexport default class Range {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {number|null} start\r\n     * @param {number|null} end\r\n     */\r\n    constructor(start, end) {\r\n        this.start = Range.normalizeInput(start);\r\n        this.end = Range.normalizeInput(end);\r\n    }\r\n\r\n    /**\r\n     * Checks if this range equals another range.\r\n     *\r\n     * @param {Range} range\r\n     * @return {Boolean}\r\n     */\r\n    equals(range) {\r\n        return range instanceof Range && this.start === range.start && this.end === range.end;\r\n    }\r\n\r\n    /**\r\n     * Checks if this range equals another range.\r\n     *\r\n     * @param {Range} range\r\n     * @return {Boolean}\r\n     */\r\n    overlapsWith(range) {\r\n        return range instanceof Range && (\r\n            (null === range.start && null === range.end) ||\r\n            (null === this.start && null === this.end) ||\r\n            (null === this.start && range.start <= this.end) ||\r\n            (null === this.end && range.end >= this.start) ||\r\n            (null === range.start && this.start <= range.end) ||\r\n            (null === range.end && this.end >= range.start) ||\r\n            (range.start <= this.start && this.start <= range.end) ||\r\n            (range.start <= this.end && this.end <= range.end) ||\r\n            (this.start <= range.start && range.start <= this.end) ||\r\n            (this.start <= range.end && range.end <= this.end)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Checks if the range is a superset of another range given passed to the method.\r\n     *\r\n     * @param {Range} range\r\n     * @return {Boolean}\r\n     */\r\n    includes(range) {\r\n        return range instanceof Range && (\r\n            (null === this.start && null === this.end) ||\r\n            (null === this.start && range.end <= this.end) ||\r\n            (null === this.end && range.start >= this.start) ||\r\n            (this.start <= range.start && range.end <= this.end)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Checks if the range is open-ended.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    get isInfinite() {\r\n        return null === this.start || null === this.end;\r\n    }\r\n\r\n    /**\r\n     * Checks if the range is finite.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    get isFinite() {\r\n        return !this.isInfinite;\r\n    }\r\n\r\n    /**\r\n     * Returns the string representation\r\n     *\r\n     * @return {String}\r\n     */\r\n    toString() {\r\n        return [\r\n            String(null === this.start ? '' : this.start),\r\n            String(null === this.end ? '' : this.end),\r\n        ].join('-');\r\n    }\r\n\r\n    /**\r\n     * Generator\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.values();\r\n    }\r\n\r\n    /**\r\n     * Returns the iterator.\r\n     *\r\n     * @return {Generator<number>}\r\n     */\r\n    *values() {\r\n        if (this.isInfinite) {\r\n            throw new RangeError('Range MUST be finite!');\r\n        }\r\n\r\n        for (let i = this.start; i <= this.end; i++) {\r\n            yield i;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Collect overlaps between ranges\r\n     *\r\n     * @param  {...Range} ranges\r\n     * @return {Generator<[Range, Range]>}\r\n     */\r\n    static *overlaps(...ranges) {\r\n        // Search for overlapping ranges.\r\n        for (let i = ranges.length - 1; i >= 0; i--) {\r\n            for (let j = i - 1; j >= 0; j--) {\r\n                if (ranges[i].overlapsWith(ranges[j])) {\r\n                    yield [ranges[i], ranges[j]];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Merges a series of rages into a single range.\r\n     *\r\n     * @param  {...Range} range\r\n     * @return {Range}\r\n     * @throws {RangeError}\r\n     */\r\n    static merge(...ranges) {\r\n        return Range.sort(...ranges).reduce((merged, range) => {\r\n            if (range.start != merged.end + 1) {\r\n                throw new RangeError('Ranges are not sequential!');\r\n            }\r\n\r\n            return new Range(merged.start, range.end);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sort ranges\r\n     *\r\n     * @param  {...Range} ranges\r\n     * @return {Array<Range>}\r\n     */\r\n    static sort(...ranges) {\r\n        return ranges.sort((r1, r2) => {\r\n            if (r1.equals(r2)) {\r\n                return 0;\r\n            } else if (null === r1.start || (null !== r2.start && r1.start < r2.start)) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Normalizes the input value passed to the constructor.\r\n     *\r\n     * @param {*} value\r\n     * @return {number|null}\r\n     */\r\n    static normalizeInput(value) {\r\n        value = Number.parseInt(value);\r\n\r\n        return isNaN(value) ? null : value;\r\n    }\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601562102085
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\utils\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\utils\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\utils\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\utils\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\utils\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\utils\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\utils\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTypeOf = getTypeOf;\nexports.flattenArray = flattenArray;\n\n/**\r\n * Returns the string representation of the type of a variable\r\n * string, number, null, undefined, object, function etc\r\n *\r\n * @param {*} variable\r\n * @return {String}\r\n */\nfunction getTypeOf(variable) {\n  return Object.prototype.toString.call(variable).replace(/\\[object (.+)\\]/, '$1').toLowerCase();\n}\n/**\r\n * Flattens an array.\r\n *\r\n * @param {Array} arr\r\n */\n\n\nfunction flattenArray(arr) {\n  if (Array.isArray(arr)) {\n    return arr.reduce(function (flat, elem) {\n      return flat.concat(flattenArray(elem));\n    }, []);\n  } else {\n    return [arr];\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImdldFR5cGVPZiIsInZhcmlhYmxlIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwicmVwbGFjZSIsInRvTG93ZXJDYXNlIiwiZmxhdHRlbkFycmF5IiwiYXJyIiwiQXJyYXkiLCJpc0FycmF5IiwicmVkdWNlIiwiZmxhdCIsImVsZW0iLCJjb25jYXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7QUFPTyxTQUFTQSxTQUFULENBQW1CQyxRQUFuQixFQUE2QjtBQUNoQyxTQUFPQyxNQUFNLENBQUNDLFNBQVAsQ0FBaUJDLFFBQWpCLENBQTBCQyxJQUExQixDQUErQkosUUFBL0IsRUFBeUNLLE9BQXpDLENBQWlELGlCQUFqRCxFQUFvRSxJQUFwRSxFQUEwRUMsV0FBMUUsRUFBUDtBQUNIO0FBRUQ7Ozs7Ozs7QUFLTyxTQUFTQyxZQUFULENBQXNCQyxHQUF0QixFQUEyQjtBQUM5QixNQUFJQyxLQUFLLENBQUNDLE9BQU4sQ0FBY0YsR0FBZCxDQUFKLEVBQXdCO0FBQ3BCLFdBQU9BLEdBQUcsQ0FBQ0csTUFBSixDQUFXLFVBQUNDLElBQUQsRUFBT0MsSUFBUCxFQUFnQjtBQUM5QixhQUFPRCxJQUFJLENBQUNFLE1BQUwsQ0FBWVAsWUFBWSxDQUFDTSxJQUFELENBQXhCLENBQVA7QUFDSCxLQUZNLEVBRUosRUFGSSxDQUFQO0FBR0gsR0FKRCxNQUlPO0FBQ0gsV0FBTyxDQUFDTCxHQUFELENBQVA7QUFDSDtBQUNKIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcVFJvZ2Vyc1xcRGVza3RvcFxcVXBkYXRlIFZpbkRlY29kZXJcXGRlY29kZXJcXHV0aWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogUmV0dXJucyB0aGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSB0eXBlIG9mIGEgdmFyaWFibGVcclxuICogc3RyaW5nLCBudW1iZXIsIG51bGwsIHVuZGVmaW5lZCwgb2JqZWN0LCBmdW5jdGlvbiBldGNcclxuICpcclxuICogQHBhcmFtIHsqfSB2YXJpYWJsZVxyXG4gKiBAcmV0dXJuIHtTdHJpbmd9XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHlwZU9mKHZhcmlhYmxlKSB7XHJcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhcmlhYmxlKS5yZXBsYWNlKC9cXFtvYmplY3QgKC4rKVxcXS8sICckMScpLnRvTG93ZXJDYXNlKCk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBGbGF0dGVucyBhbiBhcnJheS5cclxuICpcclxuICogQHBhcmFtIHtBcnJheX0gYXJyXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZmxhdHRlbkFycmF5KGFycikge1xyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkge1xyXG4gICAgICAgIHJldHVybiBhcnIucmVkdWNlKChmbGF0LCBlbGVtKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiBmbGF0LmNvbmNhdChmbGF0dGVuQXJyYXkoZWxlbSkpO1xyXG4gICAgICAgIH0sIFtdKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIFthcnJdO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "getTypeOf",
        "variable",
        "Object",
        "prototype",
        "toString",
        "call",
        "replace",
        "toLowerCase",
        "flattenArray",
        "arr",
        "Array",
        "isArray",
        "reduce",
        "flat",
        "elem",
        "concat"
      ],
      "mappings": ";;;;;;;;AAAA;;;;;;;AAOO,SAASA,SAAT,CAAmBC,QAAnB,EAA6B;AAChC,SAAOC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,QAA/B,EAAyCK,OAAzC,CAAiD,iBAAjD,EAAoE,IAApE,EAA0EC,WAA1E,EAAP;AACH;AAED;;;;;;;AAKO,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AAC9B,MAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AACpB,WAAOA,GAAG,CAACG,MAAJ,CAAW,UAACC,IAAD,EAAOC,IAAP,EAAgB;AAC9B,aAAOD,IAAI,CAACE,MAAL,CAAYP,YAAY,CAACM,IAAD,CAAxB,CAAP;AACH,KAFM,EAEJ,EAFI,CAAP;AAGH,GAJD,MAIO;AACH,WAAO,CAACL,GAAD,CAAP;AACH;AACJ",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\utils\\",
      "sourcesContent": [
        "/**\r\n * Returns the string representation of the type of a variable\r\n * string, number, null, undefined, object, function etc\r\n *\r\n * @param {*} variable\r\n * @return {String}\r\n */\r\nexport function getTypeOf(variable) {\r\n    return Object.prototype.toString.call(variable).replace(/\\[object (.+)\\]/, '$1').toLowerCase();\r\n}\r\n\r\n/**\r\n * Flattens an array.\r\n *\r\n * @param {Array} arr\r\n */\r\nexport function flattenArray(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return arr.reduce((flat, elem) => {\r\n            return flat.concat(flattenArray(elem));\r\n        }, []);\r\n    } else {\r\n        return [arr];\r\n    }\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601562247257
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\errors\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\errors\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\errors\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\errors\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\errors\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\errors\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\errors\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IllegalConditionalError = exports.IllegalCodeError = exports.EmptyCodeError = exports.ParseError = void 0;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar ParseError = /*#__PURE__*/function (_Error) {\n  _inherits(ParseError, _Error);\n\n  var _super = _createSuper(ParseError);\n\n  function ParseError() {\n    _classCallCheck(this, ParseError);\n\n    return _super.apply(this, arguments);\n  }\n\n  return ParseError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.ParseError = ParseError;\n\nvar EmptyCodeError = /*#__PURE__*/function (_ParseError) {\n  _inherits(EmptyCodeError, _ParseError);\n\n  var _super2 = _createSuper(EmptyCodeError);\n\n  function EmptyCodeError(code) {\n    var _this;\n\n    _classCallCheck(this, EmptyCodeError);\n\n    _this = _super2.call(this, \"Empty code: \\\"\".concat(code, \"\\\"\"));\n    _this.code = code;\n    return _this;\n  }\n\n  return EmptyCodeError;\n}(ParseError);\n\nexports.EmptyCodeError = EmptyCodeError;\n\nvar IllegalCodeError = /*#__PURE__*/function (_ParseError2) {\n  _inherits(IllegalCodeError, _ParseError2);\n\n  var _super3 = _createSuper(IllegalCodeError);\n\n  function IllegalCodeError(code) {\n    var _this2;\n\n    _classCallCheck(this, IllegalCodeError);\n\n    _this2 = _super3.call(this, \"Illegal code: \\\"\".concat(code, \"\\\"\"));\n    _this2.code = code;\n    return _this2;\n  }\n\n  return IllegalCodeError;\n}(ParseError);\n\nexports.IllegalCodeError = IllegalCodeError;\n\nvar IllegalConditionalError = /*#__PURE__*/function (_ParseError3) {\n  _inherits(IllegalConditionalError, _ParseError3);\n\n  var _super4 = _createSuper(IllegalConditionalError);\n\n  function IllegalConditionalError(conditional) {\n    var _this3;\n\n    _classCallCheck(this, IllegalConditionalError);\n\n    _this3 = _super4.call(this, \"Illegal conditional: \\\"\".concat(conditional, \"\\\"\"));\n    _this3.conditional = conditional;\n    return _this3;\n  }\n\n  return IllegalConditionalError;\n}(ParseError);\n\nexports.IllegalConditionalError = IllegalConditionalError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlBhcnNlRXJyb3IiLCJFcnJvciIsIkVtcHR5Q29kZUVycm9yIiwiY29kZSIsIklsbGVnYWxDb2RlRXJyb3IiLCJJbGxlZ2FsQ29uZGl0aW9uYWxFcnJvciIsImNvbmRpdGlvbmFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBQWFBLFU7Ozs7Ozs7Ozs7OztpQ0FBbUJDLEs7Ozs7SUFFbkJDLGM7Ozs7O0FBQ1QsMEJBQVlDLElBQVosRUFBa0I7QUFBQTs7QUFBQTs7QUFDZCx1REFBc0JBLElBQXRCO0FBQ0EsVUFBS0EsSUFBTCxHQUFZQSxJQUFaO0FBRmM7QUFHakI7OztFQUorQkgsVTs7OztJQU92QkksZ0I7Ozs7O0FBQ1QsNEJBQVlELElBQVosRUFBa0I7QUFBQTs7QUFBQTs7QUFDZCwwREFBd0JBLElBQXhCO0FBQ0EsV0FBS0EsSUFBTCxHQUFZQSxJQUFaO0FBRmM7QUFHakI7OztFQUppQ0gsVTs7OztJQU96QkssdUI7Ozs7O0FBQ1QsbUNBQVlDLFdBQVosRUFBeUI7QUFBQTs7QUFBQTs7QUFDckIsaUVBQStCQSxXQUEvQjtBQUNBLFdBQUtBLFdBQUwsR0FBbUJBLFdBQW5CO0FBRnFCO0FBR3hCOzs7RUFKd0NOLFUiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxUUm9nZXJzXFxEZXNrdG9wXFxVcGRhdGUgVmluRGVjb2RlclxcZGVjb2RlclxcZXJyb3JzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUGFyc2VFcnJvciBleHRlbmRzIEVycm9yIHt9XHJcblxyXG5leHBvcnQgY2xhc3MgRW1wdHlDb2RlRXJyb3IgZXh0ZW5kcyBQYXJzZUVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGNvZGUpIHtcclxuICAgICAgICBzdXBlcihgRW1wdHkgY29kZTogXCIke2NvZGV9XCJgKTtcclxuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgSWxsZWdhbENvZGVFcnJvciBleHRlbmRzIFBhcnNlRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoY29kZSkge1xyXG4gICAgICAgIHN1cGVyKGBJbGxlZ2FsIGNvZGU6IFwiJHtjb2RlfVwiYCk7XHJcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIElsbGVnYWxDb25kaXRpb25hbEVycm9yIGV4dGVuZHMgUGFyc2VFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3Rvcihjb25kaXRpb25hbCkge1xyXG4gICAgICAgIHN1cGVyKGBJbGxlZ2FsIGNvbmRpdGlvbmFsOiBcIiR7Y29uZGl0aW9uYWx9XCJgKTtcclxuICAgICAgICB0aGlzLmNvbmRpdGlvbmFsID0gY29uZGl0aW9uYWw7XHJcbiAgICB9XHJcbn1cclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "ParseError",
        "Error",
        "EmptyCodeError",
        "code",
        "IllegalCodeError",
        "IllegalConditionalError",
        "conditional"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAaA,U;;;;;;;;;;;;iCAAmBC,K;;;;IAEnBC,c;;;;;AACT,0BAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,uDAAsBA,IAAtB;AACA,UAAKA,IAAL,GAAYA,IAAZ;AAFc;AAGjB;;;EAJ+BH,U;;;;IAOvBI,gB;;;;;AACT,4BAAYD,IAAZ,EAAkB;AAAA;;AAAA;;AACd,0DAAwBA,IAAxB;AACA,WAAKA,IAAL,GAAYA,IAAZ;AAFc;AAGjB;;;EAJiCH,U;;;;IAOzBK,uB;;;;;AACT,mCAAYC,WAAZ,EAAyB;AAAA;;AAAA;;AACrB,iEAA+BA,WAA/B;AACA,WAAKA,WAAL,GAAmBA,WAAnB;AAFqB;AAGxB;;;EAJwCN,U",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\errors\\",
      "sourcesContent": [
        "export class ParseError extends Error {}\r\n\r\nexport class EmptyCodeError extends ParseError {\r\n    constructor(code) {\r\n        super(`Empty code: \"${code}\"`);\r\n        this.code = code;\r\n    }\r\n}\r\n\r\nexport class IllegalCodeError extends ParseError {\r\n    constructor(code) {\r\n        super(`Illegal code: \"${code}\"`);\r\n        this.code = code;\r\n    }\r\n}\r\n\r\nexport class IllegalConditionalError extends ParseError {\r\n    constructor(conditional) {\r\n        super(`Illegal conditional: \"${conditional}\"`);\r\n        this.conditional = conditional;\r\n    }\r\n}\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601562281886
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\decoder\\\\ParameterizedValue.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\ParameterizedValue.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\ParameterizedValue.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\ParameterizedValue.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\",
        "sourceFileName": "ParameterizedValue.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ParameterizedValue = /*#__PURE__*/function () {\n  function ParameterizedValue(value) {\n    _classCallCheck(this, ParameterizedValue);\n\n    var re = /\\{\\d+\\}/g;\n    var references = new Map();\n    var match;\n\n    while (null !== (match = re.exec(value))) {\n      var index = parseInt(match[0].slice(1, -1));\n      references.set(match.index, Object.freeze({\n        original: match[0],\n        index: index,\n        normalized: \"{\".concat(index, \"}\")\n      }));\n    }\n\n    this.normalized = value.replace(re, function (_, offset) {\n      return \"{\".concat(references.get(offset).index, \"}\");\n    });\n    this.references = references;\n    this.original = value;\n  }\n\n  _createClass(ParameterizedValue, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.normalizedValue;\n    }\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/regeneratorRuntime.mark(function value() {\n      return regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(this.references, \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n  }]);\n\n  return ParameterizedValue;\n}();\n\nexports[\"default\"] = ParameterizedValue;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBhcmFtZXRlcml6ZWRWYWx1ZS5qcyJdLCJuYW1lcyI6WyJQYXJhbWV0ZXJpemVkVmFsdWUiLCJ2YWx1ZSIsInJlIiwicmVmZXJlbmNlcyIsIk1hcCIsIm1hdGNoIiwiZXhlYyIsImluZGV4IiwicGFyc2VJbnQiLCJzbGljZSIsInNldCIsIk9iamVjdCIsImZyZWV6ZSIsIm9yaWdpbmFsIiwibm9ybWFsaXplZCIsInJlcGxhY2UiLCJfIiwib2Zmc2V0IiwiZ2V0Iiwibm9ybWFsaXplZFZhbHVlIiwiU3ltYm9sIiwiaXRlcmF0b3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7SUFBcUJBLGtCO0FBQ2pCLDhCQUFZQyxLQUFaLEVBQW1CO0FBQUE7O0FBQ2YsUUFBTUMsRUFBRSxHQUFHLFVBQVg7QUFDQSxRQUFNQyxVQUFVLEdBQUcsSUFBSUMsR0FBSixFQUFuQjtBQUNBLFFBQUlDLEtBQUo7O0FBRUEsV0FBTyxVQUFVQSxLQUFLLEdBQUdILEVBQUUsQ0FBQ0ksSUFBSCxDQUFRTCxLQUFSLENBQWxCLENBQVAsRUFBMEM7QUFDdEMsVUFBTU0sS0FBSyxHQUFHQyxRQUFRLENBQUNILEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBU0ksS0FBVCxDQUFlLENBQWYsRUFBa0IsQ0FBQyxDQUFuQixDQUFELENBQXRCO0FBQ0FOLE1BQUFBLFVBQVUsQ0FBQ08sR0FBWCxDQUNJTCxLQUFLLENBQUNFLEtBRFYsRUFDaUJJLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjO0FBQ3ZCQyxRQUFBQSxRQUFRLEVBQUVSLEtBQUssQ0FBQyxDQUFELENBRFE7QUFDSEUsUUFBQUEsS0FBSyxFQUFMQSxLQURHO0FBQ0lPLFFBQUFBLFVBQVUsYUFBTVAsS0FBTjtBQURkLE9BQWQsQ0FEakI7QUFLSDs7QUFFRCxTQUFLTyxVQUFMLEdBQWtCYixLQUFLLENBQUNjLE9BQU4sQ0FBY2IsRUFBZCxFQUFrQixVQUFDYyxDQUFELEVBQUlDLE1BQUosRUFBZTtBQUMvQyx3QkFBV2QsVUFBVSxDQUFDZSxHQUFYLENBQWVELE1BQWYsRUFBdUJWLEtBQWxDO0FBQ0gsS0FGaUIsQ0FBbEI7QUFJQSxTQUFLSixVQUFMLEdBQWtCQSxVQUFsQjtBQUNBLFNBQUtVLFFBQUwsR0FBZ0JaLEtBQWhCO0FBQ0g7Ozs7K0JBRVU7QUFDUCxhQUFPLEtBQUtrQixlQUFaO0FBQ0g7O1NBRUNDLE1BQU0sQ0FBQ0MsUTs7Ozs7O0FBQ0wsNENBQU8sS0FBS2xCLFVBQVoiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxUUm9nZXJzXFxEZXNrdG9wXFxVcGRhdGUgVmluRGVjb2RlclxcZGVjb2RlclxcIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGFyYW1ldGVyaXplZFZhbHVlIHtcclxuICAgIGNvbnN0cnVjdG9yKHZhbHVlKSB7XHJcbiAgICAgICAgY29uc3QgcmUgPSAvXFx7XFxkK1xcfS9nO1xyXG4gICAgICAgIGNvbnN0IHJlZmVyZW5jZXMgPSBuZXcgTWFwKCk7XHJcbiAgICAgICAgbGV0IG1hdGNoO1xyXG5cclxuICAgICAgICB3aGlsZSAobnVsbCAhPT0gKG1hdGNoID0gcmUuZXhlYyh2YWx1ZSkpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gcGFyc2VJbnQobWF0Y2hbMF0uc2xpY2UoMSwgLTEpKTtcclxuICAgICAgICAgICAgcmVmZXJlbmNlcy5zZXQoXHJcbiAgICAgICAgICAgICAgICBtYXRjaC5pbmRleCwgT2JqZWN0LmZyZWV6ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgb3JpZ2luYWw6IG1hdGNoWzBdLCBpbmRleCwgbm9ybWFsaXplZDogYHske2luZGV4fX1gXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICB0aGlzLm5vcm1hbGl6ZWQgPSB2YWx1ZS5yZXBsYWNlKHJlLCAoXywgb2Zmc2V0KSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiBgeyR7cmVmZXJlbmNlcy5nZXQob2Zmc2V0KS5pbmRleH19YDtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5yZWZlcmVuY2VzID0gcmVmZXJlbmNlcztcclxuICAgICAgICB0aGlzLm9yaWdpbmFsID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgdG9TdHJpbmcoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubm9ybWFsaXplZFZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgICpbU3ltYm9sLml0ZXJhdG9yXSgpIHtcclxuICAgICAgICB5aWVsZCAqdGhpcy5yZWZlcmVuY2VzO1xyXG4gICAgfVxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "ParameterizedValue.js"
      ],
      "names": [
        "ParameterizedValue",
        "value",
        "re",
        "references",
        "Map",
        "match",
        "exec",
        "index",
        "parseInt",
        "slice",
        "set",
        "Object",
        "freeze",
        "original",
        "normalized",
        "replace",
        "_",
        "offset",
        "get",
        "normalizedValue",
        "Symbol",
        "iterator"
      ],
      "mappings": ";;;;;;;;;;;;;IAAqBA,kB;AACjB,8BAAYC,KAAZ,EAAmB;AAAA;;AACf,QAAMC,EAAE,GAAG,UAAX;AACA,QAAMC,UAAU,GAAG,IAAIC,GAAJ,EAAnB;AACA,QAAIC,KAAJ;;AAEA,WAAO,UAAUA,KAAK,GAAGH,EAAE,CAACI,IAAH,CAAQL,KAAR,CAAlB,CAAP,EAA0C;AACtC,UAAMM,KAAK,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAL,CAASI,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAD,CAAtB;AACAN,MAAAA,UAAU,CAACO,GAAX,CACIL,KAAK,CAACE,KADV,EACiBI,MAAM,CAACC,MAAP,CAAc;AACvBC,QAAAA,QAAQ,EAAER,KAAK,CAAC,CAAD,CADQ;AACHE,QAAAA,KAAK,EAALA,KADG;AACIO,QAAAA,UAAU,aAAMP,KAAN;AADd,OAAd,CADjB;AAKH;;AAED,SAAKO,UAAL,GAAkBb,KAAK,CAACc,OAAN,CAAcb,EAAd,EAAkB,UAACc,CAAD,EAAIC,MAAJ,EAAe;AAC/C,wBAAWd,UAAU,CAACe,GAAX,CAAeD,MAAf,EAAuBV,KAAlC;AACH,KAFiB,CAAlB;AAIA,SAAKJ,UAAL,GAAkBA,UAAlB;AACA,SAAKU,QAAL,GAAgBZ,KAAhB;AACH;;;;+BAEU;AACP,aAAO,KAAKkB,eAAZ;AACH;;SAECC,MAAM,CAACC,Q;;;;;;AACL,4CAAO,KAAKlB,UAAZ",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\decoder\\",
      "sourcesContent": [
        "export default class ParameterizedValue {\r\n    constructor(value) {\r\n        const re = /\\{\\d+\\}/g;\r\n        const references = new Map();\r\n        let match;\r\n\r\n        while (null !== (match = re.exec(value))) {\r\n            const index = parseInt(match[0].slice(1, -1));\r\n            references.set(\r\n                match.index, Object.freeze({\r\n                    original: match[0], index, normalized: `{${index}}`\r\n                })\r\n            );\r\n        }\r\n        \r\n        this.normalized = value.replace(re, (_, offset) => {\r\n            return `{${references.get(offset).index}}`;\r\n        });\r\n\r\n        this.references = references;\r\n        this.original = value;\r\n    }\r\n\r\n    toString() {\r\n        return this.normalizedValue;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield *this.references;\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1601562300341
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"filename\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\\\\CopyAritclesAttachments.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\TRogers\\\\Desktop\\\\Update VinDecoder\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\CopyAritclesAttachments.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\CopyAritclesAttachments.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\CopyAritclesAttachments.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\",
        "sourceFileName": "CopyAritclesAttachments.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar dotenv = require('dotenv');\n\nvar fs = require('fs');\n\ndotenv.config({\n  silent: true\n});\n\nvar _require = require('process'),\n    exit = _require.exit;\n\nvar parseCSV = require('csv-parse');\n\nvar _require2 = require('pg'),\n    Client = _require2.Client;\n\nvar pg = new Client({\n  user: 'postgres',\n  host: 'localhost',\n  database: 'postgres2',\n  password: 'test'\n});\npg.connect();\nvar fileImport = fs.readFileSync('./csv/OEM.csv', {\n  encoding: 'utf-8'\n});\nparseCSV(fileImport.toString('utf-8'), {\n  columns: ['FromOEM', 'FromYearFrom', 'FromYearTo', 'FromModel', 'ToOEM', 'ToYearFrom', 'ToYearTo', 'ToModel'],\n  skip_empty_lines: true,\n  from: 2\n}, /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(error, records) {\n    var lineNumber, check;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!error) {\n              _context.next = 3;\n              break;\n            }\n\n            console.log(['Error while parsing CSV: ' + error]);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            lineNumber = 0;\n            check = records.length;\n            lineNumber;\n\n          case 6:\n            if (!(lineNumber < check)) {\n              _context.next = 15;\n              break;\n            }\n\n            console.log('current Line: ', lineNumber);\n            _context.next = 10;\n            return GetArticleIDFrom(records[lineNumber].FromModel, records[lineNumber].FromYearFrom, records[lineNumber].FromYearTo === 'NEWER' ? 0 : records[lineNumber].FromYearTo).then(function (res) {\n              console.log(res.rows);\n            })[\"catch\"](function (res) {\n              console.log(res);\n            });\n\n          case 10:\n            _context.next = 12;\n            return GetArticleIDTo(records[lineNumber].ToModel, records[lineNumber].ToYearFrom, records[lineNumber].ToYearTo === 'NEWER' ? 0 : records[lineNumber].ToYearTo).then(function (res) {\n              console.log(res.rows);\n            })[\"catch\"](function (res) {\n              console.log(res);\n            });\n\n          case 12:\n            lineNumber++;\n            _context.next = 6;\n            break;\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\n\nvar GetArticleIDFrom = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(FromModel, FromYearFrom, FromYearTo) {\n    var result;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return pg.query(\"SELECT id FROM models_pg where name = '\".concat(FromModel, \"' and year_from = \").concat(FromYearFrom, \" and year_to = \").concat(FromYearTo, \" and status <> 6\"));\n\n          case 2:\n            result = _context2.sent;\n\n            if (result.rows.length === 2) {\n              console.log(\"SELECT id FROM models_pg where name = '\".concat(ToModel, \"' and year_from = \").concat(ToYearFrom, \" and year_to = \").concat(ToYearTo, \" and status <> 6\"));\n              result.rows = result.rows.splice(0, 1);\n              console.log('cleaned', result.rows);\n            }\n\n            return _context2.abrupt(\"return\", result);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function GetArticleIDFrom(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar GetArticleIDTo = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(ToModel, ToYearFrom, ToYearTo) {\n    var result;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return pg.query(\"SELECT id FROM models_pg where name = '\".concat(ToModel, \"' and year_from = \").concat(ToYearFrom, \" and year_to = \").concat(ToYearTo, \" and status <> 6\"));\n\n          case 2:\n            result = _context3.sent;\n\n            if (result.rows.length === 2) {\n              console.log(\"SELECT id FROM models_pg where name = '\".concat(ToModel, \"' and year_from = \").concat(ToYearFrom, \" and year_to = \").concat(ToYearTo, \" and status <> 6\"));\n              result.rows = result.rows.splice(1, 1);\n              console.log('cleaned', result.rows);\n            }\n\n            if (result.rows.length === 0) {\n              console.log(\"SELECT id FROM models_pg where name = '\".concat(ToModel, \"' and year_from = \").concat(ToYearFrom, \" and year_to = \").concat(ToYearTo, \" and status <> 6\"));\n            }\n\n            return _context3.abrupt(\"return\", result);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function GetArticleIDTo(_x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "CopyAritclesAttachments.js"
      ],
      "names": [
        "dotenv",
        "require",
        "fs",
        "config",
        "silent",
        "exit",
        "parseCSV",
        "Client",
        "pg",
        "user",
        "host",
        "database",
        "password",
        "connect",
        "fileImport",
        "readFileSync",
        "encoding",
        "toString",
        "columns",
        "skip_empty_lines",
        "from",
        "error",
        "records",
        "console",
        "log",
        "lineNumber",
        "check",
        "length",
        "GetArticleIDFrom",
        "FromModel",
        "FromYearFrom",
        "FromYearTo",
        "then",
        "res",
        "rows",
        "GetArticleIDTo",
        "ToModel",
        "ToYearFrom",
        "ToYearTo",
        "query",
        "result",
        "splice"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\TRogers\\Desktop\\Update VinDecoder\\",
      "sourcesContent": [
        "const dotenv = require('dotenv');\r\nconst fs = require('fs');\r\ndotenv.config({silent: true});\r\nconst { exit } = require('process');\r\nconst parseCSV = require('csv-parse');\r\nconst { Client } = require('pg');\r\nconst pg = new Client({\r\n    user: 'postgres',\r\n    host: 'localhost',\r\n    database: 'postgres2',\r\n    password: 'test'\r\n});\r\n  \r\npg.connect();\r\n\r\n\r\nlet fileImport = fs.readFileSync('./csv/OEM.csv', {encoding: 'utf-8'});\r\n\r\nparseCSV(fileImport.toString('utf-8'), {\r\n    columns: ['FromOEM', 'FromYearFrom', 'FromYearTo', 'FromModel', 'ToOEM', 'ToYearFrom', 'ToYearTo', 'ToModel'],\r\n    skip_empty_lines: true,\r\n    from: 2,\r\n}, async (error, records) => {\r\n    if (error) {\r\n        console.log(['Error while parsing CSV: ' + error]);\r\n        return;\r\n    }\r\n    let lineNumber = 0;\r\n    let check = records.length;\r\n    for (lineNumber; lineNumber < check; lineNumber++) {\r\n        console.log('current Line: ', lineNumber)\r\n        await GetArticleIDFrom(records[lineNumber].FromModel, records[lineNumber].FromYearFrom, records[lineNumber].FromYearTo === 'NEWER'? 0: records[lineNumber].FromYearTo)\r\n        .then(function (res) {\r\n            console.log(res.rows);  \r\n        })\r\n        .catch(function (res) {\r\n            console.log(res);  \r\n        });\r\n\r\n        await GetArticleIDTo(records[lineNumber].ToModel, records[lineNumber].ToYearFrom, records[lineNumber].ToYearTo === 'NEWER'? 0: records[lineNumber].ToYearTo)\r\n        .then(function (res) {\r\n            console.log(res.rows);  \r\n        })\r\n        .catch(function (res) {\r\n            console.log(res); \r\n        });\r\n    }    \r\n});  \r\n\r\n\r\nconst GetArticleIDFrom = async (FromModel, FromYearFrom, FromYearTo) => {\r\n    let result =  await pg.query(`SELECT id FROM models_pg where name = '${FromModel}' and year_from = ${FromYearFrom} and year_to = ${FromYearTo} and status <> 6`)\r\n    if (result.rows.length === 2) {\r\n        console.log(`SELECT id FROM models_pg where name = '${ToModel}' and year_from = ${ToYearFrom} and year_to = ${ToYearTo} and status <> 6`);\r\n        result.rows = result.rows.splice(0, 1);\r\n        console.log('cleaned', result.rows);\r\n    }\r\n\r\n    return result;\r\n    \r\n}\r\n\r\n\r\nconst GetArticleIDTo = async (ToModel, ToYearFrom, ToYearTo) => {\r\n    let result =  await pg.query(`SELECT id FROM models_pg where name = '${ToModel}' and year_from = ${ToYearFrom} and year_to = ${ToYearTo} and status <> 6`)\r\n    if (result.rows.length === 2) {\r\n        console.log(`SELECT id FROM models_pg where name = '${ToModel}' and year_from = ${ToYearFrom} and year_to = ${ToYearTo} and status <> 6`);\r\n        result.rows = result.rows.splice(1, 1);\r\n        console.log('cleaned', result.rows);\r\n    } \r\n    if (result.rows.length === 0) {  \r\n        console.log(`SELECT id FROM models_pg where name = '${ToModel}' and year_from = ${ToYearFrom} and year_to = ${ToYearTo} and status <> 6`);\r\n    }\r\n    return result;\r\n    \r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1603312639366
  }
}